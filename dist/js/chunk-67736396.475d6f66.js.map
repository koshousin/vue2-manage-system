{"version":3,"sources":["webpack:///./node_modules/vue-chartjs/legacy/index.js","webpack:///./node_modules/chart.js/dist/chunks/helpers.segment.js","webpack:///./node_modules/chart.js/dist/chart.esm.js"],"names":["ChartEmits","chartCreate","createChartFunction","chartData","chartOptions","context","undefined","emit","ChartRendered","chartUpdate","chart","update","ChartUpdated","chartDestroy","destroy","ChartDestroyed","getChartData","data","datasetIdKey","nextData","labels","datasets","setChartDatasets","oldData","newData","addedDatasets","map","nextDataset","currentDataset","find","dataset","includes","push","Object","assign","setChartLabels","LabelsUpdated","setChartOptions","options","compareData","newDatasetLabels","label","oldDatasetLabels","length","every","value","index","templateError","ANNOTATION_PLUGIN_KEY","generateChart","chartId","chartType","chartController","_chartRef","props","type","required","default","String","width","Number","height","cssClasses","styles","plugins","Array","_chart","computed","ref","ref1","pluginSettings","this","register","current","renderChart","$emit","watch","handler","newValue","oldValue","chartDataHandler","deep","chartOptionsHandler","methods","currentChart","getCurrentChart","$refs","canvas","Error","canvasEl2DContext","getContext","setCurrentChart","keys","isEqualLabelsAndDatasetsLength","updateChart","hasAnnotationPlugin","$data","render","createElement","style","class","attrs","id","Bar","Doughnut","Line","Pie","requestAnimFrame","window","callback","requestAnimationFrame","throttled","fn","thisArg","updateFn","updateArgs","args","prototype","slice","call","ticking","rest","apply","debounce","delay","timeout","clearTimeout","setTimeout","_toLeftRightCenter","align","_alignStartEnd","start","end","_textX","left","right","rtl","check","noop","uid","isNullOrUndef","isArray","toString","isObject","isNumberFinite","isFinite","finiteOrDefault","defaultValue","valueOrDefault","toPercentage","dimension","endsWith","parseFloat","toDimension","each","loopable","reverse","i","len","_elementsEqual","a0","a1","ilen","v0","v1","datasetIndex","clone$1","source","target","create","klen","k","isValidKey","key","indexOf","_merger","tval","sval","merge","sources","merger","mergeIf","_mergerIf","hasOwnProperty","emptyString","dot","indexOfDotOrLength","idx","resolveObjectKey","obj","pos","_capitalize","str","charAt","toUpperCase","defined","isFunction","setsEqual","a","b","size","item","has","_isClickEvent","e","PI","Math","TAU","PITAU","INFINITY","POSITIVE_INFINITY","RAD_PER_DEG","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","log10","sign","niceNum","range","roundedRange","round","almostEquals","niceRange","pow","floor","fraction","niceFraction","_factorize","result","sqrt","sort","pop","isNumber","n","isNaN","x","y","epsilon","abs","almostWhole","rounded","_setMinAndMaxByKey","array","property","min","max","toRadians","degrees","toDegrees","radians","_decimalPlaces","p","getAngleFromPoint","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","angle","atan2","distance","distanceBetweenPoints","pt1","pt2","_angleDiff","_normalizeAngle","_angleBetween","sameAngleIsFullCircle","s","angleToStart","angleToEnd","startToAngle","endToAngle","_limitValue","_int16Range","_isBetween","atEdge","t","elasticIn","sin","elasticOut","effects","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","cos","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInBounce","easeOutBounce","m","d","easeInOutBounce","v","lim","l","h","p2b","n2b","b2n","n2p","map$1","0","1","2","3","4","5","6","7","8","9","A","B","C","D","E","F","c","f","hex","h1","h2","eq","isShort","r","g","hexParse","ret","hexString","HUE_RE","hsl2rgbn","hsv2rgbn","hwb2rgbn","w","rgb","hueValue","rgb2hsl","calln","hsl2rgb","hwb2rgb","hsv2rgb","hue","hueParse","exec","p1","p2","rotate","deg","hslString","Z","Y","X","W","V","U","T","S","R","Q","P","O","N","M","L","K","G","H","I","J","names$1","OiceXe","antiquewEte","aqua","aquamarRe","azuY","beige","bisque","black","blanKedOmond","Xe","XeviTet","bPwn","burlywood","caMtXe","KartYuse","KocTate","cSO","cSnflowerXe","cSnsilk","crimson","cyan","xXe","xcyan","xgTMnPd","xWay","xgYF","xgYy","xkhaki","xmagFta","xTivegYF","xSange","xScEd","xYd","xsOmon","xsHgYF","xUXe","xUWay","xUgYy","xQe","xviTet","dAppRk","dApskyXe","dimWay","dimgYy","dodgerXe","fiYbrick","flSOwEte","foYstWAn","fuKsia","gaRsbSo","ghostwEte","gTd","gTMnPd","Way","gYF","gYFLw","gYy","honeyMw","hotpRk","RdianYd","Rdigo","ivSy","khaki","lavFMr","lavFMrXsh","lawngYF","NmoncEffon","ZXe","ZcSO","Zcyan","ZgTMnPdLw","ZWay","ZgYF","ZgYy","ZpRk","ZsOmon","ZsHgYF","ZskyXe","ZUWay","ZUgYy","ZstAlXe","ZLw","lime","limegYF","lRF","magFta","maPon","VaquamarRe","VXe","VScEd","VpurpN","VsHgYF","VUXe","VsprRggYF","VQe","VviTetYd","midnightXe","mRtcYam","mistyPse","moccasR","navajowEte","navy","Tdlace","Tive","TivedBb","Sange","SangeYd","ScEd","pOegTMnPd","pOegYF","pOeQe","pOeviTetYd","papayawEp","pHKpuff","peru","pRk","plum","powMrXe","purpN","YbeccapurpN","Yd","Psybrown","PyOXe","saddNbPwn","sOmon","sandybPwn","sHgYF","sHshell","siFna","silver","skyXe","UXe","UWay","UgYy","snow","sprRggYF","stAlXe","tan","teO","tEstN","tomato","Qe","viTet","JHt","wEte","wEtesmoke","Lw","LwgYF","unpack","unpacked","tkeys","j","ok","nk","replace","parseInt","nameParse","transparent","toLowerCase","RGB_RE","rgbParse","rgbString","interpolate","rgb1","rgb2","modHSL","ratio","tmp","clone","proto","fromObject","input","functionParse","Color","_rgb","_valid","color","weight","c1","c2","w2","w1","val","index_esm","isPatternOrGradient","getHoverColor","saturate","darken","overrides","getScope$1","node","split","root","scope","values","Defaults","_descriptors","animation","backgroundColor","borderColor","devicePixelRatio","platform","getDevicePixelRatio","elements","events","font","family","lineHeight","hover","hoverBackgroundColor","ctx","hoverBorderColor","hoverColor","indexAxis","interaction","mode","intersect","includeInvisible","maintainAspectRatio","onHover","onClick","parsing","responsive","scale","scales","showLine","drawActiveElementsOnTop","describe","name","targetScope","targetName","scopeObject","targetScopeObject","privateName","defineProperties","writable","enumerable","local","defaults","_scriptable","startsWith","_indexable","_fallback","toFontString","_measureText","gc","longest","string","textWidth","measureText","_longestText","arrayOfThings","cache","garbageCollect","save","jlen","thing","nestedThing","restore","gcLen","splice","_alignPixel","pixel","currentDevicePixelRatio","halfWidth","clearCanvas","resetTransform","clearRect","drawPoint","xOffset","yOffset","cornerRadius","pointStyle","rotation","radius","rad","translate","drawImage","beginPath","arc","closePath","moveTo","lineTo","SQRT1_2","rect","fill","borderWidth","stroke","_isPointInArea","point","area","margin","top","bottom","clipArea","clip","unclipArea","_steppedLineTo","previous","flip","midpoint","_bezierCurveTo","bezierCurveTo","cp1x","cp2x","cp1y","cp2y","renderText","text","opts","lines","strokeWidth","strokeColor","line","setRenderOpts","strokeStyle","lineWidth","strokeText","maxWidth","fillText","decorateText","translation","fillStyle","textAlign","textBaseline","strikethrough","underline","metrics","actualBoundingBoxLeft","actualBoundingBoxRight","actualBoundingBoxAscent","actualBoundingBoxDescent","yDecoration","decorationWidth","addRoundedRectPath","topLeft","bottomLeft","bottomRight","topRight","LINE_HEIGHT","RegExp","FONT_STYLE","toLineHeight","matches","match","numberOrZero","_readValueToProps","objProps","read","prop","toTRBL","toTRBLCorners","toPadding","toFont","fallback","console","warn","resolve","inputs","info","cacheable","_addGrace","minmax","grace","beginAtZero","change","keepZero","add","createContext","parentContext","_lookup","table","cmp","mid","hi","lo","_lookupByKey","_rlookupByKey","_filterBetween","arrayEvents","listenArrayEvents","listener","_chartjs","listeners","defineProperty","configurable","forEach","method","base","res","object","unlistenArrayEvents","stub","_arrayUnique","items","set","Set","from","_createResolver","scopes","prefixes","rootScopes","getTarget","_resolve","Symbol","toStringTag","_cacheable","_scopes","_rootScopes","_getTarget","override","Proxy","_keys","_cached","_resolveWithPrefixes","Reflect","getOwnPropertyDescriptor","getPrototypeOf","getKeysFromAllScopes","storage","_storage","_attachContext","proxy","subProxy","descriptorDefaults","_proxy","_context","_subProxy","_stack","setContext","receiver","_resolveWithContext","allKeys","ownKeys","scriptable","indexable","_allKeys","isScriptable","isIndexable","readKey","prefix","needsSubResolver","constructor","descriptors","_resolveScriptable","_resolveArray","join","delete","createSubResolver","arr","filter","resolver","resolveFallback","getScope","parent","addScopes","parentScopes","parentFallback","allScopes","addScopesFromKey","subGetTarget","resolveKeysFromAllScopes","_parseObjectDataRadialScale","meta","count","iScale","_parsing","parsed","parse","EPSILON","getPoint","points","skip","getValueAxis","splineCurve","firstPoint","middlePoint","afterPoint","next","d01","d12","s01","s12","fa","fb","monotoneAdjust","deltaK","mK","pointsLen","alphaK","betaK","tauK","squaredMagnitude","pointCurrent","pointAfter","monotoneCompute","valueAxis","delta","pointBefore","iPixel","vPixel","splineCurveMonotone","slopeDelta","capControlPoint","pt","capBezierPoints","inArea","inAreaPrev","inAreaNext","_updateBezierControlPoints","loop","controlPoints","spanGaps","cubicInterpolationMode","prev","tension","_isDomSupported","document","_getParentNode","domNode","parentNode","host","parseMaxStyle","styleValue","parentProperty","valueInPixels","getComputedStyle","element","getStyle","el","getPropertyValue","positions","getPositionedStyle","suffix","useOffsetPos","shadowRoot","getCanvasPosition","touches","offsetX","offsetY","box","getBoundingClientRect","clientX","clientY","getRelativePosition","evt","borderBox","boxSizing","paddings","borders","getContainerSize","maxHeight","container","containerStyle","containerBorder","containerPadding","clientWidth","clientHeight","round1","getMaximumSize","bbWidth","bbHeight","aspectRatio","margins","containerSize","retinaScale","forceRatio","forceStyle","pixelRatio","deviceHeight","deviceWidth","setTransform","supportsEventListenerOptions","passiveSupported","addEventListener","removeEventListener","readUsedSize","_pointInLine","_steppedInterpolation","_bezierInterpolation","cp1","cp2","intlCache","Map","getNumberFormat","locale","cacheKey","JSON","stringify","formatter","get","Intl","NumberFormat","formatNumber","num","format","getRightToLeftAdapter","rectX","itemWidth","getLeftToRightAdapter","_itemWidth","getRtlAdapter","overrideTextDirection","direction","original","getPropertyPriority","setProperty","prevTextDirection","restoreTextDirection","propertyFn","between","compare","normalize","normalizeSegment","getSegment","segment","bounds","startBound","endBound","_boundSegment","prevValue","inside","subStart","startIsBefore","endIsBefore","shouldStart","shouldStop","_boundSegments","segments","sub","findStartAndEnd","solidSegments","last","cur","stop","_computeSegments","segmentOptions","_loop","splitByStyles","completeLoop","_fullLoop","doSplitByStyles","chartContext","baseStyle","readStyle","_datasetIndex","prevStyle","addStyle","st","dir","p0","p0DataIndex","p1DataIndex","styleChanged","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","_request","_charts","_running","_lastDate","anims","date","callbacks","numSteps","duration","initial","currentStep","_update","_refresh","Date","now","remaining","running","draw","_active","_total","tick","_notify","charts","complete","progress","event","cb","_getAnims","reduce","acc","_duration","cancel","animator","interpolators","to","factor","c0","valid","mix","cfg","currentValue","_fn","_easing","easing","_start","_target","_prop","_from","_to","_promises","elapsed","remain","promises","Promise","rej","resolved","numbers","colors","properties","active","resize","show","animations","visible","hide","config","_properties","configure","animatedProps","getOwnPropertyNames","option","newOptions","resolveTargetOptions","_createAnimations","$shared","awaitAll","$animations","then","_animateOptions","anim","wait","all","scaleClip","allowedOverflow","defaultClip","xScale","yScale","toClip","disabled","getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","applyStack","stack","dsIndex","singleMode","otherValue","convertObjectDataToArray","adata","isStacked","stacked","getStackKey","indexScale","valueScale","getUserBounds","minDefined","maxDefined","NEGATIVE_INFINITY","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","vScale","positive","getMatchingVisibleMetas","updateStacks","controller","_cachedMeta","_stacks","iAxis","axis","vAxis","itemStacks","_top","_bottom","getFirstScaleId","shift","createDatasetContext","createDataContext","dataIndex","raw","clearStacks","_parsed","isDirectUpdateMode","cloneIfNotShared","cached","shared","createStack","canStack","hidden","_stacked","_ctx","_cachedDataOpts","getMeta","_type","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","supportsDecimation","$context","_syncList","initialize","linkScales","addElements","getDataset","chooseId","xid","xAxisID","yid","yAxisID","rid","rAxisID","iid","iAxisID","vid","vAxisID","getScaleForId","rScale","getDatasetMeta","scaleID","isExtensible","_dataCheck","datasetElementType","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","getOptionScopes","createResolver","sorted","_sorted","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","getLabels","singleScale","xAxisKey","yAxisKey","parsedValue","NaN","otherScale","_getOtherScale","otherMin","otherMax","_skip","updateRangeFromParsed","getParsed","getLabelForValue","_clip","getMaxOverflow","chartArea","resolveDatasetElementOptions","resolveDataElementOptions","_resolveElementOptions","dataElementType","elementType","sharing","datasetElementScopeKeys","names","resolveNamedOptions","freeze","transition","datasetAnimationScopeKeys","sharedOptions","_animationsDisabled","_resolveAnimations","getSharedOptions","_setStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","updateElements","removed","_dataChanges","arguments","_sync","newCount","getAllScaleValues","_cache","$bar","visibleMetas","concat","getAllParsedValues","computeMinSampleSize","curr","_length","updateMinAndPrev","getPixelForValue","ticks","getPixelForTick","computeFitCategoryTraits","ruler","stackCount","thickness","barThickness","categoryPercentage","barPercentage","chunk","pixels","computeFlexCategoryTraits","percent","parseFloatBar","entry","startValue","endValue","barStart","barEnd","_custom","parseValue","parseArrayOrPrimitive","isFloatBar","custom","barSign","actualBase","isHorizontal","borderProps","horizontal","setBorderSkipped","edge","borderSkipped","enableBorderRadius","parseEdge","swap","startEnd","orig","v2","setInflateAmount","inflateAmount","iAxisKey","vAxisKey","super","bars","reset","getBasePixel","_getRuler","firstOpts","includeOptions","updateSharedOptions","vpixels","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","center","updateElement","grouped","_getStacks","_startPixel","_endPixel","_getStackCount","baseValue","minBarLength","floating","getDataVisibility","startPixel","getPixelForDecimal","endPixel","halfGrid","getLineWidthForValue","skipNull","maxBarThickness","Infinity","stackIndex","_getStackIndex","rects","_index_","offset","grid","_value_","getRatioAndOffset","circumference","cutout","ratioX","ratioY","startAngle","endAngle","startX","startY","endX","endY","calcMax","calcMin","maxX","maxY","minX","minY","tooltip","innerRadius","outerRadius","getter","isDatasetVisible","_getRotation","_getCircumference","arcs","spacing","getMaxBorderWidth","getMaxOffset","maxSize","chartWeight","_getRingWeight","_getRotationExtents","maxRadius","radiusLength","_getVisibleDatasetWeightTotal","total","calculateTotal","_getRingWeightOffset","animateRotate","calculateCircumference","animationOpts","centerX","centerY","animateScale","_circumference","metaData","borderAlign","hoverBorderWidth","hoverOffset","ringWeightOffset","legend","legendItem","toggleDataVisibility","tooltipItem","dataLabel","formattedValue","_dataset","animationsDisabled","getStartAndCountOfVisiblePoints","scaleRangesChanged","_decimated","animated","maxGapLength","directUpdate","prevParsed","nullData","border","lastPoint","updateControlPoints","pointCount","_scaleRanges","newRanges","xmin","xmax","ymin","ymax","changed","bind","_updateRadius","minSize","cutoutPercentage","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getIndexAngle","defaultAngle","countVisibleElements","_computeAngle","getDistanceFromCenterForValue","angleLines","display","circular","pointLabels","PieController","pointPosition","getPointPositionForValue","ScatterController","DateAdapter","timestamp","amount","unit","weekday","members","adapters","_date","binarySearch","metaset","lookupMethod","_reversePixels","getRange","evaluateInteractionItems","position","getSortedVisibleDatasetMetas","getDistanceMetricForAxis","useX","useY","deltaX","deltaY","getIntersectItems","useFinalPosition","isPointInArea","evaluationFunc","inRange","getNearestRadialItems","getProps","getNearestCartesianItems","distanceMetric","minDistance","getCenterPoint","pointInArea","getNearestItems","getAxisItems","rangeMethod","intersectsItem","Interaction","modes","STATIC_POSITIONS","filterByPosition","filterDynamicPositionByAxis","sortByWeight","wrapBoxes","boxes","layoutBoxes","stackWeight","buildStacks","layouts","wrap","placed","setLayoutDims","params","vBoxMaxWidth","hBoxMaxHeight","layout","fullSize","availableWidth","availableHeight","buildLayoutBoxes","centerHorizontal","centerVertical","leftAndTop","rightAndBottom","vertical","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","heightChanged","same","other","handleMaxPadding","updatePos","getMargins","marginForPositions","fitBoxes","refitBoxes","refit","setBoxDims","placeBoxes","userPadding","padding","autoPadding","_layers","z","layoutItem","minPadding","verticalBoxes","horizontalBoxes","beforeLayout","visibleVerticalBoxCount","BasePlatform","BasicPlatform","EXPANDO_KEY","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","initCanvas","renderHeight","getAttribute","renderWidth","displayWidth","displayHeight","eventListenerOptions","passive","addListener","removeListener","fromNativeEvent","native","nodeListContains","nodeList","contains","createAttachObserver","observer","MutationObserver","entries","trigger","addedNodes","removedNodes","observe","childList","subtree","createDetachObserver","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","listenDevicePixelRatioChanges","unlistenDevicePixelRatioChanges","createResizeObserver","ResizeObserver","contentRect","releaseObserver","disconnect","createProxyAndListen","removeAttribute","setAttribute","proxies","$proxies","handlers","attach","detach","isConnected","_detectPlatform","OffscreenCanvas","final","defaultRoutes","formatters","tickValue","notation","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","numeric","Ticks","autoSkip","tickOpts","ticksLimit","maxTicksLimit","determineMaxTicks","majorIndices","major","enabled","getMajorIndices","numMajorIndices","first","newTicks","skipMajors","calculateSpacing","avgMajorSpacing","tickLength","_tickSize","maxScale","maxChart","_maxLength","evenMajorSpacing","getEvenSpacing","factors","ceil","majorStart","majorEnd","diff","drawBorder","drawOnChartArea","drawTicks","tickWidth","tickColor","title","minRotation","maxRotation","mirror","textStrokeWidth","textStrokeColor","autoSkipPadding","labelOffset","minor","crossAlign","showLabelBackdrop","backdropColor","backdropPadding","route","reverseAlign","offsetFromEdge","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","lineValue","caches","getTickMarkLength","getTitleHeight","createScaleContext","createTickContext","titleAlign","titleArgs","titleX","titleY","positionAxisID","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_dataLimitsCached","suggestedMin","suggestedMax","metas","getMinMax","xLabels","yLabels","beforeUpdate","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","afterAutoSkip","beforeFit","fit","afterFit","afterUpdate","reversePixels","_alignToPixels","alignToPixels","notifyPlugins","_callHooks","beforeTickToLabelConversion","afterTickToLabelConversion","numTicks","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","asin","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","generateTickLabels","_computeLabelSizes","widths","heights","tickFont","fontString","nestedLabel","widestLabelSize","highestLabelSize","_resolveTickFontOptions","valueAt","decimal","getBaseValue","optionTicks","rot","ticksLength","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","limit","step","optsAtIndex","lineColor","tickBorderDash","tickBorderDashOffset","tickAndPadding","hTickAndPadding","lineCount","textOffset","_getXAxisLabelAlignment","_getYAxisLabelAlignment","halfCount","backdrop","tickTextAlign","labelPadding","fillRect","findIndex","_computeGridLineItems","drawLine","setLineDash","lineDashOffset","lastLineWidth","_computeLabelArea","_computeLabelItems","drawBackground","drawGrid","drawTitle","drawLabels","tz","gz","axisID","fontSize","isPrototypeOf","parentScope","isIChartComponent","registerDefaults","itemDefaults","routeDefaults","routes","propertyParts","sourceName","sourceScope","parts","controllers","_typedRegistries","_each","_get","typedRegistry","arg","reg","_getRegistryForType","isForType","_exec","itemReg","registry","component","camelMethod","_init","hook","_createDescriptors","descriptor","plugin","cancelable","_oldCache","_notifyStateChanges","allPlugins","createDescriptors","previousDescriptors","some","getPlugin","getOpts","pluginOpts","pluginScopeKeys","getIndexAxis","datasetDefaults","datasetOptions","getAxisFromDefaultScaleID","getDefaultScaleIDFromAxis","axisFromPosition","determineAxis","scaleOptions","mergeScaleConfig","chartDefaults","configScales","chartIndexAxis","firstIDs","scaleConf","error","defaultId","defaultScaleOptions","defaultID","initOptions","initData","initConfig","keyCache","keysCached","cachedKeys","generate","addIfFound","_config","_scopeCache","_resolverCache","clearCache","clear","datasetType","additionalOptionScopes","mainScope","resetCache","keyLists","_cachedScopes","subPrefixes","getResolver","needContext","subResolver","resolverCache","hasFunction","version","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","animationOptions","onComplete","onAnimationProgress","onProgress","getCanvas","getElementById","instances","getChart","moveNumericKeys","intKey","determineLastEvent","lastEvent","inChartArea","isClick","userConfig","initialCanvas","existingChart","chartOptionScopes","updateConfig","acquireContext","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","resizeDelay","listen","_initialize","bindEvents","_resizeBeforeDraw","_resize","newSize","newRatio","onResize","scalesOptions","axisOptions","scaleOpts","updated","isRadial","dposition","dtype","scaleType","scaleClass","getScale","init","hasUpdated","addBox","_destroyDatasetMeta","newControllers","_removeUnreferencedMetasets","order","updateIndex","ControllerClass","getController","getElement","_updateMetasets","_resetElements","animsDisabled","_updateScales","_checkEventBindings","_updateHiddenIndices","invalidate","buildOrUpdateControllers","buildOrUpdateElements","_minPadding","_updateLayout","_updateDatasets","_eventHandler","_updateHoverStyles","removeBox","ensureScalesHaveIDs","buildOrUpdateScales","existingEvents","newEvents","unbindEvents","changes","_getUniformDataChanges","datasetCount","makeSet","changeSet","noArea","_idx","_updateDataset","layers","_drawDatasets","_drawDataset","useClip","setDatasetVisibility","_updateVisibility","_destroy","remove","_stop","releaseContext","toDataURL","bindUserEvents","bindResponsiveEvents","_add","_remove","detached","isAttached","activeElements","lastActive","notify","replay","hoverOptions","deactivated","activated","updateHoverStyle","eventFilter","_handleEvent","_getActiveElements","getElementsAtEventForMode","invalidatePlugins","clipArc","pixelMargin","angleMargin","toRadiusCorners","parseBorderRadius$1","angleDelta","o","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","outerStart","outerEnd","innerStart","innerEnd","rThetaToXY","theta","pathArc","innerR","spacingOffset","alpha","noSpacingInnerRadius","noSpacingOuterRadius","avNogSpacingRadius","adjustedAngle","beta","angleOffset","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","pCenter","p4","p8","drawArc","fullCircles","drawFullCircleBorders","inner","lineJoin","unregister","chartX","chartY","rAdjust","betweenAngles","withinRadius","halfAngle","halfRadius","radiusOffset","setStyle","lineCap","getLineMethod","stepped","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","fastPathSegment","prevX","lastY","avgX","countX","pointIndex","drawX","truncX","_getSegmentMethod","useFastPath","_getInterpolationMethod","strokePathWithCache","path","_path","Path2D","strokePathDirect","segmentMethod","usePath2D","_points","_segments","_pointsUpdated","_interpolate","interpolated","inRange$1","hitRadius","mouseX","mouseY","hoverRadius","getBarBounds","bar","half","skipOrLimit","parseBorderWidth","maxW","maxH","parseBorderRadius","maxR","enableBorder","boundingRects","outer","skipX","skipY","skipBoth","hasRadius","addNormalRectPath","inflateRect","refRect","addRectPath","getBoxSize","labelOpts","boxHeight","boxWidth","usePointStyle","itemHeight","itemsEqual","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","generateLabels","labelFont","_computeTitleHeight","_fitRows","_fitCols","hitboxes","totalHeight","row","heightLimit","totalWidth","currentColWidth","currentColHeight","col","rtlHelper","hitbox","leftForLtr","_draw","defaultColor","fontColor","halfFontSize","cursor","drawLegendBox","lineDash","drawOptions","SQRT2","xPlus","yBoxTop","xBoxLeft","textDirection","setWidth","realX","titleFont","titlePadding","topPaddingPlusHalfFontSize","hitBox","lh","isListened","hoveredItem","_getLegendItemAt","sameItem","onLeave","plugin_legend","_element","_args","adjustHitBoxes","handleEvent","ci","_padding","textSize","fontOpts","_drawArgs","createTitle","titleBlock","plugin_title","WeakMap","positioners","hasValue","tooltipPosition","eventPosition","nearestElement","tp","pushOrConcat","toPush","splitNewlines","createTooltipItem","getLabelAndValue","getTooltipSize","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","bodyLineHeight","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineYAlign","doesNotFitWithAlign","xAlign","caret","caretSize","caretPadding","determineXAlign","yAlign","chartWidth","determineAlignment","alignX","alignY","paddingAndSize","getBackgroundPoint","alignment","getAlignedX","getBeforeAfterBodyLines","createTooltipContext","tooltipItems","overrideCallbacks","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","beforeTitle","afterTitle","bodyItems","scoped","beforeLabel","afterLabel","beforeFooter","afterFooter","itemSort","labelColor","labelPointStyle","labelTextColor","_createItems","getTitle","getBeforeBody","getBody","getAfterBody","getFooter","positionAndSize","backgroundPoint","external","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","titleColor","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","bodyAlign","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","bodyColor","_drawColorBox","footerAlign","footerColor","tooltipSize","drawCaret","quadraticCurveTo","animX","animY","_updateAnimationTarget","hasTooltipContent","globalAlpha","drawBody","drawFooter","positionChanged","_positionChanged","_ignoreReplayEvents","plugin_tooltip","_willRender","labelCount","addIfString","addedLabels","unshift","findOrAddLabel","lastIndexOf","_startValue","_valueRange","_addedLabels","added","getDecimalForPixel","generateTicks$1","generationOptions","dataRange","MIN_SPACING","precision","maxTicks","maxDigits","includeBounds","maxSpaces","rmin","rmax","countDefined","minSpacing","niceMin","niceMax","numSpaces","decimalPlaces","relativeLabelSize","_endValue","setMin","setMax","minSign","maxSign","MAX_SAFE_INTEGER","MIN_SAFE_INTEGER","stepSize","computeTickLimit","getTickLimit","numericGeneratorOptions","_maxDigits","handleTickRangeOptions","isMajor","tickVal","generateTicks","endExp","endSignificand","exp","significand","lastTick","_zero","getTickBackdropHeight","measureLabelSize","determineLimits","fitWithPointLabels","limits","valueCount","_pointLabels","pointLabelOpts","additionalAngle","centerPointLabels","getPointLabelContext","getPointPosition","drawingArea","plFont","hLimits","vLimits","updateLimits","setCenterPoint","_pointLabelItems","buildPointLabelItems","extra","outerDistance","pointLabelPosition","yForAngle","getTextAlignForAngle","leftForTextAlign","drawPointLabels","backdropLeft","backdropTop","backdropWidth","backdropHeight","pathRadiusLine","drawRadiusLine","gridLineOpts","createPointLabelContext","logarithmic","leftMovement","rightMovement","topMovement","bottomMovement","angleMultiplier","scalingFactor","scaledDistance","pointLabel","distanceFromCenter","animate","INTERVALS","millisecond","common","steps","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","adapter","_adapter","parser","isoWeekday","_parseOpts","startOf","determineUnitForAutoTicks","minUnit","capacity","interval","determineUnitForFormatting","determineMajorUnit","addTick","time","timestamps","setMajorTicks","majorUnit","ticksFromTimestamps","_unit","_majorUnit","_offsets","_normalized","displayFormats","formats","normalized","_applyBounds","_getLabelBounds","endOf","getLabelTimestamps","timeOpts","_generate","_getLabelCapacity","initOffsets","offsetAfterAutoskip","getDecimalForValue","hasWeekday","getDataTimestamps","tooltipFormat","datetime","minorFormat","majorFormat","_tickFormatFunction","offsets","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","_getLabelSize","prevSource","nextSource","prevTarget","nextTarget","span","TimeSeriesScale","_table","_minPos","_tableRange","_getTimestampsForTable","buildLookupTable"],"mappings":"kHAAA,4IAEIA,EAFJ,YASA,SAASC,EAAYC,EAAqBC,EAAWC,EAAcC,GAC/DH,EAAoBC,EAAWC,QACfE,IAAZD,GACAA,EAAQE,KAAKP,EAAWQ,eAGhC,SAASC,EAAYC,EAAOL,GACxBK,EAAMC,cACUL,IAAZD,GACAA,EAAQE,KAAKP,EAAWY,cAGhC,SAASC,EAAaH,EAAOL,GACzBK,EAAMI,eACUR,IAAZD,GACAA,EAAQE,KAAKP,EAAWe,gBAGhC,SAASC,EAAaC,EAAMC,GACxB,MAAMC,EAAW,CACbC,OAA+B,qBAAhBH,EAAKG,OAAyB,GAAK,IAC3CH,EAAKG,QAEZC,SAAU,IAKd,OAHAC,EAAiBH,EAAU,IACpBF,GACJC,GACIC,EAEX,SAASG,EAAiBC,EAASC,EAASN,GACxC,MAAMO,EAAgB,GACtBF,EAAQF,SAAWG,EAAQH,SAASK,IAAKC,IAErC,MAAMC,EAAiBL,EAAQF,SAASQ,KAAMC,GAAUA,EAAQZ,KAAkBS,EAAYT,IAG9F,OAAKU,GAAmBD,EAAYV,OAAQQ,EAAcM,SAASH,IAKnEH,EAAcO,KAAKJ,GACnBK,OAAOC,OAAON,EAAgBD,GACvBC,GANI,IACAD,KAQnB,SAASQ,EAAezB,EAAOU,EAAQf,GACnCK,EAAMO,KAAKG,OAASA,OACJd,IAAZD,GACAA,EAAQE,KAAKP,EAAWoC,eAGhC,SAASC,EAAgB3B,EAAO4B,GAC5B5B,EAAM4B,QAAU,IACTA,GAGX,SAASC,EAAYf,EAASD,GAE1B,MAAMiB,EAAmBhB,EAAQH,SAASK,IAAKI,GACpCA,EAAQW,OAEbC,EAAmBnB,EAAQF,SAASK,IAAKI,GACpCA,EAAQW,OAGnB,OAAOlB,EAAQF,SAASsB,SAAWnB,EAAQH,SAASsB,QAAUH,EAAiBI,MAAM,CAACC,EAAOC,IAAQD,IAAUH,EAAiBI,KAzEpI,SAAU9C,GACNA,EAAW,iBAAmB,iBAC9BA,EAAW,gBAAkB,gBAC7BA,EAAW,kBAAoB,kBAC/BA,EAAW,iBAAmB,kBAJlC,CAKGA,IAAeA,EAAa,KAuE/B,MAAM+C,EAAgB,wIAEhBC,EAAwB,aAC9B,SAASC,EAAcC,EAASC,EAAWC,GACvC,IAAIC,EAAY,KAChB,MAAO,CACHC,MAAO,CACHnD,UAAW,CACPoD,KAAMtB,OACNuB,UAAU,GAEdpD,aAAc,CACVmD,KAAMtB,OACNwB,QAAS,QAEbvC,aAAc,CACVqC,KAAMG,OACND,QAAS,SAEbP,QAAS,CACLK,KAAMG,OACND,QAASP,GAEbS,MAAO,CACHJ,KAAMK,OACNH,QAAS,KAEbI,OAAQ,CACJN,KAAMK,OACNH,QAAS,KAEbK,WAAY,CACRP,KAAMG,OACND,QAAS,IAEbM,OAAQ,CACJR,KAAMtB,OACNwB,QAAS,QAEbO,QAAS,CACLT,KAAMU,MACNR,QAAS,IAAI,KAGrB,OACI,MAAO,CACHS,OAAQ,OAGhBC,SAAU,CACN,sBACI,IAAIC,EAAKC,EACT,MAAMC,EAA+C,QAA7BF,EAAMG,KAAKnE,oBAAkC,IAARgE,GAAmD,QAAxBC,EAAOD,EAAIJ,eAA8B,IAATK,OAA1C,EAAqEA,EAAKrB,GACxJ,MAAiC,qBAAnBsB,IAGtB,UACI,OAAME,SAASpB,IAEnB,UACIC,EAAY,CACRoB,QAAS,MAET,aAAcF,KAAKpE,WAAaoE,KAAKpE,UAAUkB,SAASsB,OAAS,IACjE1C,EAAYsE,KAAKG,YAAaH,KAAKpE,UAAWoE,KAAKnE,cACnDmE,KAAKI,MAAM3E,EAAWQ,iBAG9BoE,MAAO,CACHzE,UAAW,CACP0E,QAAS,SAASC,EAAUC,GACxBR,KAAKS,iBAAiBF,EAAUC,IAEpCE,MAAM,GAEV7E,aAAc,CACVyE,QAAS,SAASC,GACdP,KAAKW,oBAAoBJ,IAE7BG,MAAM,IAGdE,QAAS,CACL,YAAalE,EAAMqB,GACf,MAAM8C,EAAeb,KAAKc,kBAK1B,GAJqB,OAAjBD,IACAvE,EAAauE,GACbb,KAAKI,MAAM3E,EAAWe,kBAErBwD,KAAKe,MAAMC,OACZ,MAAM,IAAIC,MAAMzC,GACb,CACH,MAAM5C,EAAYa,EAAaC,EAAMsD,KAAKrD,cACpCuE,EAAoBlB,KAAKe,MAAMC,OAAOG,WAAW,MAC7B,OAAtBD,GACAlB,KAAKoB,gBAAgB,IAAI,OAAMF,EAAmB,CAC9ClC,KAAMJ,EACNlC,KAAMd,EACNmC,UACA0B,QAASO,KAAKP,aAK9B,iBAAkBc,EAAUC,GACxB,MAAMvD,EAAU,IACTsD,GAEDvD,EAAU,IACTwD,GAEDK,EAAeb,KAAKc,kBAC1B,GAAIpD,OAAO2D,KAAKrE,GAASoB,OAAS,EAAG,CACjC,MAAMkD,EAAiCtD,EAAYf,EAASD,GACxDsE,GAAmD,OAAjBT,GAClC9D,EAAiB8D,EAAanE,KAAMO,EAAS+C,KAAKrD,mBAC3BZ,IAAnBkB,EAAQJ,SACRe,EAAeiD,EAAc5D,EAAQJ,QACrCmD,KAAKI,MAAM3E,EAAWoC,gBAE1BmC,KAAKuB,cACLvB,KAAKI,MAAM3E,EAAWY,gBAED,OAAjBwE,IACAvE,EAAauE,GACbb,KAAKI,MAAM3E,EAAWe,iBAE1Bd,EAAYsE,KAAKG,YAAaH,KAAKpE,UAAWoE,KAAKnE,cACnDmE,KAAKI,MAAM3E,EAAWQ,qBAGL,OAAjB4E,IACAvE,EAAauE,GACbb,KAAKI,MAAM3E,EAAWe,iBAE1Bd,EAAYsE,KAAKG,YAAaH,KAAKpE,UAAWoE,KAAKnE,cACnDmE,KAAKI,MAAM3E,EAAWQ,gBAG9B,oBAAqB8B,GACjB,MAAM8C,EAAeb,KAAKc,kBACL,OAAjBD,GACA/C,EAAgB+C,EAAc9C,GAC9BiC,KAAKuB,eAEL7F,EAAYsE,KAAKG,YAAaH,KAAKpE,UAAWoE,KAAKnE,eAG3D,cACI,MAAMgF,EAAeb,KAAKc,kBAC1B5E,EAAY2E,IAEhB,kBACI,OAAOb,KAAKwB,oBAAsB1C,EAAUoB,QAAUF,KAAKyB,MAAM9B,QAErE,gBAAiBxD,GACb6D,KAAKwB,oBAAsB1C,EAAUoB,QAAU/D,EAAQ6D,KAAKyB,MAAM9B,OAASxD,IAGnF,gBACI,MAAM0E,EAAeb,KAAKc,kBACL,OAAjBD,IACAvE,EAAauE,GACbb,KAAKI,MAAM3E,EAAWe,kBAG9BkF,OAAQ,SAASC,GACb,OAAOA,EAAc,MAAO,CACxBC,MAAO5B,KAAKR,OACZqC,MAAO7B,KAAKT,YACb,CACCoC,EAAc,SAAU,CACpBG,MAAO,CACHC,GAAI/B,KAAKrB,QACTS,MAAOY,KAAKZ,MACZE,OAAQU,KAAKV,QAEjBO,IAAK,eAML,MAAMmC,EAAsBtD,EAAc,YAAa,MAAO,QACxDuD,EAA2BvD,EAAc,iBAAkB,WAAY,QACvEwD,EAAuBxD,EAAc,aAAc,OAAQ,QAC3DyD,EAAsBzD,EAAc,YAAa,MAAO,QACc,OACR,OACG,OACG,Q,0pBCpQ9F,MAAM0D,EAAoB,WACxB,MAAsB,qBAAXC,OACF,SAASC,GACd,OAAOA,KAGJD,OAAOE,sBANS,GAQzB,SAASC,EAAUC,EAAIC,EAASC,GAC9B,MAAMC,EAAaD,GAAY,CAAEE,GAASnD,MAAMoD,UAAUC,MAAMC,KAAKH,IACrE,IAAII,GAAU,EACVJ,EAAO,GACX,OAAO,YAAYK,GACjBL,EAAOD,EAAWM,GACbD,IACHA,GAAU,EACVb,EAAiBY,KAAKX,OAAQ,KAC5BY,GAAU,EACVR,EAAGU,MAAMT,EAASG,OAK1B,SAASO,EAASX,EAAIY,GACpB,IAAIC,EACJ,OAAO,YAAYT,GAOjB,OANIQ,GACFE,aAAaD,GACbA,EAAUE,WAAWf,EAAIY,EAAOR,IAEhCJ,EAAGU,MAAMnD,KAAM6C,GAEVQ,GAGX,MAAMI,EAAsBC,GAAoB,UAAVA,EAAoB,OAAmB,QAAVA,EAAkB,QAAU,SACzFC,EAAiB,CAACD,EAAOE,EAAOC,IAAkB,UAAVH,EAAoBE,EAAkB,QAAVF,EAAkBG,GAAOD,EAAQC,GAAO,EAC5GC,EAAS,CAACJ,EAAOK,EAAMC,EAAOC,KAClC,MAAMC,EAAQD,EAAM,OAAS,QAC7B,OAAOP,IAAUQ,EAAQF,EAAkB,WAAVN,GAAsBK,EAAOC,GAAS,EAAID,GAG7E,SAASI,KACT,MAAMC,EAAO,WACX,IAAIrC,EAAK,EACT,OAAO,WACL,OAAOA,KAHC,GAMZ,SAASsC,EAAc/F,GACrB,OAAiB,OAAVA,GAAmC,qBAAVA,EAElC,SAASgG,EAAQhG,GACf,GAAIoB,MAAM4E,SAAW5E,MAAM4E,QAAQhG,GACjC,OAAO,EAET,MAAMU,EAAOtB,OAAOoF,UAAUyB,SAASvB,KAAK1E,GAC5C,MAAyB,YAArBU,EAAK+D,MAAM,EAAG,IAAuC,WAAnB/D,EAAK+D,OAAO,GAKpD,SAASyB,EAASlG,GAChB,OAAiB,OAAVA,GAA4D,oBAA1CZ,OAAOoF,UAAUyB,SAASvB,KAAK1E,GAE1D,MAAMmG,EAAkBnG,IAA4B,kBAAVA,GAAsBA,aAAiBe,SAAWqF,UAAUpG,GACtG,SAASqG,EAAgBrG,EAAOsG,GAC9B,OAAOH,EAAenG,GAASA,EAAQsG,EAEzC,SAASC,EAAevG,EAAOsG,GAC7B,MAAwB,qBAAVtG,EAAwBsG,EAAetG,EAEvD,MAAMwG,EAAe,CAACxG,EAAOyG,IACV,kBAAVzG,GAAsBA,EAAM0G,SAAS,KAC1CC,WAAW3G,GAAS,IAClBA,EAAQyG,EACRG,EAAc,CAAC5G,EAAOyG,IACT,kBAAVzG,GAAsBA,EAAM0G,SAAS,KAC1CC,WAAW3G,GAAS,IAAMyG,GACvBzG,EACP,SAASgE,EAASG,EAAII,EAAMH,GAC1B,GAAID,GAAyB,oBAAZA,EAAGO,KAClB,OAAOP,EAAGU,MAAMT,EAASG,GAG7B,SAASsC,EAAKC,EAAU3C,EAAIC,EAAS2C,GACnC,IAAIC,EAAGC,EAAKlE,EACZ,GAAIiD,EAAQc,GAEV,GADAG,EAAMH,EAAShH,OACXiH,EACF,IAAKC,EAAIC,EAAM,EAAGD,GAAK,EAAGA,IACxB7C,EAAGO,KAAKN,EAAS0C,EAASE,GAAIA,QAGhC,IAAKA,EAAI,EAAGA,EAAIC,EAAKD,IACnB7C,EAAGO,KAAKN,EAAS0C,EAASE,GAAIA,QAG7B,GAAId,EAASY,GAGlB,IAFA/D,EAAO3D,OAAO2D,KAAK+D,GACnBG,EAAMlE,EAAKjD,OACNkH,EAAI,EAAGA,EAAIC,EAAKD,IACnB7C,EAAGO,KAAKN,EAAS0C,EAAS/D,EAAKiE,IAAKjE,EAAKiE,IAI/C,SAASE,EAAeC,EAAIC,GAC1B,IAAIJ,EAAGK,EAAMC,EAAIC,EACjB,IAAKJ,IAAOC,GAAMD,EAAGrH,SAAWsH,EAAGtH,OACjC,OAAO,EAET,IAAKkH,EAAI,EAAGK,EAAOF,EAAGrH,OAAQkH,EAAIK,IAAQL,EAGxC,GAFAM,EAAKH,EAAGH,GACRO,EAAKH,EAAGJ,GACJM,EAAGE,eAAiBD,EAAGC,cAAgBF,EAAGrH,QAAUsH,EAAGtH,MACzD,OAAO,EAGX,OAAO,EAET,SAASwH,EAAQC,GACf,GAAI1B,EAAQ0B,GACV,OAAOA,EAAO7I,IAAI4I,GAEpB,GAAIvB,EAASwB,GAAS,CACpB,MAAMC,EAASvI,OAAOwI,OAAO,MACvB7E,EAAO3D,OAAO2D,KAAK2E,GACnBG,EAAO9E,EAAKjD,OAClB,IAAIgI,EAAI,EACR,KAAOA,EAAID,IAAQC,EACjBH,EAAO5E,EAAK+E,IAAML,EAAQC,EAAO3E,EAAK+E,KAExC,OAAOH,EAET,OAAOD,EAET,SAASK,EAAWC,GAClB,OAAmE,IAA5D,CAAC,YAAa,YAAa,eAAeC,QAAQD,GAE3D,SAASE,EAAQF,EAAKL,EAAQD,EAAQjI,GACpC,IAAKsI,EAAWC,GACd,OAEF,MAAMG,EAAOR,EAAOK,GACdI,EAAOV,EAAOM,GAChB9B,EAASiC,IAASjC,EAASkC,GAC7BC,EAAMF,EAAMC,EAAM3I,GAElBkI,EAAOK,GAAOP,EAAQW,GAG1B,SAASC,EAAMV,EAAQD,EAAQjI,GAC7B,MAAM6I,EAAUtC,EAAQ0B,GAAUA,EAAS,CAACA,GACtCL,EAAOiB,EAAQxI,OACrB,IAAKoG,EAASyB,GACZ,OAAOA,EAETlI,EAAUA,GAAW,GACrB,MAAM8I,EAAS9I,EAAQ8I,QAAUL,EACjC,IAAK,IAAIlB,EAAI,EAAGA,EAAIK,IAAQL,EAAG,CAE7B,GADAU,EAASY,EAAQtB,IACZd,EAASwB,GACZ,SAEF,MAAM3E,EAAO3D,OAAO2D,KAAK2E,GACzB,IAAK,IAAII,EAAI,EAAGD,EAAO9E,EAAKjD,OAAQgI,EAAID,IAAQC,EAC9CS,EAAOxF,EAAK+E,GAAIH,EAAQD,EAAQjI,GAGpC,OAAOkI,EAET,SAASa,EAAQb,EAAQD,GACvB,OAAOW,EAAMV,EAAQD,EAAQ,CAACa,OAAQE,IAExC,SAASA,EAAUT,EAAKL,EAAQD,GAC9B,IAAKK,EAAWC,GACd,OAEF,MAAMG,EAAOR,EAAOK,GACdI,EAAOV,EAAOM,GAChB9B,EAASiC,IAASjC,EAASkC,GAC7BI,EAAQL,EAAMC,GACJhJ,OAAOoF,UAAUkE,eAAehE,KAAKiD,EAAQK,KACvDL,EAAOK,GAAOP,EAAQW,IAS1B,MAAMO,EAAc,GACdC,EAAM,IACZ,SAASC,EAAmBb,EAAK1C,GAC/B,MAAMwD,EAAMd,EAAIC,QAAQW,EAAKtD,GAC7B,OAAgB,IAATwD,EAAad,EAAIlI,OAASgJ,EAEnC,SAASC,EAAiBC,EAAKhB,GAC7B,GAAIA,IAAQW,EACV,OAAOK,EAET,IAAIC,EAAM,EACNH,EAAMD,EAAmBb,EAAKiB,GAClC,MAAOD,GAAOF,EAAMG,EAClBD,EAAMA,EAAIhB,EAAIvD,MAAMwE,EAAKH,IACzBG,EAAMH,EAAM,EACZA,EAAMD,EAAmBb,EAAKiB,GAEhC,OAAOD,EAET,SAASE,EAAYC,GACnB,OAAOA,EAAIC,OAAO,GAAGC,cAAgBF,EAAI1E,MAAM,GAEjD,MAAM6E,EAAWtJ,GAA2B,qBAAVA,EAC5BuJ,EAAcvJ,GAA2B,oBAAVA,EAC/BwJ,EAAY,CAACC,EAAGC,KACpB,GAAID,EAAEE,OAASD,EAAEC,KACf,OAAO,EAET,IAAK,MAAMC,KAAQH,EACjB,IAAKC,EAAEG,IAAID,GACT,OAAO,EAGX,OAAO,GAET,SAASE,EAAcC,GACrB,MAAkB,YAAXA,EAAErJ,MAAiC,UAAXqJ,EAAErJ,MAA+B,gBAAXqJ,EAAErJ,KAGzD,MAAMsJ,EAAKC,KAAKD,GACVE,EAAM,EAAIF,EACVG,EAAQD,EAAMF,EACdI,EAAWrJ,OAAOsJ,kBAClBC,EAAcN,EAAK,IACnBO,EAAUP,EAAK,EACfQ,EAAaR,EAAK,EAClBS,EAAqB,EAALT,EAAS,EACzBU,EAAQT,KAAKS,MACbC,EAAOV,KAAKU,KAClB,SAASC,EAAQC,GACf,MAAMC,EAAeb,KAAKc,MAAMF,GAChCA,EAAQG,EAAaH,EAAOC,EAAcD,EAAQ,KAAQC,EAAeD,EACzE,MAAMI,EAAYhB,KAAKiB,IAAI,GAAIjB,KAAKkB,MAAMT,EAAMG,KAC1CO,EAAWP,EAAQI,EACnBI,EAAeD,GAAY,EAAI,EAAIA,GAAY,EAAI,EAAIA,GAAY,EAAI,EAAI,GACjF,OAAOC,EAAeJ,EAExB,SAASK,EAAWtL,GAClB,MAAMuL,EAAS,GACTC,EAAOvB,KAAKuB,KAAKxL,GACvB,IAAIgH,EACJ,IAAKA,EAAI,EAAGA,EAAIwE,EAAMxE,IAChBhH,EAAQgH,IAAM,IAChBuE,EAAOpM,KAAK6H,GACZuE,EAAOpM,KAAKa,EAAQgH,IAOxB,OAJIwE,KAAiB,EAAPA,IACZD,EAAOpM,KAAKqM,GAEdD,EAAOE,KAAK,CAAChC,EAAGC,IAAMD,EAAIC,GAAGgC,MACtBH,EAET,SAASI,EAASC,GAChB,OAAQC,MAAMlF,WAAWiF,KAAOxF,SAASwF,GAE3C,SAASZ,EAAac,EAAGC,EAAGC,GAC1B,OAAO/B,KAAKgC,IAAIH,EAAIC,GAAKC,EAE3B,SAASE,EAAYJ,EAAGE,GACtB,MAAMG,EAAUlC,KAAKc,MAAMe,GAC3B,OAASK,EAAUH,GAAYF,GAAQK,EAAUH,GAAYF,EAE/D,SAASM,EAAmBC,EAAO1E,EAAQ2E,GACzC,IAAItF,EAAGK,EAAMrH,EACb,IAAKgH,EAAI,EAAGK,EAAOgF,EAAMvM,OAAQkH,EAAIK,EAAML,IACzChH,EAAQqM,EAAMrF,GAAGsF,GACZT,MAAM7L,KACT2H,EAAO4E,IAAMtC,KAAKsC,IAAI5E,EAAO4E,IAAKvM,GAClC2H,EAAO6E,IAAMvC,KAAKuC,IAAI7E,EAAO6E,IAAKxM,IAIxC,SAASyM,EAAUC,GACjB,OAAOA,GAAW1C,EAAK,KAEzB,SAAS2C,GAAUC,GACjB,OAAOA,GAAW,IAAM5C,GAE1B,SAAS6C,GAAef,GACtB,IAAK3F,EAAe2F,GAClB,OAEF,IAAI/B,EAAI,EACJ+C,EAAI,EACR,MAAO7C,KAAKc,MAAMe,EAAI/B,GAAKA,IAAM+B,EAC/B/B,GAAK,GACL+C,IAEF,OAAOA,EAET,SAASC,GAAkBC,EAAaC,GACtC,MAAMC,EAAsBD,EAAWnB,EAAIkB,EAAYlB,EACjDqB,EAAsBF,EAAWlB,EAAIiB,EAAYjB,EACjDqB,EAA2BnD,KAAKuB,KAAK0B,EAAsBA,EAAsBC,EAAsBA,GAC7G,IAAIE,EAAQpD,KAAKqD,MAAMH,EAAqBD,GAI5C,OAHIG,GAAU,GAAMrD,IAClBqD,GAASnD,GAEJ,CACLmD,QACAE,SAAUH,GAGd,SAASI,GAAsBC,EAAKC,GAClC,OAAOzD,KAAKuB,KAAKvB,KAAKiB,IAAIwC,EAAI5B,EAAI2B,EAAI3B,EAAG,GAAK7B,KAAKiB,IAAIwC,EAAI3B,EAAI0B,EAAI1B,EAAG,IAExE,SAAS4B,GAAWlE,EAAGC,GACrB,OAAQD,EAAIC,EAAIS,GAASD,EAAMF,EAEjC,SAAS4D,GAAgBnE,GACvB,OAAQA,EAAIS,EAAMA,GAAOA,EAE3B,SAAS2D,GAAcR,EAAO/H,EAAOC,EAAKuI,GACxC,MAAMrE,EAAImE,GAAgBP,GACpBU,EAAIH,GAAgBtI,GACpByE,EAAI6D,GAAgBrI,GACpByI,EAAeJ,GAAgBG,EAAItE,GACnCwE,EAAaL,GAAgB7D,EAAIN,GACjCyE,EAAeN,GAAgBnE,EAAIsE,GACnCI,EAAaP,GAAgBnE,EAAIM,GACvC,OAAON,IAAMsE,GAAKtE,IAAMM,GAAM+D,GAAyBC,IAAMhE,GACvDiE,EAAeC,GAAcC,EAAeC,EAEpD,SAASC,GAAYpO,EAAOuM,EAAKC,GAC/B,OAAOvC,KAAKuC,IAAID,EAAKtC,KAAKsC,IAAIC,EAAKxM,IAErC,SAASqO,GAAYrO,GACnB,OAAOoO,GAAYpO,GAAQ,MAAO,OAEpC,SAASsO,GAAWtO,EAAOsF,EAAOC,EAAKyG,EAAU,MAC/C,OAAOhM,GAASiK,KAAKsC,IAAIjH,EAAOC,GAAOyG,GAAWhM,GAASiK,KAAKuC,IAAIlH,EAAOC,GAAOyG,EAGpF,MAAMuC,GAAUC,GAAY,IAANA,GAAiB,IAANA,EAC3BC,GAAY,CAACD,EAAGT,EAAGjB,KAAQ7C,KAAKiB,IAAI,EAAG,IAAMsD,GAAK,IAAMvE,KAAKyE,KAAKF,EAAIT,GAAK7D,EAAM4C,GACjF6B,GAAa,CAACH,EAAGT,EAAGjB,IAAM7C,KAAKiB,IAAI,GAAI,GAAKsD,GAAKvE,KAAKyE,KAAKF,EAAIT,GAAK7D,EAAM4C,GAAK,EAC/E8B,GAAU,CACdC,OAAQL,GAAKA,EACbM,WAAYN,GAAKA,EAAIA,EACrBO,YAAaP,IAAMA,GAAKA,EAAI,GAC5BQ,cAAeR,IAAOA,GAAK,IAAO,EAC9B,GAAMA,EAAIA,GACT,MAAUA,GAAMA,EAAI,GAAK,GAC9BS,YAAaT,GAAKA,EAAIA,EAAIA,EAC1BU,aAAcV,IAAMA,GAAK,GAAKA,EAAIA,EAAI,EACtCW,eAAgBX,IAAOA,GAAK,IAAO,EAC/B,GAAMA,EAAIA,EAAIA,EACd,KAAQA,GAAK,GAAKA,EAAIA,EAAI,GAC9BY,YAAaZ,GAAKA,EAAIA,EAAIA,EAAIA,EAC9Ba,aAAcb,MAAQA,GAAK,GAAKA,EAAIA,EAAIA,EAAI,GAC5Cc,eAAgBd,IAAOA,GAAK,IAAO,EAC/B,GAAMA,EAAIA,EAAIA,EAAIA,GACjB,KAAQA,GAAK,GAAKA,EAAIA,EAAIA,EAAI,GACnCe,YAAaf,GAAKA,EAAIA,EAAIA,EAAIA,EAAIA,EAClCgB,aAAchB,IAAMA,GAAK,GAAKA,EAAIA,EAAIA,EAAIA,EAAI,EAC9CiB,eAAgBjB,IAAOA,GAAK,IAAO,EAC/B,GAAMA,EAAIA,EAAIA,EAAIA,EAAIA,EACtB,KAAQA,GAAK,GAAKA,EAAIA,EAAIA,EAAIA,EAAI,GACtCkB,WAAYlB,GAA8B,EAAxBvE,KAAK0F,IAAInB,EAAIjE,GAC/BqF,YAAapB,GAAKvE,KAAKyE,IAAIF,EAAIjE,GAC/BsF,cAAerB,IAAM,IAAOvE,KAAK0F,IAAI3F,EAAKwE,GAAK,GAC/CsB,WAAYtB,GAAY,IAANA,EAAW,EAAIvE,KAAKiB,IAAI,EAAG,IAAMsD,EAAI,IACvDuB,YAAavB,GAAY,IAANA,EAAW,EAA4B,EAAvBvE,KAAKiB,IAAI,GAAI,GAAKsD,GACrDwB,cAAexB,GAAKD,GAAOC,GAAKA,EAAIA,EAAI,GACpC,GAAMvE,KAAKiB,IAAI,EAAG,IAAU,EAAJsD,EAAQ,IAChC,IAAyC,EAAjCvE,KAAKiB,IAAI,GAAI,IAAU,EAAJsD,EAAQ,KACvCyB,WAAYzB,GAAMA,GAAK,EAAKA,IAAMvE,KAAKuB,KAAK,EAAIgD,EAAIA,GAAK,GACzD0B,YAAa1B,GAAKvE,KAAKuB,KAAK,GAAKgD,GAAK,GAAKA,GAC3C2B,cAAe3B,IAAOA,GAAK,IAAO,GAC7B,IAAOvE,KAAKuB,KAAK,EAAIgD,EAAIA,GAAK,GAC/B,IAAOvE,KAAKuB,KAAK,GAAKgD,GAAK,GAAKA,GAAK,GACzC4B,cAAe5B,GAAKD,GAAOC,GAAKA,EAAIC,GAAUD,EAAG,KAAO,IACxD6B,eAAgB7B,GAAKD,GAAOC,GAAKA,EAAIG,GAAWH,EAAG,KAAO,IAC1D,iBAAiBA,GACf,MAAMT,EAAI,MACJjB,EAAI,IACV,OAAOyB,GAAOC,GAAKA,EACjBA,EAAI,GACA,GAAMC,GAAc,EAAJD,EAAOT,EAAGjB,GAC1B,GAAM,GAAM6B,GAAe,EAAJH,EAAQ,EAAGT,EAAGjB,IAE7C,WAAW0B,GACT,MAAMT,EAAI,QACV,OAAOS,EAAIA,IAAMT,EAAI,GAAKS,EAAIT,IAEhC,YAAYS,GACV,MAAMT,EAAI,QACV,OAAQS,GAAK,GAAKA,IAAMT,EAAI,GAAKS,EAAIT,GAAK,GAE5C,cAAcS,GACZ,IAAIT,EAAI,QACR,OAAKS,GAAK,IAAO,EACDA,EAAIA,IAAuB,GAAhBT,GAAK,QAAgBS,EAAIT,GAA3C,GAEF,KAAQS,GAAK,GAAKA,IAAuB,GAAhBT,GAAK,QAAgBS,EAAIT,GAAK,IAEhEuC,aAAc9B,GAAK,EAAII,GAAQ2B,cAAc,EAAI/B,GACjD,cAAcA,GACZ,MAAMgC,EAAI,OACJC,EAAI,KACV,OAAIjC,EAAK,EAAIiC,EACJD,EAAIhC,EAAIA,EAEbA,EAAK,EAAIiC,EACJD,GAAKhC,GAAM,IAAMiC,GAAMjC,EAAI,IAEhCA,EAAK,IAAMiC,EACND,GAAKhC,GAAM,KAAOiC,GAAMjC,EAAI,MAE9BgC,GAAKhC,GAAM,MAAQiC,GAAMjC,EAAI,SAEtCkC,gBAAiBlC,GAAMA,EAAI,GACO,GAA9BI,GAAQ0B,aAAiB,EAAJ9B,GACc,GAAnCI,GAAQ2B,cAAkB,EAAJ/B,EAAQ,GAAW;;;;;;;AAS/C,SAAS,GAAMmC,GACb,OAAOA,EAAI,GAAM,EAEnB,MAAMC,GAAM,CAACD,EAAGE,EAAGC,IAAM7G,KAAKuC,IAAIvC,KAAKsC,IAAIoE,EAAGG,GAAID,GAClD,SAASE,GAAIJ,GACX,OAAOC,GAAI,GAAU,KAAJD,GAAW,EAAG,KAEjC,SAASK,GAAIL,GACX,OAAOC,GAAI,GAAU,IAAJD,GAAU,EAAG,KAEhC,SAASM,GAAIN,GACX,OAAOC,GAAI,GAAMD,EAAI,MAAQ,IAAK,EAAG,GAEvC,SAASO,GAAIP,GACX,OAAOC,GAAI,GAAU,IAAJD,GAAU,EAAG,KAEhC,MAAMQ,GAAQ,CAACC,EAAG,EAAGC,EAAG,EAAGC,EAAG,EAAGC,EAAG,EAAGC,EAAG,EAAGC,EAAG,EAAGC,EAAG,EAAGC,EAAG,EAAGC,EAAG,EAAGC,EAAG,EAAGC,EAAG,GAAIC,EAAG,GAAIC,EAAG,GAAIC,EAAG,GAAIC,EAAG,GAAIC,EAAG,GAAI1I,EAAG,GAAIC,EAAG,GAAI0I,EAAG,GAAI3B,EAAG,GAAI1G,EAAG,GAAIsI,EAAG,IACrJC,GAAM,IAAI,oBACVC,GAAK7I,GAAK4I,GAAQ,GAAJ5I,GACd8I,GAAK9I,GAAK4I,IAAS,IAAJ5I,IAAa,GAAK4I,GAAQ,GAAJ5I,GACrC+I,GAAK/I,IAAW,IAAJA,IAAa,KAAY,GAAJA,GACjCgJ,GAAU/B,GAAK8B,GAAG9B,EAAEgC,IAAMF,GAAG9B,EAAEiC,IAAMH,GAAG9B,EAAEjH,IAAM+I,GAAG9B,EAAElH,GAC3D,SAASoJ,GAAS1J,GAChB,IACI2J,EADA7L,EAAMkC,EAAIrJ,OAmBd,MAjBe,MAAXqJ,EAAI,KACM,IAARlC,GAAqB,IAARA,EACf6L,EAAM,CACJH,EAAG,IAAsB,GAAhBxB,GAAMhI,EAAI,IACnByJ,EAAG,IAAsB,GAAhBzB,GAAMhI,EAAI,IACnBO,EAAG,IAAsB,GAAhByH,GAAMhI,EAAI,IACnBM,EAAW,IAARxC,EAA4B,GAAhBkK,GAAMhI,EAAI,IAAW,KAErB,IAARlC,GAAqB,IAARA,IACtB6L,EAAM,CACJH,EAAGxB,GAAMhI,EAAI,KAAO,EAAIgI,GAAMhI,EAAI,IAClCyJ,EAAGzB,GAAMhI,EAAI,KAAO,EAAIgI,GAAMhI,EAAI,IAClCO,EAAGyH,GAAMhI,EAAI,KAAO,EAAIgI,GAAMhI,EAAI,IAClCM,EAAW,IAARxC,EAAakK,GAAMhI,EAAI,KAAO,EAAIgI,GAAMhI,EAAI,IAAO,OAIrD2J,EAET,MAAM,GAAQ,CAACrJ,EAAG4I,IAAM5I,EAAI,IAAM4I,EAAE5I,GAAK,GACzC,SAASsJ,GAAUpC,GACjB,IAAI0B,EAAIK,GAAQ/B,GAAK4B,GAAKC,GAC1B,OAAO7B,EACH,IAAM0B,EAAE1B,EAAEgC,GAAKN,EAAE1B,EAAEiC,GAAKP,EAAE1B,EAAEjH,GAAK,GAAMiH,EAAElH,EAAG4I,QAC5C5U,EAEN,MAAMuV,GAAS,+GACf,SAASC,GAASnC,EAAG/C,EAAG8C,GACtB,MAAMpH,EAAIsE,EAAI9D,KAAKsC,IAAIsE,EAAG,EAAIA,GACxBwB,EAAI,CAACzG,EAAG9D,GAAK8D,EAAIkF,EAAI,IAAM,KAAOD,EAAIpH,EAAIQ,KAAKuC,IAAIvC,KAAKsC,IAAIzE,EAAI,EAAG,EAAIA,EAAG,IAAK,GACrF,MAAO,CAACuK,EAAE,GAAIA,EAAE,GAAIA,EAAE,IAExB,SAASa,GAASpC,EAAG/C,EAAG4C,GACtB,MAAM0B,EAAI,CAACzG,EAAG9D,GAAK8D,EAAIkF,EAAI,IAAM,IAAMH,EAAIA,EAAI5C,EAAI9D,KAAKuC,IAAIvC,KAAKsC,IAAIzE,EAAG,EAAIA,EAAG,GAAI,GACnF,MAAO,CAACuK,EAAE,GAAIA,EAAE,GAAIA,EAAE,IAExB,SAASc,GAASrC,EAAGsC,EAAG1J,GACtB,MAAM2J,EAAMJ,GAASnC,EAAG,EAAG,IAC3B,IAAI9J,EAMJ,IALIoM,EAAI1J,EAAI,IACV1C,EAAI,GAAKoM,EAAI1J,GACb0J,GAAKpM,EACL0C,GAAK1C,GAEFA,EAAI,EAAGA,EAAI,EAAGA,IACjBqM,EAAIrM,IAAM,EAAIoM,EAAI1J,EAClB2J,EAAIrM,IAAMoM,EAEZ,OAAOC,EAET,SAASC,GAASX,EAAGC,EAAGlJ,EAAG+G,EAAGjE,GAC5B,OAAImG,IAAMnG,GACCoG,EAAIlJ,GAAK+G,GAAMmC,EAAIlJ,EAAI,EAAI,GAElCkJ,IAAMpG,GACA9C,EAAIiJ,GAAKlC,EAAI,GAEfkC,EAAIC,GAAKnC,EAAI,EAEvB,SAAS8C,GAAQ5C,GACf,MAAM9F,EAAQ,IACR8H,EAAIhC,EAAEgC,EAAI9H,EACV+H,EAAIjC,EAAEiC,EAAI/H,EACVnB,EAAIiH,EAAEjH,EAAImB,EACV2B,EAAMvC,KAAKuC,IAAImG,EAAGC,EAAGlJ,GACrB6C,EAAMtC,KAAKsC,IAAIoG,EAAGC,EAAGlJ,GACrBmH,GAAKrE,EAAMD,GAAO,EACxB,IAAIuE,EAAG/C,EAAG0C,EAOV,OANIjE,IAAQD,IACVkE,EAAIjE,EAAMD,EACVwB,EAAI8C,EAAI,GAAMJ,GAAK,EAAIjE,EAAMD,GAAOkE,GAAKjE,EAAMD,GAC/CuE,EAAIwC,GAASX,EAAGC,EAAGlJ,EAAG+G,EAAGjE,GACzBsE,EAAQ,GAAJA,EAAS,IAER,CAAK,EAAJA,EAAO/C,GAAK,EAAG8C,GAEzB,SAAS2C,GAAMnB,EAAG5I,EAAGC,EAAG0I,GACtB,OACEhR,MAAM4E,QAAQyD,GACV4I,EAAE5I,EAAE,GAAIA,EAAE,GAAIA,EAAE,IAChB4I,EAAE5I,EAAGC,EAAG0I,IACZvT,IAAImS,IAER,SAASyC,GAAQ3C,EAAG/C,EAAG8C,GACrB,OAAO2C,GAAMP,GAAUnC,EAAG/C,EAAG8C,GAE/B,SAAS6C,GAAQ5C,EAAGsC,EAAG1J,GACrB,OAAO8J,GAAML,GAAUrC,EAAGsC,EAAG1J,GAE/B,SAASiK,GAAQ7C,EAAG/C,EAAG4C,GACrB,OAAO6C,GAAMN,GAAUpC,EAAG/C,EAAG4C,GAE/B,SAASiD,GAAI9C,GACX,OAAQA,EAAI,IAAM,KAAO,IAE3B,SAAS+C,GAAS1K,GAChB,MAAMqH,EAAIwC,GAAOc,KAAK3K,GACtB,IACIwH,EADAlH,EAAI,IAER,IAAK+G,EACH,OAEEA,EAAE,KAAOG,IACXlH,EAAI+G,EAAE,GAAKO,IAAKP,EAAE,IAAMQ,IAAKR,EAAE,KAEjC,MAAMM,EAAI8C,IAAKpD,EAAE,IACXuD,GAAMvD,EAAE,GAAK,IACbwD,GAAMxD,EAAE,GAAK,IAQnB,OANEG,EADW,QAATH,EAAE,GACAkD,GAAQ5C,EAAGiD,EAAIC,GACD,QAATxD,EAAE,GACPmD,GAAQ7C,EAAGiD,EAAIC,GAEfP,GAAQ3C,EAAGiD,EAAIC,GAEd,CACLrB,EAAGhC,EAAE,GACLiC,EAAGjC,EAAE,GACLjH,EAAGiH,EAAE,GACLlH,EAAGA,GAGP,SAASwK,GAAOtD,EAAGuD,GACjB,IAAIpD,EAAIyC,GAAQ5C,GAChBG,EAAE,GAAK8C,GAAI9C,EAAE,GAAKoD,GAClBpD,EAAI2C,GAAQ3C,GACZH,EAAEgC,EAAI7B,EAAE,GACRH,EAAEiC,EAAI9B,EAAE,GACRH,EAAEjH,EAAIoH,EAAE,GAEV,SAASqD,GAAUxD,GACjB,IAAKA,EACH,OAEF,MAAMlH,EAAI8J,GAAQ5C,GACZG,EAAIrH,EAAE,GACNsE,EAAImD,GAAIzH,EAAE,IACVoH,EAAIK,GAAIzH,EAAE,IAChB,OAAOkH,EAAElH,EAAI,IACT,QAAQqH,MAAM/C,OAAO8C,OAAOI,GAAIN,EAAElH,MAClC,OAAOqH,MAAM/C,OAAO8C,MAE1B,MAAMhS,GAAM,CACViN,EAAG,OACHsI,EAAG,QACHC,EAAG,KACHC,EAAG,MACHC,EAAG,KACHC,EAAG,SACHC,EAAG,QACH3C,EAAG,KACH4C,EAAG,KACHC,EAAG,KACH5C,EAAG,KACHC,EAAG,QACHC,EAAG,QACH2C,EAAG,KACHC,EAAG,WACH3C,EAAG,KACH4C,EAAG,KACHC,EAAG,KACHC,EAAG,KACHC,EAAG,KACHC,EAAG,QACH/C,EAAG,KACHgD,EAAG,KACHC,EAAG,OACHC,EAAG,KACHC,EAAG,QACHC,EAAG,MAECC,GAAU,CACdC,OAAQ,SACRC,YAAa,SACbC,KAAM,OACNC,UAAW,SACXC,KAAM,SACNC,MAAO,SACPC,OAAQ,SACRC,MAAO,IACPC,aAAc,SACdC,GAAI,KACJC,QAAS,SACTC,KAAM,SACNC,UAAW,SACXC,OAAQ,SACRC,SAAU,SACVC,QAAS,SACTC,IAAK,SACLC,YAAa,SACbC,QAAS,SACTC,QAAS,SACTC,KAAM,OACNC,IAAK,KACLC,MAAO,OACPC,QAAS,SACTC,KAAM,SACNC,KAAM,OACNC,KAAM,SACNC,OAAQ,SACRC,QAAS,SACTC,SAAU,SACVC,OAAQ,SACRC,MAAO,SACPC,IAAK,SACLC,OAAQ,SACRC,OAAQ,SACRC,KAAM,SACNC,MAAO,SACPC,MAAO,SACPC,IAAK,OACLC,OAAQ,SACRC,OAAQ,SACRC,SAAU,OACVC,OAAQ,SACRC,OAAQ,SACRC,SAAU,SACVC,SAAU,SACVC,SAAU,SACVC,SAAU,SACVC,OAAQ,SACRC,QAAS,SACTC,UAAW,SACXC,IAAK,SACLC,OAAQ,SACRC,IAAK,SACLC,IAAK,OACLC,MAAO,SACPC,IAAK,SACLC,QAAS,SACTC,OAAQ,SACRC,QAAS,SACTC,MAAO,SACPC,KAAM,SACNC,MAAO,SACPC,OAAQ,SACRC,UAAW,SACXC,QAAS,SACTC,WAAY,SACZC,IAAK,SACLC,KAAM,SACNC,MAAO,SACPC,UAAW,SACXC,KAAM,SACNC,KAAM,SACNC,KAAM,SACNC,KAAM,SACNC,OAAQ,SACRC,OAAQ,SACRC,OAAQ,SACRC,MAAO,SACPC,MAAO,SACPC,QAAS,SACTC,IAAK,SACLC,KAAM,OACNC,QAAS,SACTC,IAAK,SACLC,OAAQ,SACRC,MAAO,SACPC,WAAY,SACZC,IAAK,KACLC,MAAO,SACPC,OAAQ,SACRC,OAAQ,SACRC,KAAM,SACNC,UAAW,OACXC,IAAK,SACLC,SAAU,SACVC,WAAY,SACZC,QAAS,SACTC,SAAU,SACVC,QAAS,SACTC,WAAY,SACZC,KAAM,KACNC,OAAQ,SACRC,KAAM,SACNC,QAAS,SACTC,MAAO,SACPC,QAAS,SACTC,KAAM,SACNC,UAAW,SACXC,OAAQ,SACRC,MAAO,SACPC,WAAY,SACZC,UAAW,SACXC,QAAS,SACTC,KAAM,SACNC,IAAK,SACLC,KAAM,SACNC,QAAS,SACTC,MAAO,SACPC,YAAa,SACbC,GAAI,SACJC,SAAU,SACVC,MAAO,SACPC,UAAW,SACXC,MAAO,SACPC,UAAW,SACXC,MAAO,SACPC,QAAS,SACTC,MAAO,SACPC,OAAQ,SACRC,MAAO,SACPC,IAAK,SACLC,KAAM,SACNC,KAAM,SACNC,KAAM,SACNC,SAAU,OACVC,OAAQ,SACRC,IAAK,SACLC,IAAK,OACLC,MAAO,SACPC,OAAQ,SACRC,GAAI,SACJC,MAAO,SACPC,IAAK,SACLC,KAAM,SACNC,UAAW,SACXC,GAAI,SACJC,MAAO,UAET,SAASC,KACP,MAAMC,EAAW,GACX/b,EAAO3D,OAAO2D,KAAKyS,IACnBuJ,EAAQ3f,OAAO2D,KAAKlE,IAC1B,IAAImI,EAAGgY,EAAGlX,EAAGmX,EAAIC,EACjB,IAAKlY,EAAI,EAAGA,EAAIjE,EAAKjD,OAAQkH,IAAK,CAEhC,IADAiY,EAAKC,EAAKnc,EAAKiE,GACVgY,EAAI,EAAGA,EAAID,EAAMjf,OAAQkf,IAC5BlX,EAAIiX,EAAMC,GACVE,EAAKA,EAAGC,QAAQrX,EAAGjJ,GAAIiJ,IAEzBA,EAAIsX,SAAS5J,GAAQyJ,GAAK,IAC1BH,EAASI,GAAM,CAACpX,GAAK,GAAK,IAAMA,GAAK,EAAI,IAAU,IAAJA,GAEjD,OAAOgX,EAET,IAAI,GACJ,SAASO,GAAUlW,GACZ,KACH,GAAQ0V,KACR,GAAMS,YAAc,CAAC,EAAG,EAAG,EAAG,IAEhC,MAAM7V,EAAI,GAAMN,EAAIoW,eACpB,OAAO9V,GAAK,CACVkJ,EAAGlJ,EAAE,GACLmJ,EAAGnJ,EAAE,GACLC,EAAGD,EAAE,GACLA,EAAgB,IAAbA,EAAE3J,OAAe2J,EAAE,GAAK,KAG/B,MAAM+V,GAAS,uGACf,SAASC,GAAStW,GAChB,MAAMqH,EAAIgP,GAAO1L,KAAK3K,GACtB,IACIwJ,EAAGC,EAAGlJ,EADND,EAAI,IAER,GAAK+G,EAAL,CAGA,GAAIA,EAAE,KAAOmC,EAAG,CACd,MAAMhC,GAAKH,EAAE,GACb/G,EAAI+G,EAAE,GAAKO,GAAIJ,GAAKC,GAAQ,IAAJD,EAAS,EAAG,KAQtC,OANAgC,GAAKnC,EAAE,GACPoC,GAAKpC,EAAE,GACP9G,GAAK8G,EAAE,GACPmC,EAAI,KAAOnC,EAAE,GAAKO,GAAI4B,GAAK/B,GAAI+B,EAAG,EAAG,MACrCC,EAAI,KAAOpC,EAAE,GAAKO,GAAI6B,GAAKhC,GAAIgC,EAAG,EAAG,MACrClJ,EAAI,KAAO8G,EAAE,GAAKO,GAAIrH,GAAKkH,GAAIlH,EAAG,EAAG,MAC9B,CACLiJ,EAAGA,EACHC,EAAGA,EACHlJ,EAAGA,EACHD,EAAGA,IAGP,SAASiW,GAAU/O,GACjB,OAAOA,IACLA,EAAElH,EAAI,IACF,QAAQkH,EAAEgC,MAAMhC,EAAEiC,MAAMjC,EAAEjH,MAAMuH,GAAIN,EAAElH,MACtC,OAAOkH,EAAEgC,MAAMhC,EAAEiC,MAAMjC,EAAEjH,MAGjC,MAAM,GAAKiH,GAAKA,GAAK,SAAgB,MAAJA,EAAqC,MAAzB1G,KAAKiB,IAAIyF,EAAG,EAAM,KAAe,KACxE,GAAOA,GAAKA,GAAK,OAAUA,EAAI,MAAQ1G,KAAKiB,KAAKyF,EAAI,MAAS,MAAO,KAC3E,SAASgP,GAAYC,EAAMC,EAAMrR,GAC/B,MAAMmE,EAAI,GAAK1B,GAAI2O,EAAKjN,IAClBC,EAAI,GAAK3B,GAAI2O,EAAKhN,IAClBlJ,EAAI,GAAKuH,GAAI2O,EAAKlW,IACxB,MAAO,CACLiJ,EAAG3B,GAAI,GAAG2B,EAAInE,GAAK,GAAKyC,GAAI4O,EAAKlN,IAAMA,KACvCC,EAAG5B,GAAI,GAAG4B,EAAIpE,GAAK,GAAKyC,GAAI4O,EAAKjN,IAAMA,KACvClJ,EAAGsH,GAAI,GAAGtH,EAAI8E,GAAK,GAAKyC,GAAI4O,EAAKnW,IAAMA,KACvCD,EAAGmW,EAAKnW,EAAI+E,GAAKqR,EAAKpW,EAAImW,EAAKnW,IAGnC,SAASqW,GAAOnP,EAAG3J,EAAG+Y,GACpB,GAAIpP,EAAG,CACL,IAAIqP,EAAMzM,GAAQ5C,GAClBqP,EAAIhZ,GAAKiD,KAAKuC,IAAI,EAAGvC,KAAKsC,IAAIyT,EAAIhZ,GAAKgZ,EAAIhZ,GAAK+Y,EAAa,IAAN/Y,EAAU,IAAM,IACvEgZ,EAAMvM,GAAQuM,GACdrP,EAAEgC,EAAIqN,EAAI,GACVrP,EAAEiC,EAAIoN,EAAI,GACVrP,EAAEjH,EAAIsW,EAAI,IAGd,SAASC,GAAMtP,EAAGuP,GAChB,OAAOvP,EAAIvR,OAAOC,OAAO6gB,GAAS,GAAIvP,GAAKA,EAE7C,SAASwP,GAAWC,GAClB,IAAIzP,EAAI,CAACgC,EAAG,EAAGC,EAAG,EAAGlJ,EAAG,EAAGD,EAAG,KAY9B,OAXIrI,MAAM4E,QAAQoa,GACZA,EAAMtgB,QAAU,IAClB6Q,EAAI,CAACgC,EAAGyN,EAAM,GAAIxN,EAAGwN,EAAM,GAAI1W,EAAG0W,EAAM,GAAI3W,EAAG,KAC3C2W,EAAMtgB,OAAS,IACjB6Q,EAAElH,EAAIuH,GAAIoP,EAAM,OAIpBzP,EAAIsP,GAAMG,EAAO,CAACzN,EAAG,EAAGC,EAAG,EAAGlJ,EAAG,EAAGD,EAAG,IACvCkH,EAAElH,EAAIuH,GAAIL,EAAElH,IAEPkH,EAET,SAAS0P,GAAclX,GACrB,MAAsB,MAAlBA,EAAIC,OAAO,GACNqW,GAAStW,GAEX0K,GAAS1K,GAElB,MAAMmX,GACJ,YAAYF,GACV,GAAIA,aAAiBE,GACnB,OAAOF,EAET,MAAM1f,SAAc0f,EACpB,IAAIzP,EACS,WAATjQ,EACFiQ,EAAIwP,GAAWC,GACG,WAAT1f,IACTiQ,EAAIkC,GAASuN,IAAUf,GAAUe,IAAUC,GAAcD,IAE3D1e,KAAK6e,KAAO5P,EACZjP,KAAK8e,SAAW7P,EAElB,YACE,OAAOjP,KAAK8e,OAEd,UACE,IAAI7P,EAAIsP,GAAMve,KAAK6e,MAInB,OAHI5P,IACFA,EAAElH,EAAIwH,GAAIN,EAAElH,IAEPkH,EAET,QAAQ3H,GACNtH,KAAK6e,KAAOJ,GAAWnX,GAEzB,YACE,OAAOtH,KAAK8e,OAASd,GAAUhe,KAAK6e,WAAQ9iB,EAE9C,YACE,OAAOiE,KAAK8e,OAASzN,GAAUrR,KAAK6e,WAAQ9iB,EAE9C,YACE,OAAOiE,KAAK8e,OAASrM,GAAUzS,KAAK6e,WAAQ9iB,EAE9C,IAAIgjB,EAAOC,GACT,GAAID,EAAO,CACT,MAAME,EAAKjf,KAAK2R,IACVuN,EAAKH,EAAMpN,IACjB,IAAIwN,EACJ,MAAM/T,EAAI4T,IAAWG,EAAK,GAAMH,EAC1BtN,EAAI,EAAItG,EAAI,EACZrD,EAAIkX,EAAGlX,EAAImX,EAAGnX,EACdqX,IAAO1N,EAAI3J,KAAO,EAAI2J,GAAKA,EAAI3J,IAAM,EAAI2J,EAAI3J,IAAM,GAAK,EAC9DoX,EAAK,EAAIC,EACTH,EAAGhO,EAAI,IAAOmO,EAAKH,EAAGhO,EAAIkO,EAAKD,EAAGjO,EAAI,GACtCgO,EAAG/N,EAAI,IAAOkO,EAAKH,EAAG/N,EAAIiO,EAAKD,EAAGhO,EAAI,GACtC+N,EAAGjX,EAAI,IAAOoX,EAAKH,EAAGjX,EAAImX,EAAKD,EAAGlX,EAAI,GACtCiX,EAAGlX,EAAIqD,EAAI6T,EAAGlX,GAAK,EAAIqD,GAAK8T,EAAGnX,EAC/B/H,KAAK2R,IAAMsN,EAEb,OAAOjf,KAET,YAAY+e,EAAOjS,GAIjB,OAHIiS,IACF/e,KAAK6e,KAAOZ,GAAYje,KAAK6e,KAAME,EAAMF,KAAM/R,IAE1C9M,KAET,QACE,OAAO,IAAI4e,GAAM5e,KAAK2R,KAExB,MAAM5J,GAEJ,OADA/H,KAAK6e,KAAK9W,EAAIuH,GAAIvH,GACX/H,KAET,QAAQqe,GACN,MAAM1M,EAAM3R,KAAK6e,KAEjB,OADAlN,EAAI5J,GAAK,EAAIsW,EACNre,KAET,YACE,MAAM2R,EAAM3R,KAAK6e,KACXQ,EAAM,GAAc,GAAR1N,EAAIV,EAAkB,IAARU,EAAIT,EAAmB,IAARS,EAAI3J,GAEnD,OADA2J,EAAIV,EAAIU,EAAIT,EAAIS,EAAI3J,EAAIqX,EACjBrf,KAET,QAAQqe,GACN,MAAM1M,EAAM3R,KAAK6e,KAEjB,OADAlN,EAAI5J,GAAK,EAAIsW,EACNre,KAET,SACE,MAAMiP,EAAIjP,KAAK6e,KAIf,OAHA5P,EAAEgC,EAAI,IAAMhC,EAAEgC,EACdhC,EAAEiC,EAAI,IAAMjC,EAAEiC,EACdjC,EAAEjH,EAAI,IAAMiH,EAAEjH,EACPhI,KAET,QAAQqe,GAEN,OADAD,GAAOpe,KAAK6e,KAAM,EAAGR,GACdre,KAET,OAAOqe,GAEL,OADAD,GAAOpe,KAAK6e,KAAM,GAAIR,GACfre,KAET,SAASqe,GAEP,OADAD,GAAOpe,KAAK6e,KAAM,EAAGR,GACdre,KAET,WAAWqe,GAET,OADAD,GAAOpe,KAAK6e,KAAM,GAAIR,GACfre,KAET,OAAOwS,GAEL,OADAD,GAAOvS,KAAK6e,KAAMrM,GACXxS,MAGX,SAASsf,GAAUZ,GACjB,OAAO,IAAIE,GAAMF,GAGnB,SAASa,GAAoBjhB,GAC3B,GAAIA,GAA0B,kBAAVA,EAAoB,CACtC,MAAMU,EAAOV,EAAMiG,WACnB,MAAgB,2BAATvF,GAA8C,4BAATA,EAE9C,OAAO,EAET,SAAS,GAAMV,GACb,OAAOihB,GAAoBjhB,GAASA,EAAQghB,GAAUhhB,GAExD,SAASkhB,GAAclhB,GACrB,OAAOihB,GAAoBjhB,GACvBA,EACAghB,GAAUhhB,GAAOmhB,SAAS,IAAKC,OAAO,IAAKrO,YAGjD,MAAMsO,GAAYjiB,OAAOwI,OAAO,MAC1B,GAAcxI,OAAOwI,OAAO,MAClC,SAAS0Z,GAAWC,EAAMvZ,GACxB,IAAKA,EACH,OAAOuZ,EAET,MAAMxe,EAAOiF,EAAIwZ,MAAM,KACvB,IAAK,IAAIxa,EAAI,EAAG4E,EAAI7I,EAAKjD,OAAQkH,EAAI4E,IAAK5E,EAAG,CAC3C,MAAMc,EAAI/E,EAAKiE,GACfua,EAAOA,EAAKzZ,KAAOyZ,EAAKzZ,GAAK1I,OAAOwI,OAAO,OAE7C,OAAO2Z,EAET,SAAS,GAAIE,EAAMC,EAAOC,GACxB,MAAqB,kBAAVD,EACFrZ,EAAMiZ,GAAWG,EAAMC,GAAQC,GAEjCtZ,EAAMiZ,GAAWG,EAAM,IAAKC,GAErC,MAAME,GACJ,YAAYC,GACVngB,KAAKogB,eAAYrkB,EACjBiE,KAAKqgB,gBAAkB,kBACvBrgB,KAAKsgB,YAAc,kBACnBtgB,KAAK+e,MAAQ,OACb/e,KAAKlD,SAAW,GAChBkD,KAAKugB,iBAAoBzkB,GAAYA,EAAQK,MAAMqkB,SAASC,sBAC5DzgB,KAAK0gB,SAAW,GAChB1gB,KAAK2gB,OAAS,CACZ,YACA,WACA,QACA,aACA,aAEF3gB,KAAK4gB,KAAO,CACVC,OAAQ,qDACR5Y,KAAM,GACNrG,MAAO,SACPkf,WAAY,IACZ9B,OAAQ,MAEVhf,KAAK+gB,MAAQ,GACb/gB,KAAKghB,qBAAuB,CAACC,EAAKljB,IAAYyhB,GAAczhB,EAAQsiB,iBACpErgB,KAAKkhB,iBAAmB,CAACD,EAAKljB,IAAYyhB,GAAczhB,EAAQuiB,aAChEtgB,KAAKmhB,WAAa,CAACF,EAAKljB,IAAYyhB,GAAczhB,EAAQghB,OAC1D/e,KAAKohB,UAAY,IACjBphB,KAAKqhB,YAAc,CACjBC,KAAM,UACNC,WAAW,EACXC,kBAAkB,GAEpBxhB,KAAKyhB,qBAAsB,EAC3BzhB,KAAK0hB,QAAU,KACf1hB,KAAK2hB,QAAU,KACf3hB,KAAK4hB,SAAU,EACf5hB,KAAKP,QAAU,GACfO,KAAK6hB,YAAa,EAClB7hB,KAAK8hB,WAAQ/lB,EACbiE,KAAK+hB,OAAS,GACd/hB,KAAKgiB,UAAW,EAChBhiB,KAAKiiB,yBAA0B,EAC/BjiB,KAAKkiB,SAAS/B,GAEhB,IAAIH,EAAOC,GACT,OAAO,GAAIjgB,KAAMggB,EAAOC,GAE1B,IAAID,GACF,OAAOJ,GAAW5f,KAAMggB,GAE1B,SAASA,EAAOC,GACd,OAAO,GAAI,GAAaD,EAAOC,GAEjC,SAASD,EAAOC,GACd,OAAO,GAAIN,GAAWK,EAAOC,GAE/B,MAAMD,EAAOmC,EAAMC,EAAaC,GAC9B,MAAMC,EAAc1C,GAAW5f,KAAMggB,GAC/BuC,EAAoB3C,GAAW5f,KAAMoiB,GACrCI,EAAc,IAAML,EAC1BzkB,OAAO+kB,iBAAiBH,EAAa,CACnC,CAACE,GAAc,CACblkB,MAAOgkB,EAAYH,GACnBO,UAAU,GAEZ,CAACP,GAAO,CACNQ,YAAY,EACZ,MACE,MAAMC,EAAQ5iB,KAAKwiB,GACbvc,EAASsc,EAAkBF,GACjC,OAAI7d,EAASoe,GACJllB,OAAOC,OAAO,GAAIsI,EAAQ2c,GAE5B/d,EAAe+d,EAAO3c,IAE/B,IAAI3H,GACF0B,KAAKwiB,GAAelkB,OAM9B,IAAIukB,GAAW,IAAI3C,GAAS,CAC1B4C,YAAcX,IAAUA,EAAKY,WAAW,MACxCC,WAAab,GAAkB,WAATA,EACtBpB,MAAO,CACLkC,UAAW,eAEb5B,YAAa,CACXyB,aAAa,EACbE,YAAY,KAIhB,SAASE,GAAatC,GACpB,OAAKA,GAAQvc,EAAcuc,EAAK3Y,OAAS5D,EAAcuc,EAAKC,QACnD,MAEDD,EAAKhf,MAAQgf,EAAKhf,MAAQ,IAAM,KACrCgf,EAAK5B,OAAS4B,EAAK5B,OAAS,IAAM,IACnC4B,EAAK3Y,KAAO,MACZ2Y,EAAKC,OAET,SAASsC,GAAalC,EAAKvkB,EAAM0mB,EAAIC,EAASC,GAC5C,IAAIC,EAAY7mB,EAAK4mB,GAQrB,OAPKC,IACHA,EAAY7mB,EAAK4mB,GAAUrC,EAAIuC,YAAYF,GAAQlkB,MACnDgkB,EAAG3lB,KAAK6lB,IAENC,EAAYF,IACdA,EAAUE,GAELF,EAET,SAASI,GAAaxC,EAAKL,EAAM8C,EAAeC,GAC9CA,EAAQA,GAAS,GACjB,IAAIjnB,EAAOinB,EAAMjnB,KAAOinB,EAAMjnB,MAAQ,GAClC0mB,EAAKO,EAAMC,eAAiBD,EAAMC,gBAAkB,GACpDD,EAAM/C,OAASA,IACjBlkB,EAAOinB,EAAMjnB,KAAO,GACpB0mB,EAAKO,EAAMC,eAAiB,GAC5BD,EAAM/C,KAAOA,GAEfK,EAAI4C,OACJ5C,EAAIL,KAAOA,EACX,IAAIyC,EAAU,EACd,MAAM1d,EAAO+d,EAActlB,OAC3B,IAAIkH,EAAGgY,EAAGwG,EAAMC,EAAOC,EACvB,IAAK1e,EAAI,EAAGA,EAAIK,EAAML,IAEpB,GADAye,EAAQL,EAAcpe,QACRvJ,IAAVgoB,GAAiC,OAAVA,IAAqC,IAAnBzf,EAAQyf,GACnDV,EAAUF,GAAalC,EAAKvkB,EAAM0mB,EAAIC,EAASU,QAC1C,GAAIzf,EAAQyf,GACjB,IAAKzG,EAAI,EAAGwG,EAAOC,EAAM3lB,OAAQkf,EAAIwG,EAAMxG,IACzC0G,EAAcD,EAAMzG,QACAvhB,IAAhBioB,GAA6C,OAAhBA,GAAyB1f,EAAQ0f,KAChEX,EAAUF,GAAalC,EAAKvkB,EAAM0mB,EAAIC,EAASW,IAKvD/C,EAAIgD,UACJ,MAAMC,EAAQd,EAAGhlB,OAAS,EAC1B,GAAI8lB,EAAQR,EAActlB,OAAQ,CAChC,IAAKkH,EAAI,EAAGA,EAAI4e,EAAO5e,WACd5I,EAAK0mB,EAAG9d,IAEjB8d,EAAGe,OAAO,EAAGD,GAEf,OAAOb,EAET,SAASe,GAAYjoB,EAAOkoB,EAAOjlB,GACjC,MAAMmhB,EAAmBpkB,EAAMmoB,wBACzBC,EAAsB,IAAVnlB,EAAcmJ,KAAKuC,IAAI1L,EAAQ,EAAG,IAAO,EAC3D,OAAOmJ,KAAKc,OAAOgb,EAAQE,GAAahE,GAAoBA,EAAmBgE,EAEjF,SAASC,GAAYxjB,EAAQigB,GAC3BA,EAAMA,GAAOjgB,EAAOG,WAAW,MAC/B8f,EAAI4C,OACJ5C,EAAIwD,iBACJxD,EAAIyD,UAAU,EAAG,EAAG1jB,EAAO5B,MAAO4B,EAAO1B,QACzC2hB,EAAIgD,UAEN,SAASU,GAAU1D,EAAKljB,EAASqM,EAAGC,GAClC,IAAIrL,EAAM4lB,EAASC,EAAS5c,EAAM6c,EAClC,MAAMljB,EAAQ7D,EAAQgnB,WAChBC,EAAWjnB,EAAQinB,SACnBC,EAASlnB,EAAQknB,OACvB,IAAIC,GAAOF,GAAY,GAAKpc,EAC5B,GAAIhH,GAA0B,kBAAVA,IAClB5C,EAAO4C,EAAM2C,WACA,8BAATvF,GAAiD,+BAATA,GAM1C,OALAiiB,EAAI4C,OACJ5C,EAAIkE,UAAU/a,EAAGC,GACjB4W,EAAI1O,OAAO2S,GACXjE,EAAImE,UAAUxjB,GAAQA,EAAMxC,MAAQ,GAAIwC,EAAMtC,OAAS,EAAGsC,EAAMxC,MAAOwC,EAAMtC,aAC7E2hB,EAAIgD,UAIR,KAAI9Z,MAAM8a,IAAWA,GAAU,GAA/B,CAIA,OADAhE,EAAIoE,YACIzjB,GACR,QACEqf,EAAIqE,IAAIlb,EAAGC,EAAG4a,EAAQ,EAAGzc,GACzByY,EAAIsE,YACJ,MACF,IAAK,WACHtE,EAAIuE,OAAOpb,EAAI7B,KAAKyE,IAAIkY,GAAOD,EAAQ5a,EAAI9B,KAAK0F,IAAIiX,GAAOD,GAC3DC,GAAOnc,EACPkY,EAAIwE,OAAOrb,EAAI7B,KAAKyE,IAAIkY,GAAOD,EAAQ5a,EAAI9B,KAAK0F,IAAIiX,GAAOD,GAC3DC,GAAOnc,EACPkY,EAAIwE,OAAOrb,EAAI7B,KAAKyE,IAAIkY,GAAOD,EAAQ5a,EAAI9B,KAAK0F,IAAIiX,GAAOD,GAC3DhE,EAAIsE,YACJ,MACF,IAAK,cACHT,EAAwB,KAATG,EACfhd,EAAOgd,EAASH,EAChBF,EAAUrc,KAAK0F,IAAIiX,EAAMpc,GAAcb,EACvC4c,EAAUtc,KAAKyE,IAAIkY,EAAMpc,GAAcb,EACvCgZ,EAAIqE,IAAIlb,EAAIwa,EAASva,EAAIwa,EAASC,EAAcI,EAAM5c,EAAI4c,EAAMrc,GAChEoY,EAAIqE,IAAIlb,EAAIya,EAASxa,EAAIua,EAASE,EAAcI,EAAMrc,EAASqc,GAC/DjE,EAAIqE,IAAIlb,EAAIwa,EAASva,EAAIwa,EAASC,EAAcI,EAAKA,EAAMrc,GAC3DoY,EAAIqE,IAAIlb,EAAIya,EAASxa,EAAIua,EAASE,EAAcI,EAAMrc,EAASqc,EAAM5c,GACrE2Y,EAAIsE,YACJ,MACF,IAAK,OACH,IAAKP,EAAU,CACb/c,EAAOM,KAAKmd,QAAUT,EACtBhE,EAAI0E,KAAKvb,EAAInC,EAAMoC,EAAIpC,EAAM,EAAIA,EAAM,EAAIA,GAC3C,MAEFid,GAAOpc,EACT,IAAK,UACH8b,EAAUrc,KAAK0F,IAAIiX,GAAOD,EAC1BJ,EAAUtc,KAAKyE,IAAIkY,GAAOD,EAC1BhE,EAAIuE,OAAOpb,EAAIwa,EAASva,EAAIwa,GAC5B5D,EAAIwE,OAAOrb,EAAIya,EAASxa,EAAIua,GAC5B3D,EAAIwE,OAAOrb,EAAIwa,EAASva,EAAIwa,GAC5B5D,EAAIwE,OAAOrb,EAAIya,EAASxa,EAAIua,GAC5B3D,EAAIsE,YACJ,MACF,IAAK,WACHL,GAAOpc,EACT,IAAK,QACH8b,EAAUrc,KAAK0F,IAAIiX,GAAOD,EAC1BJ,EAAUtc,KAAKyE,IAAIkY,GAAOD,EAC1BhE,EAAIuE,OAAOpb,EAAIwa,EAASva,EAAIwa,GAC5B5D,EAAIwE,OAAOrb,EAAIwa,EAASva,EAAIwa,GAC5B5D,EAAIuE,OAAOpb,EAAIya,EAASxa,EAAIua,GAC5B3D,EAAIwE,OAAOrb,EAAIya,EAASxa,EAAIua,GAC5B,MACF,IAAK,OACHA,EAAUrc,KAAK0F,IAAIiX,GAAOD,EAC1BJ,EAAUtc,KAAKyE,IAAIkY,GAAOD,EAC1BhE,EAAIuE,OAAOpb,EAAIwa,EAASva,EAAIwa,GAC5B5D,EAAIwE,OAAOrb,EAAIwa,EAASva,EAAIwa,GAC5B5D,EAAIuE,OAAOpb,EAAIya,EAASxa,EAAIua,GAC5B3D,EAAIwE,OAAOrb,EAAIya,EAASxa,EAAIua,GAC5BM,GAAOpc,EACP8b,EAAUrc,KAAK0F,IAAIiX,GAAOD,EAC1BJ,EAAUtc,KAAKyE,IAAIkY,GAAOD,EAC1BhE,EAAIuE,OAAOpb,EAAIwa,EAASva,EAAIwa,GAC5B5D,EAAIwE,OAAOrb,EAAIwa,EAASva,EAAIwa,GAC5B5D,EAAIuE,OAAOpb,EAAIya,EAASxa,EAAIua,GAC5B3D,EAAIwE,OAAOrb,EAAIya,EAASxa,EAAIua,GAC5B,MACF,IAAK,OACHA,EAAUrc,KAAK0F,IAAIiX,GAAOD,EAC1BJ,EAAUtc,KAAKyE,IAAIkY,GAAOD,EAC1BhE,EAAIuE,OAAOpb,EAAIwa,EAASva,EAAIwa,GAC5B5D,EAAIwE,OAAOrb,EAAIwa,EAASva,EAAIwa,GAC5B,MACF,IAAK,OACH5D,EAAIuE,OAAOpb,EAAGC,GACd4W,EAAIwE,OAAOrb,EAAI7B,KAAK0F,IAAIiX,GAAOD,EAAQ5a,EAAI9B,KAAKyE,IAAIkY,GAAOD,GAC3D,MAEFhE,EAAI2E,OACA7nB,EAAQ8nB,YAAc,GACxB5E,EAAI6E,UAGR,SAASC,GAAeC,EAAOC,EAAMC,GAEnC,OADAA,EAASA,GAAU,IACXD,GAASD,GAASA,EAAM5b,EAAI6b,EAAKliB,KAAOmiB,GAAUF,EAAM5b,EAAI6b,EAAKjiB,MAAQkiB,GACjFF,EAAM3b,EAAI4b,EAAKE,IAAMD,GAAUF,EAAM3b,EAAI4b,EAAKG,OAASF,EAEzD,SAASG,GAASpF,EAAKgF,GACrBhF,EAAI4C,OACJ5C,EAAIoE,YACJpE,EAAI0E,KAAKM,EAAKliB,KAAMkiB,EAAKE,IAAKF,EAAKjiB,MAAQiiB,EAAKliB,KAAMkiB,EAAKG,OAASH,EAAKE,KACzElF,EAAIqF,OAEN,SAASC,GAAWtF,GAClBA,EAAIgD,UAEN,SAASuC,GAAevF,EAAKwF,EAAUxgB,EAAQygB,EAAMpF,GACnD,IAAKmF,EACH,OAAOxF,EAAIwE,OAAOxf,EAAOmE,EAAGnE,EAAOoE,GAErC,GAAa,WAATiX,EAAmB,CACrB,MAAMqF,GAAYF,EAASrc,EAAInE,EAAOmE,GAAK,EAC3C6W,EAAIwE,OAAOkB,EAAUF,EAASpc,GAC9B4W,EAAIwE,OAAOkB,EAAU1gB,EAAOoE,OACV,UAATiX,MAAuBoF,EAChCzF,EAAIwE,OAAOgB,EAASrc,EAAGnE,EAAOoE,GAE9B4W,EAAIwE,OAAOxf,EAAOmE,EAAGqc,EAASpc,GAEhC4W,EAAIwE,OAAOxf,EAAOmE,EAAGnE,EAAOoE,GAE9B,SAASuc,GAAe3F,EAAKwF,EAAUxgB,EAAQygB,GAC7C,IAAKD,EACH,OAAOxF,EAAIwE,OAAOxf,EAAOmE,EAAGnE,EAAOoE,GAErC4W,EAAI4F,cACFH,EAAOD,EAASK,KAAOL,EAASM,KAChCL,EAAOD,EAASO,KAAOP,EAASQ,KAChCP,EAAOzgB,EAAO8gB,KAAO9gB,EAAO6gB,KAC5BJ,EAAOzgB,EAAOghB,KAAOhhB,EAAO+gB,KAC5B/gB,EAAOmE,EACPnE,EAAOoE,GAEX,SAAS6c,GAAWjG,EAAKkG,EAAM/c,EAAGC,EAAGuW,EAAMwG,EAAO,IAChD,MAAMC,EAAQ/iB,EAAQ6iB,GAAQA,EAAO,CAACA,GAChCrB,EAASsB,EAAKE,YAAc,GAA0B,KAArBF,EAAKG,YAC5C,IAAIjiB,EAAGkiB,EAIP,IAHAvG,EAAI4C,OACJ5C,EAAIL,KAAOA,EAAK0C,OAChBmE,GAAcxG,EAAKmG,GACd9hB,EAAI,EAAGA,EAAI+hB,EAAMjpB,SAAUkH,EAC9BkiB,EAAOH,EAAM/hB,GACTwgB,IACEsB,EAAKG,cACPtG,EAAIyG,YAAcN,EAAKG,aAEpBljB,EAAc+iB,EAAKE,eACtBrG,EAAI0G,UAAYP,EAAKE,aAEvBrG,EAAI2G,WAAWJ,EAAMpd,EAAGC,EAAG+c,EAAKS,WAElC5G,EAAI6G,SAASN,EAAMpd,EAAGC,EAAG+c,EAAKS,UAC9BE,GAAa9G,EAAK7W,EAAGC,EAAGmd,EAAMJ,GAC9B/c,GAAKuW,EAAKE,WAEZG,EAAIgD,UAEN,SAASwD,GAAcxG,EAAKmG,GACtBA,EAAKY,aACP/G,EAAIkE,UAAUiC,EAAKY,YAAY,GAAIZ,EAAKY,YAAY,IAEjD3jB,EAAc+iB,EAAKpC,WACtB/D,EAAI1O,OAAO6U,EAAKpC,UAEdoC,EAAKrI,QACPkC,EAAIgH,UAAYb,EAAKrI,OAEnBqI,EAAKc,YACPjH,EAAIiH,UAAYd,EAAKc,WAEnBd,EAAKe,eACPlH,EAAIkH,aAAef,EAAKe,cAG5B,SAASJ,GAAa9G,EAAK7W,EAAGC,EAAGmd,EAAMJ,GACrC,GAAIA,EAAKgB,eAAiBhB,EAAKiB,UAAW,CACxC,MAAMC,EAAUrH,EAAIuC,YAAYgE,GAC1BzjB,EAAOqG,EAAIke,EAAQC,sBACnBvkB,EAAQoG,EAAIke,EAAQE,uBACpBrC,EAAM9b,EAAIie,EAAQG,wBAClBrC,EAAS/b,EAAIie,EAAQI,yBACrBC,EAAcvB,EAAKgB,eAAiBjC,EAAMC,GAAU,EAAIA,EAC9DnF,EAAIyG,YAAczG,EAAIgH,UACtBhH,EAAIoE,YACJpE,EAAI0G,UAAYP,EAAKwB,iBAAmB,EACxC3H,EAAIuE,OAAOzhB,EAAM4kB,GACjB1H,EAAIwE,OAAOzhB,EAAO2kB,GAClB1H,EAAI6E,UAGR,SAAS+C,GAAmB5H,EAAK0E,GAC/B,MAAM,EAACvb,EAAC,EAAEC,EAAC,EAAEqH,EAAC,EAAEtC,EAAC,OAAE6V,GAAUU,EAC7B1E,EAAIqE,IAAIlb,EAAI6a,EAAO6D,QAASze,EAAI4a,EAAO6D,QAAS7D,EAAO6D,SAAUjgB,EAASP,GAAI,GAC9E2Y,EAAIwE,OAAOrb,EAAGC,EAAI+E,EAAI6V,EAAO8D,YAC7B9H,EAAIqE,IAAIlb,EAAI6a,EAAO8D,WAAY1e,EAAI+E,EAAI6V,EAAO8D,WAAY9D,EAAO8D,WAAYzgB,EAAIO,GAAS,GAC1FoY,EAAIwE,OAAOrb,EAAIsH,EAAIuT,EAAO+D,YAAa3e,EAAI+E,GAC3C6R,EAAIqE,IAAIlb,EAAIsH,EAAIuT,EAAO+D,YAAa3e,EAAI+E,EAAI6V,EAAO+D,YAAa/D,EAAO+D,YAAangB,EAAS,GAAG,GAChGoY,EAAIwE,OAAOrb,EAAIsH,EAAGrH,EAAI4a,EAAOgE,UAC7BhI,EAAIqE,IAAIlb,EAAIsH,EAAIuT,EAAOgE,SAAU5e,EAAI4a,EAAOgE,SAAUhE,EAAOgE,SAAU,GAAIpgB,GAAS,GACpFoY,EAAIwE,OAAOrb,EAAI6a,EAAO6D,QAASze,GAGjC,MAAM6e,GAAc,IAAIC,OAAO,wCACzBC,GAAa,IAAID,OAAO,yEAC9B,SAASE,GAAa/qB,EAAO2J,GAC3B,MAAMqhB,GAAW,GAAKhrB,GAAOirB,MAAML,IACnC,IAAKI,GAA0B,WAAfA,EAAQ,GACtB,OAAc,IAAPrhB,EAGT,OADA3J,GAASgrB,EAAQ,GACTA,EAAQ,IAChB,IAAK,KACH,OAAOhrB,EACT,IAAK,IACHA,GAAS,IACT,MAEF,OAAO2J,EAAO3J,EAEhB,MAAMkrB,GAAeva,IAAMA,GAAK,EAChC,SAASwa,GAAkBnrB,EAAOS,GAChC,MAAMqS,EAAM,GACNsY,EAAWllB,EAASzF,GACpBsC,EAAOqoB,EAAWhsB,OAAO2D,KAAKtC,GAASA,EACvC4qB,EAAOnlB,EAASlG,GAClBorB,EACEE,GAAQ/kB,EAAevG,EAAMsrB,GAAOtrB,EAAMS,EAAM6qB,KAChDA,GAAQtrB,EAAMsrB,GAChB,IAAMtrB,EACV,IAAK,MAAMsrB,KAAQvoB,EACjB+P,EAAIwY,GAAQJ,GAAaG,EAAKC,IAEhC,OAAOxY,EAET,SAASyY,GAAOvrB,GACd,OAAOmrB,GAAkBnrB,EAAO,CAAC6nB,IAAK,IAAKniB,MAAO,IAAKoiB,OAAQ,IAAKriB,KAAM,MAE5E,SAAS+lB,GAAcxrB,GACrB,OAAOmrB,GAAkBnrB,EAAO,CAAC,UAAW,WAAY,aAAc,gBAExE,SAASyrB,GAAUzrB,GACjB,MAAMgJ,EAAMuiB,GAAOvrB,GAGnB,OAFAgJ,EAAIlI,MAAQkI,EAAIvD,KAAOuD,EAAItD,MAC3BsD,EAAIhI,OAASgI,EAAI6e,IAAM7e,EAAI8e,OACpB9e,EAET,SAAS0iB,GAAOjsB,EAASksB,GACvBlsB,EAAUA,GAAW,GACrBksB,EAAWA,GAAYpH,GAASjC,KAChC,IAAI3Y,EAAOpD,EAAe9G,EAAQkK,KAAMgiB,EAAShiB,MAC7B,kBAATA,IACTA,EAAOyV,SAASzV,EAAM,KAExB,IAAIrG,EAAQiD,EAAe9G,EAAQ6D,MAAOqoB,EAASroB,OAC/CA,KAAW,GAAKA,GAAO2nB,MAAMH,MAC/Bc,QAAQC,KAAK,kCAAoCvoB,EAAQ,KACzDA,EAAQ,IAEV,MAAMgf,EAAO,CACXC,OAAQhc,EAAe9G,EAAQ8iB,OAAQoJ,EAASpJ,QAChDC,WAAYuI,GAAaxkB,EAAe9G,EAAQ+iB,WAAYmJ,EAASnJ,YAAa7Y,GAClFA,OACArG,QACAod,OAAQna,EAAe9G,EAAQihB,OAAQiL,EAASjL,QAChDsE,OAAQ,IAGV,OADA1C,EAAK0C,OAASJ,GAAatC,GACpBA,EAET,SAASwJ,GAAQC,EAAQvuB,EAASyC,EAAO+rB,GACvC,IACIhlB,EAAGK,EAAMrH,EADTisB,GAAY,EAEhB,IAAKjlB,EAAI,EAAGK,EAAO0kB,EAAOjsB,OAAQkH,EAAIK,IAAQL,EAE5C,GADAhH,EAAQ+rB,EAAO/kB,QACDvJ,IAAVuC,SAGYvC,IAAZD,GAA0C,oBAAVwC,IAClCA,EAAQA,EAAMxC,GACdyuB,GAAY,QAEAxuB,IAAVwC,GAAuB+F,EAAQhG,KACjCA,EAAQA,EAAMC,EAAQD,EAAMF,QAC5BmsB,GAAY,QAEAxuB,IAAVuC,GAIF,OAHIgsB,IAASC,IACXD,EAAKC,WAAY,GAEZjsB,EAIb,SAASksB,GAAUC,EAAQC,EAAOC,GAChC,MAAM,IAAC9f,EAAG,IAAEC,GAAO2f,EACbG,EAAS1lB,EAAYwlB,GAAQ5f,EAAMD,GAAO,GAC1CggB,EAAW,CAACvsB,EAAOwsB,IAAQH,GAAyB,IAAVrsB,EAAc,EAAIA,EAAQwsB,EAC1E,MAAO,CACLjgB,IAAKggB,EAAShgB,GAAMtC,KAAKgC,IAAIqgB,IAC7B9f,IAAK+f,EAAS/f,EAAK8f,IAGvB,SAASG,GAAcC,EAAelvB,GACpC,OAAO4B,OAAOC,OAAOD,OAAOwI,OAAO8kB,GAAgBlvB,GAGrD,SAASmvB,GAAQC,EAAO5sB,EAAO6sB,GAC7BA,EAAMA,GAAO,CAAE5sB,GAAU2sB,EAAM3sB,GAASD,GACxC,IAEI8sB,EAFAC,EAAKH,EAAM9sB,OAAS,EACpBktB,EAAK,EAET,MAAOD,EAAKC,EAAK,EACfF,EAAOE,EAAKD,GAAO,EACfF,EAAIC,GACNE,EAAKF,EAELC,EAAKD,EAGT,MAAO,CAACE,KAAID,MAEd,MAAME,GAAe,CAACL,EAAO5kB,EAAKhI,IAChC2sB,GAAQC,EAAO5sB,EAAOC,GAAS2sB,EAAM3sB,GAAO+H,GAAOhI,GAC/CktB,GAAgB,CAACN,EAAO5kB,EAAKhI,IACjC2sB,GAAQC,EAAO5sB,EAAOC,GAAS2sB,EAAM3sB,GAAO+H,IAAQhI,GACtD,SAASmtB,GAAexL,EAAQpV,EAAKC,GACnC,IAAIlH,EAAQ,EACRC,EAAMoc,EAAO7hB,OACjB,MAAOwF,EAAQC,GAAOoc,EAAOrc,GAASiH,EACpCjH,IAEF,MAAOC,EAAMD,GAASqc,EAAOpc,EAAM,GAAKiH,EACtCjH,IAEF,OAAOD,EAAQ,GAAKC,EAAMoc,EAAO7hB,OAC7B6hB,EAAOld,MAAMa,EAAOC,GACpBoc,EAEN,MAAMyL,GAAc,CAAC,OAAQ,MAAO,QAAS,SAAU,WACvD,SAASC,GAAkBhhB,EAAOihB,GAC5BjhB,EAAMkhB,SACRlhB,EAAMkhB,SAASC,UAAUruB,KAAKmuB,IAGhCluB,OAAOquB,eAAephB,EAAO,WAAY,CACvCqhB,cAAc,EACdrJ,YAAY,EACZrkB,MAAO,CACLwtB,UAAW,CAACF,MAGhBF,GAAYO,QAAS3lB,IACnB,MAAM4lB,EAAS,UAAY1kB,EAAYlB,GACjC6lB,EAAOxhB,EAAMrE,GACnB5I,OAAOquB,eAAephB,EAAOrE,EAAK,CAChC0lB,cAAc,EACdrJ,YAAY,EACZ,SAAS9f,GACP,MAAMupB,EAAMD,EAAKhpB,MAAMnD,KAAM6C,GAM7B,OALA8H,EAAMkhB,SAASC,UAAUG,QAASI,IACF,oBAAnBA,EAAOH,IAChBG,EAAOH,MAAWrpB,KAGfupB,QAKf,SAASE,GAAoB3hB,EAAOihB,GAClC,MAAMW,EAAO5hB,EAAMkhB,SACnB,IAAKU,EACH,OAEF,MAAMT,EAAYS,EAAKT,UACjBvtB,EAAQutB,EAAUvlB,QAAQqlB,IACjB,IAAXrtB,GACFutB,EAAU3H,OAAO5lB,EAAO,GAEtButB,EAAU1tB,OAAS,IAGvBstB,GAAYO,QAAS3lB,WACZqE,EAAMrE,YAERqE,EAAMkhB,UAEf,SAASW,GAAaC,GACpB,MAAMC,EAAM,IAAIC,IAChB,IAAIrnB,EAAGK,EACP,IAAKL,EAAI,EAAGK,EAAO8mB,EAAMruB,OAAQkH,EAAIK,IAAQL,EAC3ConB,EAAI5B,IAAI2B,EAAMnnB,IAEhB,OAAIonB,EAAIzkB,OAAStC,EACR8mB,EAEF/sB,MAAMktB,KAAKF,GAGpB,SAASG,GAAgBC,EAAQC,EAAW,CAAC,IAAKC,EAAaF,EAAQ7C,EAAUgD,EAAY,KAAMH,EAAO,KACnGllB,EAAQqiB,KACXA,EAAWiD,GAAS,YAAaJ,IAEnC,MAAMnJ,EAAQ,CACZ,CAACwJ,OAAOC,aAAc,SACtBC,YAAY,EACZC,QAASR,EACTS,YAAaP,EACb/J,UAAWgH,EACXuD,WAAYP,EACZQ,SAAWzN,GAAU6M,GAAgB,CAAC7M,KAAU8M,GAASC,EAAUC,EAAY/C,IAEjF,OAAO,IAAIyD,MAAM/J,EAAO,CACtB,eAAe1d,EAAQ2jB,GAIrB,cAHO3jB,EAAO2jB,UACP3jB,EAAO0nB,aACPb,EAAO,GAAGlD,IACV,GAET,IAAI3jB,EAAQ2jB,GACV,OAAOgE,GAAQ3nB,EAAQ2jB,EACrB,IAAMiE,GAAqBjE,EAAMmD,EAAUD,EAAQ7mB,KAEvD,yBAAyBA,EAAQ2jB,GAC/B,OAAOkE,QAAQC,yBAAyB9nB,EAAOqnB,QAAQ,GAAI1D,IAE7D,iBACE,OAAOkE,QAAQE,eAAelB,EAAO,KAEvC,IAAI7mB,EAAQ2jB,GACV,OAAOqE,GAAqBhoB,GAAQzI,SAASosB,IAE/C,QAAQ3jB,GACN,OAAOgoB,GAAqBhoB,IAE9B,IAAIA,EAAQ2jB,EAAMtrB,GAChB,MAAM4vB,EAAUjoB,EAAOkoB,WAAaloB,EAAOkoB,SAAWlB,KAGtD,OAFAhnB,EAAO2jB,GAAQsE,EAAQtE,GAAQtrB,SACxB2H,EAAO0nB,OACP,KAIb,SAASS,GAAeC,EAAOvyB,EAASwyB,EAAUC,GAChD,MAAM5K,EAAQ,CACZ0J,YAAY,EACZmB,OAAQH,EACRI,SAAU3yB,EACV4yB,UAAWJ,EACXK,OAAQ,IAAIhC,IACZxM,aAAcA,GAAakO,EAAOE,GAClCK,WAAa3N,GAAQmN,GAAeC,EAAOpN,EAAKqN,EAAUC,GAC1Dd,SAAWzN,GAAUoO,GAAeC,EAAMZ,SAASzN,GAAQlkB,EAASwyB,EAAUC,IAEhF,OAAO,IAAIb,MAAM/J,EAAO,CACtB,eAAe1d,EAAQ2jB,GAGrB,cAFO3jB,EAAO2jB,UACPyE,EAAMzE,IACN,GAET,IAAI3jB,EAAQ2jB,EAAMiF,GAChB,OAAOjB,GAAQ3nB,EAAQ2jB,EACrB,IAAMkF,GAAoB7oB,EAAQ2jB,EAAMiF,KAE5C,yBAAyB5oB,EAAQ2jB,GAC/B,OAAO3jB,EAAOka,aAAa4O,QACvBjB,QAAQ3lB,IAAIkmB,EAAOzE,GAAQ,CAACjH,YAAY,EAAMqJ,cAAc,QAAQjwB,EACpE+xB,QAAQC,yBAAyBM,EAAOzE,IAE9C,iBACE,OAAOkE,QAAQE,eAAeK,IAEhC,IAAIpoB,EAAQ2jB,GACV,OAAOkE,QAAQ3lB,IAAIkmB,EAAOzE,IAE5B,UACE,OAAOkE,QAAQkB,QAAQX,IAEzB,IAAIpoB,EAAQ2jB,EAAMtrB,GAGhB,OAFA+vB,EAAMzE,GAAQtrB,SACP2H,EAAO2jB,IACP,KAIb,SAASzJ,GAAakO,EAAOxL,EAAW,CAACoM,YAAY,EAAMC,WAAW,IACpE,MAAM,YAACpM,EAAcD,EAASoM,WAAU,WAAEjM,EAAaH,EAASqM,UAAS,SAAEC,EAAWtM,EAASkM,SAAWV,EAC1G,MAAO,CACLU,QAASI,EACTF,WAAYnM,EACZoM,UAAWlM,EACXoM,aAAcvnB,EAAWib,GAAeA,EAAc,IAAMA,EAC5DuM,YAAaxnB,EAAWmb,GAAcA,EAAa,IAAMA,GAG7D,MAAMsM,GAAU,CAACC,EAAQpN,IAASoN,EAASA,EAAS/nB,EAAY2a,GAAQA,EAClEqN,GAAmB,CAAC5F,EAAMtrB,IAAUkG,EAASlG,IAAmB,aAATsrB,IACzB,OAAjClsB,OAAOswB,eAAe1vB,IAAmBA,EAAMmxB,cAAgB/xB,QAClE,SAASkwB,GAAQ3nB,EAAQ2jB,EAAMQ,GAC7B,GAAI1sB,OAAOoF,UAAUkE,eAAehE,KAAKiD,EAAQ2jB,GAC/C,OAAO3jB,EAAO2jB,GAEhB,MAAMtrB,EAAQ8rB,IAEd,OADAnkB,EAAO2jB,GAAQtrB,EACRA,EAET,SAASwwB,GAAoB7oB,EAAQ2jB,EAAMiF,GACzC,MAAM,OAACL,EAAM,SAAEC,EAAQ,UAAEC,EAAWvO,aAAcuP,GAAezpB,EACjE,IAAI3H,EAAQkwB,EAAO5E,GAUnB,OATI/hB,EAAWvJ,IAAUoxB,EAAYN,aAAaxF,KAChDtrB,EAAQqxB,GAAmB/F,EAAMtrB,EAAO2H,EAAQ4oB,IAE9CvqB,EAAQhG,IAAUA,EAAMF,SAC1BE,EAAQsxB,GAAchG,EAAMtrB,EAAO2H,EAAQypB,EAAYL,cAErDG,GAAiB5F,EAAMtrB,KACzBA,EAAQ8vB,GAAe9vB,EAAOmwB,EAAUC,GAAaA,EAAU9E,GAAO8F,IAEjEpxB,EAET,SAASqxB,GAAmB/F,EAAMtrB,EAAO2H,EAAQ4oB,GAC/C,MAAM,OAACL,EAAM,SAAEC,EAAQ,UAAEC,EAAS,OAAEC,GAAU1oB,EAC9C,GAAI0oB,EAAOxmB,IAAIyhB,GACb,MAAM,IAAI3oB,MAAM,uBAAyBvB,MAAMktB,KAAK+B,GAAQkB,KAAK,MAAQ,KAAOjG,GAQlF,OANA+E,EAAO7D,IAAIlB,GACXtrB,EAAQA,EAAMmwB,EAAUC,GAAaG,GACrCF,EAAOmB,OAAOlG,GACV4F,GAAiB5F,EAAMtrB,KACzBA,EAAQyxB,GAAkBvB,EAAOlB,QAASkB,EAAQ5E,EAAMtrB,IAEnDA,EAET,SAASsxB,GAAchG,EAAMtrB,EAAO2H,EAAQopB,GAC1C,MAAM,OAACb,EAAM,SAAEC,EAAQ,UAAEC,EAAWvO,aAAcuP,GAAezpB,EACjE,GAAI2B,EAAQ6mB,EAASlwB,QAAU8wB,EAAYzF,GACzCtrB,EAAQA,EAAMmwB,EAASlwB,MAAQD,EAAMF,aAChC,GAAIoG,EAASlG,EAAM,IAAK,CAC7B,MAAM0xB,EAAM1xB,EACNwuB,EAAS0B,EAAOlB,QAAQ2C,OAAO5jB,GAAKA,IAAM2jB,GAChD1xB,EAAQ,GACR,IAAK,MAAM4J,KAAQ8nB,EAAK,CACtB,MAAME,EAAWH,GAAkBjD,EAAQ0B,EAAQ5E,EAAM1hB,GACzD5J,EAAMb,KAAK2wB,GAAe8B,EAAUzB,EAAUC,GAAaA,EAAU9E,GAAO8F,KAGhF,OAAOpxB,EAET,SAAS6xB,GAAgBlG,EAAUL,EAAMtrB,GACvC,OAAOuJ,EAAWoiB,GAAYA,EAASL,EAAMtrB,GAAS2rB,EAExD,MAAMmG,GAAW,CAAC9pB,EAAK+pB,KAAmB,IAAR/pB,EAAe+pB,EAC9B,kBAAR/pB,EAAmBe,EAAiBgpB,EAAQ/pB,QAAOvK,EAC9D,SAASu0B,GAAU5D,EAAK6D,EAAcjqB,EAAKkqB,EAAgBlyB,GACzD,IAAK,MAAM+xB,KAAUE,EAAc,CACjC,MAAMvQ,EAAQoQ,GAAS9pB,EAAK+pB,GAC5B,GAAIrQ,EAAO,CACT0M,EAAI5B,IAAI9K,GACR,MAAMiK,EAAWkG,GAAgBnQ,EAAMiD,UAAW3c,EAAKhI,GACvD,GAAIsJ,EAAQqiB,IAAaA,IAAa3jB,GAAO2jB,IAAauG,EACxD,OAAOvG,OAEJ,IAAc,IAAVjK,GAAmBpY,EAAQ4oB,IAAmBlqB,IAAQkqB,EAC/D,OAAO,KAGX,OAAO,EAET,SAAST,GAAkBQ,EAAcL,EAAUtG,EAAMtrB,GACvD,MAAM0uB,EAAakD,EAAS3C,YACtBtD,EAAWkG,GAAgBD,EAASjN,UAAW2G,EAAMtrB,GACrDmyB,EAAY,IAAIF,KAAiBvD,GACjCN,EAAM,IAAIC,IAChBD,EAAI5B,IAAIxsB,GACR,IAAIgI,EAAMoqB,GAAiBhE,EAAK+D,EAAW7G,EAAMK,GAAYL,EAAMtrB,GACnE,OAAY,OAARgI,MAGAsB,EAAQqiB,IAAaA,IAAaL,IACpCtjB,EAAMoqB,GAAiBhE,EAAK+D,EAAWxG,EAAU3jB,EAAKhI,GAC1C,OAARgI,KAICumB,GAAgBntB,MAAMktB,KAAKF,GAAM,CAAC,IAAKM,EAAY/C,EACxD,IAAM0G,GAAaT,EAAUtG,EAAMtrB,KAEvC,SAASoyB,GAAiBhE,EAAK+D,EAAWnqB,EAAK2jB,EAAU/hB,GACvD,MAAO5B,EACLA,EAAMgqB,GAAU5D,EAAK+D,EAAWnqB,EAAK2jB,EAAU/hB,GAEjD,OAAO5B,EAET,SAASqqB,GAAaT,EAAUtG,EAAMtrB,GACpC,MAAM+xB,EAASH,EAAS1C,aAClB5D,KAAQyG,IACZA,EAAOzG,GAAQ,IAEjB,MAAM3jB,EAASoqB,EAAOzG,GACtB,OAAItlB,EAAQ2B,IAAWzB,EAASlG,GACvBA,EAEF2H,EAET,SAAS4nB,GAAqBjE,EAAMmD,EAAUD,EAAQuB,GACpD,IAAI/vB,EACJ,IAAK,MAAMixB,KAAUxC,EAEnB,GADAzuB,EAAQ4uB,GAASoC,GAAQC,EAAQ3F,GAAOkD,GACpCllB,EAAQtJ,GACV,OAAOkxB,GAAiB5F,EAAMtrB,GAC1ByxB,GAAkBjD,EAAQuB,EAAOzE,EAAMtrB,GACvCA,EAIV,SAAS4uB,GAAS5mB,EAAKwmB,GACrB,IAAK,MAAM9M,KAAS8M,EAAQ,CAC1B,IAAK9M,EACH,SAEF,MAAM1hB,EAAQ0hB,EAAM1Z,GACpB,GAAIsB,EAAQtJ,GACV,OAAOA,GAIb,SAAS2vB,GAAqBhoB,GAC5B,IAAI5E,EAAO4E,EAAO0nB,MAIlB,OAHKtsB,IACHA,EAAO4E,EAAO0nB,MAAQiD,GAAyB3qB,EAAOqnB,UAEjDjsB,EAET,SAASuvB,GAAyB9D,GAChC,MAAMJ,EAAM,IAAIC,IAChB,IAAK,MAAM3M,KAAS8M,EAClB,IAAK,MAAMxmB,KAAO5I,OAAO2D,KAAK2e,GAAOiQ,OAAO7pB,IAAMA,EAAE2c,WAAW,MAC7D2J,EAAI5B,IAAIxkB,GAGZ,OAAO5G,MAAMktB,KAAKF,GAEpB,SAASmE,GAA4BC,EAAMp0B,EAAMkH,EAAOmtB,GACtD,MAAM,OAACC,GAAUF,GACX,IAACxqB,EAAM,KAAOtG,KAAKixB,SACnBC,EAAS,IAAIxxB,MAAMqxB,GACzB,IAAIzrB,EAAGK,EAAMpH,EAAO2J,EACpB,IAAK5C,EAAI,EAAGK,EAAOorB,EAAOzrB,EAAIK,IAAQL,EACpC/G,EAAQ+G,EAAI1B,EACZsE,EAAOxL,EAAK6B,GACZ2yB,EAAO5rB,GAAK,CACV2L,EAAG+f,EAAOG,MAAM9pB,EAAiBa,EAAM5B,GAAM/H,IAGjD,OAAO2yB,EAGT,MAAME,GAAU/xB,OAAO+xB,SAAW,MAC5BC,GAAW,CAACC,EAAQhsB,IAAMA,EAAIgsB,EAAOlzB,SAAWkzB,EAAOhsB,GAAGisB,MAAQD,EAAOhsB,GACzEksB,GAAgBpQ,GAA4B,MAAdA,EAAoB,IAAM,IAC9D,SAASqQ,GAAYC,EAAYC,EAAaC,EAAY9kB,GACxD,MAAM2Z,EAAWiL,EAAWH,KAAOI,EAAcD,EAC3CxxB,EAAUyxB,EACVE,EAAOD,EAAWL,KAAOI,EAAcC,EACvCE,EAAMhmB,GAAsB5L,EAASumB,GACrCsL,EAAMjmB,GAAsB+lB,EAAM3xB,GACxC,IAAI8xB,EAAMF,GAAOA,EAAMC,GACnBE,EAAMF,GAAOD,EAAMC,GACvBC,EAAM7nB,MAAM6nB,GAAO,EAAIA,EACvBC,EAAM9nB,MAAM8nB,GAAO,EAAIA,EACvB,MAAMC,EAAKplB,EAAIklB,EACTG,EAAKrlB,EAAImlB,EACf,MAAO,CACLxL,SAAU,CACRrc,EAAGlK,EAAQkK,EAAI8nB,GAAML,EAAKznB,EAAIqc,EAASrc,GACvCC,EAAGnK,EAAQmK,EAAI6nB,GAAML,EAAKxnB,EAAIoc,EAASpc,IAEzCwnB,KAAM,CACJznB,EAAGlK,EAAQkK,EAAI+nB,GAAMN,EAAKznB,EAAIqc,EAASrc,GACvCC,EAAGnK,EAAQmK,EAAI8nB,GAAMN,EAAKxnB,EAAIoc,EAASpc,KAI7C,SAAS+nB,GAAed,EAAQe,EAAQC,GACtC,MAAMC,EAAYjB,EAAOlzB,OACzB,IAAIo0B,EAAQC,EAAOC,EAAMC,EAAkBC,EACvCC,EAAaxB,GAASC,EAAQ,GAClC,IAAK,IAAIhsB,EAAI,EAAGA,EAAIitB,EAAY,IAAKjtB,EACnCstB,EAAeC,EACfA,EAAaxB,GAASC,EAAQhsB,EAAI,GAC7BstB,GAAiBC,IAGlBvpB,EAAa+oB,EAAO/sB,GAAI,EAAG8rB,IAC7BkB,EAAGhtB,GAAKgtB,EAAGhtB,EAAI,GAAK,GAGtBktB,EAASF,EAAGhtB,GAAK+sB,EAAO/sB,GACxBmtB,EAAQH,EAAGhtB,EAAI,GAAK+sB,EAAO/sB,GAC3BqtB,EAAmBpqB,KAAKiB,IAAIgpB,EAAQ,GAAKjqB,KAAKiB,IAAIipB,EAAO,GACrDE,GAAoB,IAGxBD,EAAO,EAAInqB,KAAKuB,KAAK6oB,GACrBL,EAAGhtB,GAAKktB,EAASE,EAAOL,EAAO/sB,GAC/BgtB,EAAGhtB,EAAI,GAAKmtB,EAAQC,EAAOL,EAAO/sB,MAGtC,SAASwtB,GAAgBxB,EAAQgB,EAAIlR,EAAY,KAC/C,MAAM2R,EAAYvB,GAAapQ,GACzBmR,EAAYjB,EAAOlzB,OACzB,IAAI40B,EAAOC,EAAaL,EACpBC,EAAaxB,GAASC,EAAQ,GAClC,IAAK,IAAIhsB,EAAI,EAAGA,EAAIitB,IAAajtB,EAAG,CAIlC,GAHA2tB,EAAcL,EACdA,EAAeC,EACfA,EAAaxB,GAASC,EAAQhsB,EAAI,IAC7BstB,EACH,SAEF,MAAMM,EAASN,EAAaxR,GACtB+R,EAASP,EAAaG,GACxBE,IACFD,GAASE,EAASD,EAAY7R,IAAc,EAC5CwR,EAAa,MAAMxR,GAAe8R,EAASF,EAC3CJ,EAAa,MAAMG,GAAeI,EAASH,EAAQV,EAAGhtB,IAEpDutB,IACFG,GAASH,EAAWzR,GAAa8R,GAAU,EAC3CN,EAAa,MAAMxR,GAAe8R,EAASF,EAC3CJ,EAAa,MAAMG,GAAeI,EAASH,EAAQV,EAAGhtB,KAI5D,SAAS8tB,GAAoB9B,EAAQlQ,EAAY,KAC/C,MAAM2R,EAAYvB,GAAapQ,GACzBmR,EAAYjB,EAAOlzB,OACnBi0B,EAAS3yB,MAAM6yB,GAAW3M,KAAK,GAC/B0M,EAAK5yB,MAAM6yB,GACjB,IAAIjtB,EAAG2tB,EAAaL,EAChBC,EAAaxB,GAASC,EAAQ,GAClC,IAAKhsB,EAAI,EAAGA,EAAIitB,IAAajtB,EAI3B,GAHA2tB,EAAcL,EACdA,EAAeC,EACfA,EAAaxB,GAASC,EAAQhsB,EAAI,GAC7BstB,EAAL,CAGA,GAAIC,EAAY,CACd,MAAMQ,EAAaR,EAAWzR,GAAawR,EAAaxR,GACxDiR,EAAO/sB,GAAoB,IAAf+tB,GAAoBR,EAAWE,GAAaH,EAAaG,IAAcM,EAAa,EAElGf,EAAGhtB,GAAM2tB,EACJJ,EACA5pB,EAAKopB,EAAO/sB,EAAI,MAAQ2D,EAAKopB,EAAO/sB,IAAO,GAC3C+sB,EAAO/sB,EAAI,GAAK+sB,EAAO/sB,IAAM,EAFhB+sB,EAAO/sB,EAAI,GADN+sB,EAAO/sB,GAKhC8sB,GAAed,EAAQe,EAAQC,GAC/BQ,GAAgBxB,EAAQgB,EAAIlR,GAE9B,SAASkS,GAAgBC,EAAI1oB,EAAKC,GAChC,OAAOvC,KAAKuC,IAAIvC,KAAKsC,IAAI0oB,EAAIzoB,GAAMD,GAErC,SAAS2oB,GAAgBlC,EAAQrL,GAC/B,IAAI3gB,EAAGK,EAAMqgB,EAAOyN,EAAQC,EACxBC,EAAa5N,GAAeuL,EAAO,GAAIrL,GAC3C,IAAK3gB,EAAI,EAAGK,EAAO2rB,EAAOlzB,OAAQkH,EAAIK,IAAQL,EAC5CouB,EAAaD,EACbA,EAASE,EACTA,EAAaruB,EAAIK,EAAO,GAAKogB,GAAeuL,EAAOhsB,EAAI,GAAI2gB,GACtDwN,IAGLzN,EAAQsL,EAAOhsB,GACXouB,IACF1N,EAAMc,KAAOwM,GAAgBtN,EAAMc,KAAMb,EAAKliB,KAAMkiB,EAAKjiB,OACzDgiB,EAAMgB,KAAOsM,GAAgBtN,EAAMgB,KAAMf,EAAKE,IAAKF,EAAKG,SAEtDuN,IACF3N,EAAMe,KAAOuM,GAAgBtN,EAAMe,KAAMd,EAAKliB,KAAMkiB,EAAKjiB,OACzDgiB,EAAMiB,KAAOqM,GAAgBtN,EAAMiB,KAAMhB,EAAKE,IAAKF,EAAKG,UAI9D,SAASwN,GAA2BtC,EAAQvzB,EAASkoB,EAAM4N,EAAMzS,GAC/D,IAAI9b,EAAGK,EAAMqgB,EAAO8N,EAIpB,GAHI/1B,EAAQg2B,WACVzC,EAASA,EAAOrB,OAAQsD,IAAQA,EAAGhC,OAEE,aAAnCxzB,EAAQi2B,uBACVZ,GAAoB9B,EAAQlQ,OACvB,CACL,IAAI6S,EAAOJ,EAAOvC,EAAOA,EAAOlzB,OAAS,GAAKkzB,EAAO,GACrD,IAAKhsB,EAAI,EAAGK,EAAO2rB,EAAOlzB,OAAQkH,EAAIK,IAAQL,EAC5C0gB,EAAQsL,EAAOhsB,GACfwuB,EAAgBrC,GACdwC,EACAjO,EACAsL,EAAO/oB,KAAKsC,IAAIvF,EAAI,EAAGK,GAAQkuB,EAAO,EAAI,IAAMluB,GAChD5H,EAAQm2B,SAEVlO,EAAMc,KAAOgN,EAAcrN,SAASrc,EACpC4b,EAAMgB,KAAO8M,EAAcrN,SAASpc,EACpC2b,EAAMe,KAAO+M,EAAcjC,KAAKznB,EAChC4b,EAAMiB,KAAO6M,EAAcjC,KAAKxnB,EAChC4pB,EAAOjO,EAGPjoB,EAAQy1B,iBACVA,GAAgBlC,EAAQrL,GAI5B,SAASkO,KACP,MAAyB,qBAAX9xB,QAA8C,qBAAb+xB,SAEjD,SAASC,GAAeC,GACtB,IAAIjE,EAASiE,EAAQC,WAIrB,OAHIlE,GAAgC,wBAAtBA,EAAO9rB,aACnB8rB,EAASA,EAAOmE,MAEXnE,EAET,SAASoE,GAAcC,EAAY7U,EAAM8U,GACvC,IAAIC,EASJ,MAR0B,kBAAfF,GACTE,EAAgBlX,SAASgX,EAAY,KACJ,IAA7BA,EAAWnuB,QAAQ,OACrBquB,EAAgBA,EAAgB,IAAM/U,EAAK0U,WAAWI,KAGxDC,EAAgBF,EAEXE,EAET,MAAMC,GAAoBC,GAAYzyB,OAAOwyB,iBAAiBC,EAAS,MACvE,SAASC,GAASC,EAAIpqB,GACpB,OAAOiqB,GAAiBG,GAAIC,iBAAiBrqB,GAE/C,MAAMsqB,GAAY,CAAC,MAAO,QAAS,SAAU,QAC7C,SAASC,GAAmB31B,EAAQoC,EAAOwzB,GACzC,MAAMvrB,EAAS,GACfurB,EAASA,EAAS,IAAMA,EAAS,GACjC,IAAK,IAAI9vB,EAAI,EAAGA,EAAI,EAAGA,IAAK,CAC1B,MAAMiC,EAAM2tB,GAAU5vB,GACtBuE,EAAOtC,GAAOtC,WAAWzF,EAAOoC,EAAQ,IAAM2F,EAAM6tB,KAAY,EAIlE,OAFAvrB,EAAOzK,MAAQyK,EAAO9F,KAAO8F,EAAO7F,MACpC6F,EAAOvK,OAASuK,EAAOsc,IAAMtc,EAAOuc,OAC7Bvc,EAET,MAAMwrB,GAAe,CAACjrB,EAAGC,EAAGpE,KAAYmE,EAAI,GAAKC,EAAI,MAAQpE,IAAWA,EAAOqvB,YAC/E,SAASC,GAAkBltB,EAAGrH,GAC5B,MAAMw0B,EAAUntB,EAAEmtB,QACZxvB,EAASwvB,GAAWA,EAAQp3B,OAASo3B,EAAQ,GAAKntB,GAClD,QAACotB,EAAO,QAAEC,GAAW1vB,EAC3B,IACIoE,EAAGC,EADHsrB,GAAM,EAEV,GAAIN,GAAaI,EAASC,EAASrtB,EAAEpC,QACnCmE,EAAIqrB,EACJprB,EAAIqrB,MACC,CACL,MAAM/P,EAAO3kB,EAAO40B,wBACpBxrB,EAAIpE,EAAO6vB,QAAUlQ,EAAK5hB,KAC1BsG,EAAIrE,EAAO8vB,QAAUnQ,EAAKQ,IAC1BwP,GAAM,EAER,MAAO,CAACvrB,IAAGC,IAAGsrB,OAEhB,SAASI,GAAoBC,EAAK75B,GAChC,GAAI,WAAY65B,EACd,OAAOA,EAET,MAAM,OAACh1B,EAAM,wBAAEsjB,GAA2BnoB,EACpCyF,EAAQizB,GAAiB7zB,GACzBi1B,EAAgC,eAApBr0B,EAAMs0B,UAClBC,EAAWhB,GAAmBvzB,EAAO,WACrCw0B,EAAUjB,GAAmBvzB,EAAO,SAAU,UAC9C,EAACwI,EAAC,EAAEC,EAAC,IAAEsrB,GAAOJ,GAAkBS,EAAKh1B,GACrC4jB,EAAUuR,EAASpyB,MAAQ4xB,GAAOS,EAAQryB,MAC1C8gB,EAAUsR,EAAShQ,KAAOwP,GAAOS,EAAQjQ,KAC/C,IAAI,MAAC/mB,EAAK,OAAEE,GAAUnD,EAKtB,OAJI85B,IACF72B,GAAS+2B,EAAS/2B,MAAQg3B,EAAQh3B,MAClCE,GAAU62B,EAAS72B,OAAS82B,EAAQ92B,QAE/B,CACL8K,EAAG7B,KAAKc,OAAOe,EAAIwa,GAAWxlB,EAAQ4B,EAAO5B,MAAQklB,GACrDja,EAAG9B,KAAKc,OAAOgB,EAAIwa,GAAWvlB,EAAS0B,EAAO1B,OAASglB,IAG3D,SAAS+R,GAAiBr1B,EAAQ5B,EAAOE,GACvC,IAAIuoB,EAAUyO,EACd,QAAcv6B,IAAVqD,QAAkCrD,IAAXuD,EAAsB,CAC/C,MAAMi3B,EAAYlC,GAAerzB,GACjC,GAAKu1B,EAGE,CACL,MAAM5Q,EAAO4Q,EAAUX,wBACjBY,EAAiB3B,GAAiB0B,GAClCE,EAAkBtB,GAAmBqB,EAAgB,SAAU,SAC/DE,EAAmBvB,GAAmBqB,EAAgB,WAC5Dp3B,EAAQumB,EAAKvmB,MAAQs3B,EAAiBt3B,MAAQq3B,EAAgBr3B,MAC9DE,EAASqmB,EAAKrmB,OAASo3B,EAAiBp3B,OAASm3B,EAAgBn3B,OACjEuoB,EAAW4M,GAAc+B,EAAe3O,SAAU0O,EAAW,eAC7DD,EAAY7B,GAAc+B,EAAeF,UAAWC,EAAW,qBAV/Dn3B,EAAQ4B,EAAO21B,YACfr3B,EAAS0B,EAAO41B,aAYpB,MAAO,CACLx3B,QACAE,SACAuoB,SAAUA,GAAYnf,EACtB4tB,UAAWA,GAAa5tB,GAG5B,MAAMmuB,GAAS5nB,GAAK1G,KAAKc,MAAU,GAAJ4F,GAAU,GACzC,SAAS6nB,GAAe91B,EAAQ+1B,EAASC,EAAUC,GACjD,MAAMr1B,EAAQizB,GAAiB7zB,GACzBk2B,EAAU/B,GAAmBvzB,EAAO,UACpCimB,EAAW4M,GAAc7yB,EAAMimB,SAAU7mB,EAAQ,gBAAkB0H,EACnE4tB,EAAY7B,GAAc7yB,EAAM00B,UAAWt1B,EAAQ,iBAAmB0H,EACtEyuB,EAAgBd,GAAiBr1B,EAAQ+1B,EAASC,GACxD,IAAI,MAAC53B,EAAK,OAAEE,GAAU63B,EACtB,GAAwB,gBAApBv1B,EAAMs0B,UAA6B,CACrC,MAAME,EAAUjB,GAAmBvzB,EAAO,SAAU,SAC9Cu0B,EAAWhB,GAAmBvzB,EAAO,WAC3CxC,GAAS+2B,EAAS/2B,MAAQg3B,EAAQh3B,MAClCE,GAAU62B,EAAS72B,OAAS82B,EAAQ92B,OAStC,OAPAF,EAAQmJ,KAAKuC,IAAI,EAAG1L,EAAQ83B,EAAQ93B,OACpCE,EAASiJ,KAAKuC,IAAI,EAAGmsB,EAAc1uB,KAAKkB,MAAMrK,EAAQ63B,GAAe33B,EAAS43B,EAAQ53B,QACtFF,EAAQy3B,GAAOtuB,KAAKsC,IAAIzL,EAAOyoB,EAAUsP,EAActP,WACvDvoB,EAASu3B,GAAOtuB,KAAKsC,IAAIvL,EAAQg3B,EAAWa,EAAcb,YACtDl3B,IAAUE,IACZA,EAASu3B,GAAOz3B,EAAQ,IAEnB,CACLA,QACAE,UAGJ,SAAS83B,GAAYj7B,EAAOk7B,EAAYC,GACtC,MAAMC,EAAaF,GAAc,EAC3BG,EAAejvB,KAAKkB,MAAMtN,EAAMmD,OAASi4B,GACzCE,EAAclvB,KAAKkB,MAAMtN,EAAMiD,MAAQm4B,GAC7Cp7B,EAAMmD,OAASk4B,EAAeD,EAC9Bp7B,EAAMiD,MAAQq4B,EAAcF,EAC5B,MAAMv2B,EAAS7E,EAAM6E,OAKrB,OAJIA,EAAOY,QAAU01B,IAAgBt2B,EAAOY,MAAMtC,SAAW0B,EAAOY,MAAMxC,SACxE4B,EAAOY,MAAMtC,OAAYnD,EAAMmD,OAAT,KACtB0B,EAAOY,MAAMxC,MAAWjD,EAAMiD,MAAT,OAEnBjD,EAAMmoB,0BAA4BiT,GAC/Bv2B,EAAO1B,SAAWk4B,GAClBx2B,EAAO5B,QAAUq4B,KACtBt7B,EAAMmoB,wBAA0BiT,EAChCv2B,EAAO1B,OAASk4B,EAChBx2B,EAAO5B,MAAQq4B,EACft7B,EAAM8kB,IAAIyW,aAAaH,EAAY,EAAG,EAAGA,EAAY,EAAG,IACjD,GAIX,MAAMI,GAAgC,WACpC,IAAIC,GAAmB,EACvB,IACE,MAAM75B,EAAU,CACd,cAEE,OADA65B,GAAmB,GACZ,IAGXv1B,OAAOw1B,iBAAiB,OAAQ,KAAM95B,GACtCsE,OAAOy1B,oBAAoB,OAAQ,KAAM/5B,GACzC,MAAOsK,IAET,OAAOuvB,EAb4B,GAerC,SAASG,GAAajD,EAASlqB,GAC7B,MAAMtM,EAAQy2B,GAASD,EAASlqB,GAC1B0e,EAAUhrB,GAASA,EAAMirB,MAAM,qBACrC,OAAOD,GAAWA,EAAQ,QAAKvtB,EAGjC,SAASi8B,GAAa3lB,EAAIC,EAAIxF,EAAGwU,GAC/B,MAAO,CACLlX,EAAGiI,EAAGjI,EAAI0C,GAAKwF,EAAGlI,EAAIiI,EAAGjI,GACzBC,EAAGgI,EAAGhI,EAAIyC,GAAKwF,EAAGjI,EAAIgI,EAAGhI,IAG7B,SAAS4tB,GAAsB5lB,EAAIC,EAAIxF,EAAGwU,GACxC,MAAO,CACLlX,EAAGiI,EAAGjI,EAAI0C,GAAKwF,EAAGlI,EAAIiI,EAAGjI,GACzBC,EAAY,WAATiX,EAAoBxU,EAAI,GAAMuF,EAAGhI,EAAIiI,EAAGjI,EAChC,UAATiX,EAAmBxU,EAAI,EAAIuF,EAAGhI,EAAIiI,EAAGjI,EACrCyC,EAAI,EAAIwF,EAAGjI,EAAIgI,EAAGhI,GAGxB,SAAS6tB,GAAqB7lB,EAAIC,EAAIxF,EAAGwU,GACvC,MAAM6W,EAAM,CAAC/tB,EAAGiI,EAAG0U,KAAM1c,EAAGgI,EAAG4U,MACzBmR,EAAM,CAAChuB,EAAGkI,EAAGwU,KAAMzc,EAAGiI,EAAG0U,MACzBjf,EAAIiwB,GAAa3lB,EAAI8lB,EAAKrrB,GAC1B9E,EAAIgwB,GAAaG,EAAKC,EAAKtrB,GAC3B4D,EAAIsnB,GAAaI,EAAK9lB,EAAIxF,GAC1BiC,EAAIipB,GAAajwB,EAAGC,EAAG8E,GACvBzE,EAAI2vB,GAAahwB,EAAG0I,EAAG5D,GAC7B,OAAOkrB,GAAajpB,EAAG1G,EAAGyE,GAG5B,MAAMurB,GAAY,IAAIC,IACtB,SAASC,GAAgBC,EAAQz6B,GAC/BA,EAAUA,GAAW,GACrB,MAAM06B,EAAWD,EAASE,KAAKC,UAAU56B,GACzC,IAAI66B,EAAYP,GAAUQ,IAAIJ,GAK9B,OAJKG,IACHA,EAAY,IAAIE,KAAKC,aAAaP,EAAQz6B,GAC1Cs6B,GAAU3L,IAAI+L,EAAUG,IAEnBA,EAET,SAASI,GAAaC,EAAKT,EAAQz6B,GACjC,OAAOw6B,GAAgBC,EAAQz6B,GAASm7B,OAAOD,GAGjD,MAAME,GAAwB,SAASC,EAAOh6B,GAC5C,MAAO,CACL,EAAEgL,GACA,OAAOgvB,EAAQA,EAAQh6B,EAAQgL,GAEjC,SAASsH,GACPtS,EAAQsS,GAEV,UAAUhO,GACR,MAAc,WAAVA,EACKA,EAEQ,UAAVA,EAAoB,OAAS,SAEtC,MAAM0G,EAAG9L,GACP,OAAO8L,EAAI9L,GAEb,WAAW8L,EAAGivB,GACZ,OAAOjvB,EAAIivB,KAIXC,GAAwB,WAC5B,MAAO,CACL,EAAElvB,GACA,OAAOA,GAET,SAASsH,KAET,UAAUhO,GACR,OAAOA,GAET,MAAM0G,EAAG9L,GACP,OAAO8L,EAAI9L,GAEb,WAAW8L,EAAGmvB,GACZ,OAAOnvB,KAIb,SAASovB,GAAcv1B,EAAKm1B,EAAOh6B,GACjC,OAAO6E,EAAMk1B,GAAsBC,EAAOh6B,GAASk6B,KAErD,SAASG,GAAsBxY,EAAKyY,GAClC,IAAI93B,EAAO+3B,EACO,QAAdD,GAAqC,QAAdA,IACzB93B,EAAQqf,EAAIjgB,OAAOY,MACnB+3B,EAAW,CACT/3B,EAAMqzB,iBAAiB,aACvBrzB,EAAMg4B,oBAAoB,cAE5Bh4B,EAAMi4B,YAAY,YAAaH,EAAW,aAC1CzY,EAAI6Y,kBAAoBH,GAG5B,SAASI,GAAqB9Y,EAAK0Y,QAChB59B,IAAb49B,WACK1Y,EAAI6Y,kBACX7Y,EAAIjgB,OAAOY,MAAMi4B,YAAY,YAAaF,EAAS,GAAIA,EAAS,KAIpE,SAASK,GAAWpvB,GAClB,MAAiB,UAAbA,EACK,CACLqvB,QAAS9tB,GACT+tB,QAASjuB,GACTkuB,UAAWjuB,IAGR,CACL+tB,QAASrtB,GACTstB,QAAS,CAACnyB,EAAGC,IAAMD,EAAIC,EACvBmyB,UAAW/vB,GAAKA,GAGpB,SAASgwB,IAAiB,MAACx2B,EAAK,IAAEC,EAAG,MAAEktB,EAAK,KAAE8C,EAAI,MAAEjyB,IAClD,MAAO,CACLgC,MAAOA,EAAQmtB,EACfltB,IAAKA,EAAMktB,EACX8C,KAAMA,IAAShwB,EAAMD,EAAQ,GAAKmtB,IAAU,EAC5CnvB,SAGJ,SAASy4B,GAAWC,EAAShJ,EAAQiJ,GACnC,MAAM,SAAC3vB,EAAUhH,MAAO42B,EAAY32B,IAAK42B,GAAYF,GAC/C,QAACN,EAAO,UAAEE,GAAaH,GAAWpvB,GAClCmmB,EAAQO,EAAOlzB,OACrB,IACIkH,EAAGK,GADH,MAAC/B,EAAK,IAAEC,EAAG,KAAEgwB,GAAQyG,EAEzB,GAAIzG,EAAM,CAGR,IAFAjwB,GAASmtB,EACTltB,GAAOktB,EACFzrB,EAAI,EAAGK,EAAOorB,EAAOzrB,EAAIK,IAAQL,EAAG,CACvC,IAAK20B,EAAQE,EAAU7I,EAAO1tB,EAAQmtB,GAAOnmB,IAAY4vB,EAAYC,GACnE,MAEF72B,IACAC,IAEFD,GAASmtB,EACTltB,GAAOktB,EAKT,OAHIltB,EAAMD,IACRC,GAAOktB,GAEF,CAACntB,QAAOC,MAAKgwB,OAAMjyB,MAAO04B,EAAQ14B,OAE3C,SAAS84B,GAAcJ,EAAShJ,EAAQiJ,GACtC,IAAKA,EACH,MAAO,CAACD,GAEV,MAAM,SAAC1vB,EAAUhH,MAAO42B,EAAY32B,IAAK42B,GAAYF,EAC/CxJ,EAAQO,EAAOlzB,QACf,QAAC87B,EAAO,QAAED,EAAO,UAAEE,GAAaH,GAAWpvB,IAC3C,MAAChH,EAAK,IAAEC,EAAG,KAAEgwB,EAAI,MAAEjyB,GAASy4B,GAAWC,EAAShJ,EAAQiJ,GACxD1wB,EAAS,GACf,IAEIvL,EAAO0nB,EAAO2U,EAFdC,GAAS,EACTC,EAAW,KAEf,MAAMC,EAAgB,IAAMb,EAAQO,EAAYG,EAAWr8B,IAA6C,IAAnC47B,EAAQM,EAAYG,GACnFI,EAAc,IAAmC,IAA7Bb,EAAQO,EAAUn8B,IAAgB27B,EAAQQ,EAAUE,EAAWr8B,GACnF08B,EAAc,IAAMJ,GAAUE,IAC9BG,EAAa,KAAOL,GAAUG,IACpC,IAAK,IAAIz1B,EAAI1B,EAAOqwB,EAAOrwB,EAAO0B,GAAKzB,IAAOyB,EAC5C0gB,EAAQsL,EAAOhsB,EAAIyrB,GACf/K,EAAMuL,OAGVjzB,EAAQ67B,EAAUnU,EAAMpb,IACpBtM,IAAUq8B,IAGdC,EAASX,EAAQ37B,EAAOk8B,EAAYC,GACnB,OAAbI,GAAqBG,MACvBH,EAA0C,IAA/BX,EAAQ57B,EAAOk8B,GAAoBl1B,EAAI2uB,GAEnC,OAAb4G,GAAqBI,MACvBpxB,EAAOpM,KAAK28B,GAAiB,CAACx2B,MAAOi3B,EAAUh3B,IAAKyB,EAAGuuB,OAAM9C,QAAOnvB,WACpEi5B,EAAW,MAEb5G,EAAO3uB,EACPq1B,EAAYr8B,IAKd,OAHiB,OAAbu8B,GACFhxB,EAAOpM,KAAK28B,GAAiB,CAACx2B,MAAOi3B,EAAUh3B,MAAKgwB,OAAM9C,QAAOnvB,WAE5DiI,EAET,SAASqxB,GAAe1T,EAAM+S,GAC5B,MAAM1wB,EAAS,GACTsxB,EAAW3T,EAAK2T,SACtB,IAAK,IAAI71B,EAAI,EAAGA,EAAI61B,EAAS/8B,OAAQkH,IAAK,CACxC,MAAM81B,EAAMV,GAAcS,EAAS71B,GAAIkiB,EAAK8J,OAAQiJ,GAChDa,EAAIh9B,QACNyL,EAAOpM,QAAQ29B,GAGnB,OAAOvxB,EAET,SAASwxB,GAAgB/J,EAAQP,EAAO8C,EAAME,GAC5C,IAAInwB,EAAQ,EACRC,EAAMktB,EAAQ,EAClB,GAAI8C,IAASE,EACX,MAAOnwB,EAAQmtB,IAAUO,EAAO1tB,GAAO2tB,KACrC3tB,IAGJ,MAAOA,EAAQmtB,GAASO,EAAO1tB,GAAO2tB,KACpC3tB,IAEFA,GAASmtB,EACL8C,IACFhwB,GAAOD,GAET,MAAOC,EAAMD,GAAS0tB,EAAOztB,EAAMktB,GAAOQ,KACxC1tB,IAGF,OADAA,GAAOktB,EACA,CAACntB,QAAOC,OAEjB,SAASy3B,GAAchK,EAAQ1tB,EAAOkH,EAAK+oB,GACzC,MAAM9C,EAAQO,EAAOlzB,OACfyL,EAAS,GACf,IAEIhG,EAFA03B,EAAO33B,EACPqwB,EAAO3C,EAAO1tB,GAElB,IAAKC,EAAMD,EAAQ,EAAGC,GAAOiH,IAAOjH,EAAK,CACvC,MAAM23B,EAAMlK,EAAOztB,EAAMktB,GACrByK,EAAIjK,MAAQiK,EAAIC,KACbxH,EAAK1C,OACRsC,GAAO,EACPhqB,EAAOpM,KAAK,CAACmG,MAAOA,EAAQmtB,EAAOltB,KAAMA,EAAM,GAAKktB,EAAO8C,SAC3DjwB,EAAQ23B,EAAOC,EAAIC,KAAO53B,EAAM,OAGlC03B,EAAO13B,EACHowB,EAAK1C,OACP3tB,EAAQC,IAGZowB,EAAOuH,EAKT,OAHa,OAATD,GACF1xB,EAAOpM,KAAK,CAACmG,MAAOA,EAAQmtB,EAAOltB,IAAK03B,EAAOxK,EAAO8C,SAEjDhqB,EAET,SAAS6xB,GAAiBlU,EAAMmU,GAC9B,MAAMrK,EAAS9J,EAAK8J,OACdyC,EAAWvM,EAAKzpB,QAAQg2B,SACxBhD,EAAQO,EAAOlzB,OACrB,IAAK2yB,EACH,MAAO,GAET,MAAM8C,IAASrM,EAAKoU,OACd,MAACh4B,EAAK,IAAEC,GAAOw3B,GAAgB/J,EAAQP,EAAO8C,EAAME,GAC1D,IAAiB,IAAbA,EACF,OAAO8H,GAAcrU,EAAM,CAAC,CAAC5jB,QAAOC,MAAKgwB,SAAQvC,EAAQqK,GAE3D,MAAM7wB,EAAMjH,EAAMD,EAAQC,EAAMktB,EAAQltB,EAClCi4B,IAAiBtU,EAAKuU,WAAuB,IAAVn4B,GAAeC,IAAQktB,EAAQ,EACxE,OAAO8K,GAAcrU,EAAM8T,GAAchK,EAAQ1tB,EAAOkH,EAAKgxB,GAAexK,EAAQqK,GAEtF,SAASE,GAAcrU,EAAM2T,EAAU7J,EAAQqK,GAC7C,OAAKA,GAAmBA,EAAe/M,YAAe0C,EAG/C0K,GAAgBxU,EAAM2T,EAAU7J,EAAQqK,GAFtCR,EAIX,SAASa,GAAgBxU,EAAM2T,EAAU7J,EAAQqK,GAC/C,MAAMM,EAAezU,EAAK7nB,OAAOwB,aAC3B+6B,EAAYC,GAAU3U,EAAKzpB,UAC1Bq+B,cAAet2B,EAAc/H,SAAS,SAACg2B,IAAavM,EACrDuJ,EAAQO,EAAOlzB,OACfyL,EAAS,GACf,IAAIwyB,EAAYH,EACZt4B,EAAQu3B,EAAS,GAAGv3B,MACpB0B,EAAI1B,EACR,SAAS04B,EAASjwB,EAAGhE,EAAG8G,EAAGotB,GACzB,MAAMC,EAAMzI,GAAY,EAAI,EAC5B,GAAI1nB,IAAMhE,EAAV,CAGAgE,GAAK0kB,EACL,MAAOO,EAAOjlB,EAAI0kB,GAAOQ,KACvBllB,GAAKmwB,EAEP,MAAOlL,EAAOjpB,EAAI0oB,GAAOQ,KACvBlpB,GAAKm0B,EAEHnwB,EAAI0kB,IAAU1oB,EAAI0oB,IACpBlnB,EAAOpM,KAAK,CAACmG,MAAOyI,EAAI0kB,EAAOltB,IAAKwE,EAAI0oB,EAAO8C,KAAM1kB,EAAGvN,MAAO26B,IAC/DF,EAAYE,EACZ34B,EAAQyE,EAAI0oB,IAGhB,IAAK,MAAMuJ,KAAWa,EAAU,CAC9Bv3B,EAAQmwB,EAAWnwB,EAAQ02B,EAAQ12B,MACnC,IACIhC,EADAqyB,EAAO3C,EAAO1tB,EAAQmtB,GAE1B,IAAKzrB,EAAI1B,EAAQ,EAAG0B,GAAKg1B,EAAQz2B,IAAKyB,IAAK,CACzC,MAAMiuB,EAAKjC,EAAOhsB,EAAIyrB,GACtBnvB,EAAQu6B,GAAUR,EAAe/M,WAAW7D,GAAckR,EAAc,CACtEj9B,KAAM,UACNy9B,GAAIxI,EACJ5hB,GAAIkhB,EACJmJ,aAAcp3B,EAAI,GAAKyrB,EACvB4L,YAAar3B,EAAIyrB,EACjBjrB,mBAEE82B,GAAah7B,EAAOy6B,IACtBC,EAAS14B,EAAO0B,EAAI,EAAGg1B,EAAQzG,KAAMwI,GAEvCpI,EAAOV,EACP8I,EAAYz6B,EAEVgC,EAAQ0B,EAAI,GACdg3B,EAAS14B,EAAO0B,EAAI,EAAGg1B,EAAQzG,KAAMwI,GAGzC,OAAOxyB,EAET,SAASsyB,GAAUp+B,GACjB,MAAO,CACLsiB,gBAAiBtiB,EAAQsiB,gBACzBwc,eAAgB9+B,EAAQ8+B,eACxBC,WAAY/+B,EAAQ++B,WACpBC,iBAAkBh/B,EAAQg/B,iBAC1BC,gBAAiBj/B,EAAQi/B,gBACzBnX,YAAa9nB,EAAQ8nB,YACrBvF,YAAaviB,EAAQuiB,aAGzB,SAASsc,GAAah7B,EAAOy6B,GAC3B,OAAOA,GAAa3D,KAAKC,UAAU/2B,KAAW82B,KAAKC,UAAU0D;;;;;;GCv+E/D,MAAM,GACJ,cACEr8B,KAAKi9B,SAAW,KAChBj9B,KAAKk9B,QAAU,IAAI5E,IACnBt4B,KAAKm9B,UAAW,EAChBn9B,KAAKo9B,eAAYrhC,EAEnB,QAAQI,EAAOkhC,EAAOC,EAAMt+B,GAC1B,MAAMu+B,EAAYF,EAAMvR,UAAU9sB,GAC5Bw+B,EAAWH,EAAMI,SACvBF,EAAUtR,QAAQxpB,GAAMA,EAAG,CACzBtG,QACAuhC,QAASL,EAAMK,QACfF,WACAG,YAAap1B,KAAKsC,IAAIyyB,EAAOD,EAAMz5B,MAAO45B,MAG9C,WACMx9B,KAAKi9B,WAGTj9B,KAAKm9B,UAAW,EAChBn9B,KAAKi9B,SAAW76B,EAAiBY,KAAKX,OAAQ,KAC5CrC,KAAK49B,UACL59B,KAAKi9B,SAAW,KACZj9B,KAAKm9B,UACPn9B,KAAK69B,cAIX,QAAQP,EAAOQ,KAAKC,OAClB,IAAIC,EAAY,EAChBh+B,KAAKk9B,QAAQjR,QAAQ,CAACoR,EAAOlhC,KAC3B,IAAKkhC,EAAMY,UAAYZ,EAAM5Q,MAAMruB,OACjC,OAEF,MAAMquB,EAAQ4Q,EAAM5Q,MACpB,IAEIvkB,EAFA5C,EAAImnB,EAAMruB,OAAS,EACnB8/B,GAAO,EAEX,KAAO54B,GAAK,IAAKA,EACf4C,EAAOukB,EAAMnnB,GACT4C,EAAKi2B,SACHj2B,EAAKk2B,OAASf,EAAMI,WACtBJ,EAAMI,SAAWv1B,EAAKk2B,QAExBl2B,EAAKm2B,KAAKf,GACVY,GAAO,IAEPzR,EAAMnnB,GAAKmnB,EAAMA,EAAMruB,OAAS,GAChCquB,EAAMziB,OAGNk0B,IACF/hC,EAAM+hC,OACNl+B,KAAKs+B,QAAQniC,EAAOkhC,EAAOC,EAAM,aAE9B7Q,EAAMruB,SACTi/B,EAAMY,SAAU,EAChBj+B,KAAKs+B,QAAQniC,EAAOkhC,EAAOC,EAAM,YACjCD,EAAMK,SAAU,GAElBM,GAAavR,EAAMruB,SAErB4B,KAAKo9B,UAAYE,EACC,IAAdU,IACFh+B,KAAKm9B,UAAW,GAGpB,UAAUhhC,GACR,MAAMoiC,EAASv+B,KAAKk9B,QACpB,IAAIG,EAAQkB,EAAO1F,IAAI18B,GAavB,OAZKkhC,IACHA,EAAQ,CACNY,SAAS,EACTP,SAAS,EACTjR,MAAO,GACPX,UAAW,CACT0S,SAAU,GACVC,SAAU,KAGdF,EAAO7R,IAAIvwB,EAAOkhC,IAEbA,EAET,OAAOlhC,EAAOuiC,EAAOC,GACnB3+B,KAAK4+B,UAAUziC,GAAO2vB,UAAU4S,GAAOjhC,KAAKkhC,GAE9C,IAAIxiC,EAAOswB,GACJA,GAAUA,EAAMruB,QAGrB4B,KAAK4+B,UAAUziC,GAAOswB,MAAMhvB,QAAQgvB,GAEtC,IAAItwB,GACF,OAAO6D,KAAK4+B,UAAUziC,GAAOswB,MAAMruB,OAAS,EAE9C,MAAMjC,GACJ,MAAMkhC,EAAQr9B,KAAKk9B,QAAQrE,IAAI18B,GAC1BkhC,IAGLA,EAAMY,SAAU,EAChBZ,EAAMz5B,MAAQk6B,KAAKC,MACnBV,EAAMI,SAAWJ,EAAM5Q,MAAMoS,OAAO,CAACC,EAAKtD,IAAQjzB,KAAKuC,IAAIg0B,EAAKtD,EAAIuD,WAAY,GAChF/+B,KAAK69B,YAEP,QAAQ1hC,GACN,IAAK6D,KAAKm9B,SACR,OAAO,EAET,MAAME,EAAQr9B,KAAKk9B,QAAQrE,IAAI18B,GAC/B,SAAKkhC,GAAUA,EAAMY,SAAYZ,EAAM5Q,MAAMruB,QAK/C,KAAKjC,GACH,MAAMkhC,EAAQr9B,KAAKk9B,QAAQrE,IAAI18B,GAC/B,IAAKkhC,IAAUA,EAAM5Q,MAAMruB,OACzB,OAEF,MAAMquB,EAAQ4Q,EAAM5Q,MACpB,IAAInnB,EAAImnB,EAAMruB,OAAS,EACvB,KAAOkH,GAAK,IAAKA,EACfmnB,EAAMnnB,GAAG05B,SAEX3B,EAAM5Q,MAAQ,GACdzsB,KAAKs+B,QAAQniC,EAAOkhC,EAAOS,KAAKC,MAAO,YAEzC,OAAO5hC,GACL,OAAO6D,KAAKk9B,QAAQpN,OAAO3zB,IAG/B,IAAI8iC,GAAW,IAAI,GAEnB,MAAMrhB,GAAc,cACdshB,GAAgB,CACpB,QAAQtS,EAAMuS,EAAIC,GAChB,OAAOA,EAAS,GAAMD,EAAKvS,GAE7B,MAAMA,EAAMuS,EAAIC,GACd,MAAMC,EAAK,GAAMzS,GAAQhP,IACnBqB,EAAKogB,EAAGC,OAAS,GAAMH,GAAMvhB,IACnC,OAAOqB,GAAMA,EAAGqgB,MACZrgB,EAAGsgB,IAAIF,EAAID,GAAQ/tB,YACnB8tB,GAEN,OAAOvS,EAAMuS,EAAIC,GACf,OAAOxS,GAAQuS,EAAKvS,GAAQwS,IAGhC,MAAM,GACJ,YAAYI,EAAKv5B,EAAQ2jB,EAAMuV,GAC7B,MAAMM,EAAex5B,EAAO2jB,GAC5BuV,EAAK/U,GAAQ,CAACoV,EAAIL,GAAIA,EAAIM,EAAcD,EAAI5S,OAC5C,MAAMA,EAAOxC,GAAQ,CAACoV,EAAI5S,KAAM6S,EAAcN,IAC9Cn/B,KAAKm+B,SAAU,EACfn+B,KAAK0/B,IAAMF,EAAI/8B,IAAMy8B,GAAcM,EAAIxgC,aAAe4tB,GACtD5sB,KAAK2/B,QAAUzyB,GAAQsyB,EAAII,SAAW1yB,GAAQC,OAC9CnN,KAAK6/B,OAASt3B,KAAKkB,MAAMq0B,KAAKC,OAASyB,EAAIn8B,OAAS,IACpDrD,KAAK++B,UAAY/+B,KAAKo+B,OAAS71B,KAAKkB,MAAM+1B,EAAI/B,UAC9Cz9B,KAAK47B,QAAU4D,EAAI3L,KACnB7zB,KAAK8/B,QAAU75B,EACfjG,KAAK+/B,MAAQnW,EACb5pB,KAAKggC,MAAQpT,EACb5sB,KAAKigC,IAAMd,EACXn/B,KAAKkgC,eAAYnkC,EAEnB,SACE,OAAOiE,KAAKm+B,QAEd,OAAOqB,EAAKL,EAAI7B,GACd,GAAIt9B,KAAKm+B,QAAS,CAChBn+B,KAAKs+B,SAAQ,GACb,MAAMmB,EAAez/B,KAAK8/B,QAAQ9/B,KAAK+/B,OACjCI,EAAU7C,EAAOt9B,KAAK6/B,OACtBO,EAASpgC,KAAK++B,UAAYoB,EAChCngC,KAAK6/B,OAASvC,EACdt9B,KAAK++B,UAAYx2B,KAAKkB,MAAMlB,KAAKuC,IAAIs1B,EAAQZ,EAAI/B,WACjDz9B,KAAKo+B,QAAU+B,EACfngC,KAAK47B,QAAU4D,EAAI3L,KACnB7zB,KAAKigC,IAAM7V,GAAQ,CAACoV,EAAIL,GAAIA,EAAIM,EAAcD,EAAI5S,OAClD5sB,KAAKggC,MAAQ5V,GAAQ,CAACoV,EAAI5S,KAAM6S,EAAcN,KAGlD,SACMn/B,KAAKm+B,UACPn+B,KAAKq+B,KAAKP,KAAKC,OACf/9B,KAAKm+B,SAAU,EACfn+B,KAAKs+B,SAAQ,IAGjB,KAAKhB,GACH,MAAM6C,EAAU7C,EAAOt9B,KAAK6/B,OACtBpC,EAAWz9B,KAAK++B,UAChBnV,EAAO5pB,KAAK+/B,MACZnT,EAAO5sB,KAAKggC,MACZnM,EAAO7zB,KAAK47B,MACZuD,EAAKn/B,KAAKigC,IAChB,IAAIb,EAEJ,GADAp/B,KAAKm+B,QAAUvR,IAASuS,IAAOtL,GAASsM,EAAU1C,IAC7Cz9B,KAAKm+B,QAGR,OAFAn+B,KAAK8/B,QAAQlW,GAAQuV,OACrBn/B,KAAKs+B,SAAQ,GAGX6B,EAAU,EACZngC,KAAK8/B,QAAQlW,GAAQgD,GAGvBwS,EAAUe,EAAU1C,EAAY,EAChC2B,EAASvL,GAAQuL,EAAS,EAAI,EAAIA,EAASA,EAC3CA,EAASp/B,KAAK2/B,QAAQp3B,KAAKsC,IAAI,EAAGtC,KAAKuC,IAAI,EAAGs0B,KAC9Cp/B,KAAK8/B,QAAQlW,GAAQ5pB,KAAK0/B,IAAI9S,EAAMuS,EAAIC,IAE1C,OACE,MAAMiB,EAAWrgC,KAAKkgC,YAAclgC,KAAKkgC,UAAY,IACrD,OAAO,IAAII,QAAQ,CAAClU,EAAKmU,KACvBF,EAAS5iC,KAAK,CAAC2uB,MAAKmU,UAGxB,QAAQC,GACN,MAAMtU,EAASsU,EAAW,MAAQ,MAC5BH,EAAWrgC,KAAKkgC,WAAa,GACnC,IAAK,IAAI56B,EAAI,EAAGA,EAAI+6B,EAASjiC,OAAQkH,IACnC+6B,EAAS/6B,GAAG4mB,MAKlB,MAAMuU,GAAU,CAAC,IAAK,IAAK,cAAe,SAAU,WAC9CC,GAAS,CAAC,QAAS,cAAe,mBACxC7d,GAAS6J,IAAI,YAAa,CACxBrpB,WAAOtH,EACP0hC,SAAU,IACVmC,OAAQ,eACRn9B,QAAI1G,EACJ6wB,UAAM7wB,EACN83B,UAAM93B,EACNojC,QAAIpjC,EACJiD,UAAMjD,IAER,MAAM,GAAmB2B,OAAO2D,KAAKwhB,GAASzC,WAC9CyC,GAASX,SAAS,YAAa,CAC7Be,WAAW,EACXD,YAAY,EACZF,YAAcX,GAAkB,eAATA,GAAkC,eAATA,GAAkC,OAATA,IAE3EU,GAAS6J,IAAI,aAAc,CACzBgU,OAAQ,CACN1hC,KAAM,QACN2hC,WAAYD,IAEdD,QAAS,CACPzhC,KAAM,SACN2hC,WAAYF,MAGhB5d,GAASX,SAAS,aAAc,CAC9Be,UAAW,cAEbJ,GAAS6J,IAAI,cAAe,CAC1BkU,OAAQ,CACNxgB,UAAW,CACTqd,SAAU,MAGdoD,OAAQ,CACNzgB,UAAW,CACTqd,SAAU,IAGdqD,KAAM,CACJC,WAAY,CACVL,OAAQ,CACN9T,KAAM,eAERoU,QAAS,CACPhiC,KAAM,UACNy+B,SAAU,KAIhBwD,KAAM,CACJF,WAAY,CACVL,OAAQ,CACNvB,GAAI,eAEN6B,QAAS,CACPhiC,KAAM,UACN4gC,OAAQ,SACRn9B,GAAIwM,GAAS,EAAJA,OAKjB,MAAM,GACJ,YAAY9S,EAAO+kC,GACjBlhC,KAAKL,OAASxD,EACd6D,KAAKmhC,YAAc,IAAI7I,IACvBt4B,KAAKohC,UAAUF,GAEjB,UAAUA,GACR,IAAK18B,EAAS08B,GACZ,OAEF,MAAMG,EAAgBrhC,KAAKmhC,YAC3BzjC,OAAO4jC,oBAAoBJ,GAAQjV,QAAQ3lB,IACzC,MAAMk5B,EAAM0B,EAAO56B,GACnB,IAAK9B,EAASg7B,GACZ,OAEF,MAAMgB,EAAW,GACjB,IAAK,MAAMe,KAAU,GACnBf,EAASe,GAAU/B,EAAI+B,IAExBj9B,EAAQk7B,EAAImB,aAAenB,EAAImB,YAAc,CAACr6B,IAAM2lB,QAASrC,IACxDA,IAAStjB,GAAQ+6B,EAAcl5B,IAAIyhB,IACrCyX,EAAc3U,IAAI9C,EAAM4W,OAKhC,gBAAgBv6B,EAAQga,GACtB,MAAMuhB,EAAavhB,EAAOliB,QACpBA,EAAU0jC,GAAqBx7B,EAAQu7B,GAC7C,IAAKzjC,EACH,MAAO,GAET,MAAMgjC,EAAa/gC,KAAK0hC,kBAAkB3jC,EAASyjC,GAOnD,OANIA,EAAWG,SACbC,GAAS37B,EAAOlI,QAAQ8jC,YAAaL,GAAYM,KAAK,KACpD77B,EAAOlI,QAAUyjC,GAChB,QAGET,EAET,kBAAkB96B,EAAQga,GACxB,MAAMohB,EAAgBrhC,KAAKmhC,YACrBJ,EAAa,GACb9C,EAAUh4B,EAAO47B,cAAgB57B,EAAO47B,YAAc,IACtD9iC,EAAQrB,OAAO2D,KAAK4e,GACpBqd,EAAOQ,KAAKC,MAClB,IAAIz4B,EACJ,IAAKA,EAAIvG,EAAMX,OAAS,EAAGkH,GAAK,IAAKA,EAAG,CACtC,MAAMskB,EAAO7qB,EAAMuG,GACnB,GAAuB,MAAnBskB,EAAKliB,OAAO,GACd,SAEF,GAAa,YAATkiB,EAAoB,CACtBmX,EAAWtjC,QAAQuC,KAAK+hC,gBAAgB97B,EAAQga,IAChD,SAEF,MAAM3hB,EAAQ2hB,EAAO2J,GACrB,IAAIxJ,EAAY6d,EAAQrU,GACxB,MAAM4V,EAAM6B,EAAcxI,IAAIjP,GAC9B,GAAIxJ,EAAW,CACb,GAAIof,GAAOpf,EAAUwgB,SAAU,CAC7BxgB,EAAUhkB,OAAOojC,EAAKlhC,EAAOg/B,GAC7B,SAEAld,EAAU4e,SAGTQ,GAAQA,EAAI/B,UAIjBQ,EAAQrU,GAAQxJ,EAAY,IAAI,GAAUof,EAAKv5B,EAAQ2jB,EAAMtrB,GAC7DyiC,EAAWtjC,KAAK2iB,IAJdna,EAAO2jB,GAAQtrB,EAMnB,OAAOyiC,EAET,OAAO96B,EAAQga,GACb,GAA8B,IAA1BjgB,KAAKmhC,YAAYl5B,KAEnB,YADAvK,OAAOC,OAAOsI,EAAQga,GAGxB,MAAM8gB,EAAa/gC,KAAK0hC,kBAAkBz7B,EAAQga,GAClD,OAAI8gB,EAAW3iC,QACb6gC,GAASnU,IAAI9qB,KAAKL,OAAQohC,IACnB,QAFT,GAMJ,SAASa,GAASb,EAAYJ,GAC5B,MAAM1C,EAAU,GACV58B,EAAO3D,OAAO2D,KAAKs/B,GACzB,IAAK,IAAIr7B,EAAI,EAAGA,EAAIjE,EAAKjD,OAAQkH,IAAK,CACpC,MAAM08B,EAAOjB,EAAW1/B,EAAKiE,IACzB08B,GAAQA,EAAKpB,UACf3C,EAAQxgC,KAAKukC,EAAKC,QAGtB,OAAO3B,QAAQ4B,IAAIjE,GAErB,SAASwD,GAAqBx7B,EAAQu7B,GACpC,IAAKA,EACH,OAEF,IAAIzjC,EAAUkI,EAAOlI,QACrB,GAAKA,EAOL,OAHIA,EAAQ4jC,UACV17B,EAAOlI,QAAUA,EAAUL,OAAOC,OAAO,GAAII,EAAS,CAAC4jC,SAAS,EAAOE,YAAa,MAE/E9jC,EANLkI,EAAOlI,QAAUyjC,EASrB,SAASW,GAAUrgB,EAAOsgB,GACxB,MAAMhb,EAAOtF,GAASA,EAAM/jB,SAAW,GACjCsH,EAAU+hB,EAAK/hB,QACfwF,OAAmB9O,IAAbqrB,EAAKvc,IAAoBu3B,EAAkB,EACjDt3B,OAAmB/O,IAAbqrB,EAAKtc,IAAoBs3B,EAAkB,EACvD,MAAO,CACLx+B,MAAOyB,EAAUyF,EAAMD,EACvBhH,IAAKwB,EAAUwF,EAAMC,GAGzB,SAASu3B,GAAYC,EAAQC,EAAQH,GACnC,IAAwB,IAApBA,EACF,OAAO,EAET,MAAMh4B,EAAI+3B,GAAUG,EAAQF,GACtB/3B,EAAI83B,GAAUI,EAAQH,GAC5B,MAAO,CACLjc,IAAK9b,EAAExG,IACPG,MAAOoG,EAAEvG,IACTuiB,OAAQ/b,EAAEzG,MACVG,KAAMqG,EAAExG,OAGZ,SAAS4+B,GAAOlkC,GACd,IAAIwO,EAAGmE,EAAGjJ,EAAGmH,EASb,OARI3K,EAASlG,IACXwO,EAAIxO,EAAM6nB,IACVlV,EAAI3S,EAAM0F,MACVgE,EAAI1J,EAAM8nB,OACVjX,EAAI7Q,EAAMyF,MAEV+I,EAAImE,EAAIjJ,EAAImH,EAAI7Q,EAEX,CACL6nB,IAAKrZ,EACL9I,MAAOiN,EACPmV,OAAQpe,EACRjE,KAAMoL,EACNszB,UAAoB,IAAVnkC,GAGd,SAASokC,GAAwBvmC,EAAOwmC,GACtC,MAAMthC,EAAO,GACPuhC,EAAWzmC,EAAM0mC,uBAAuBF,GAC9C,IAAIr9B,EAAGK,EACP,IAAKL,EAAI,EAAGK,EAAOi9B,EAASxkC,OAAQkH,EAAIK,IAAQL,EAC9CjE,EAAK5D,KAAKmlC,EAASt9B,GAAG/G,OAExB,OAAO8C,EAET,SAASyhC,GAAWC,EAAOzkC,EAAO0kC,EAASjlC,EAAU,IACnD,MAAMsD,EAAO0hC,EAAM1hC,KACb4hC,EAA8B,WAAjBllC,EAAQujB,KAC3B,IAAIhc,EAAGK,EAAMG,EAAco9B,EAC3B,GAAc,OAAV5kC,EAAJ,CAGA,IAAKgH,EAAI,EAAGK,EAAOtE,EAAKjD,OAAQkH,EAAIK,IAAQL,EAAG,CAE7C,GADAQ,GAAgBzE,EAAKiE,GACjBQ,IAAiBk9B,EAAS,CAC5B,GAAIjlC,EAAQmkC,IACV,SAEF,MAEFgB,EAAaH,EAAM9iB,OAAOna,GACtBrB,EAAey+B,KAAgBD,GAAyB,IAAV3kC,GAAe2K,EAAK3K,KAAW2K,EAAKi6B,MACpF5kC,GAAS4kC,GAGb,OAAO5kC,GAET,SAAS6kC,GAAyBzmC,GAChC,MAAM2E,EAAO3D,OAAO2D,KAAK3E,GACnB0mC,EAAQ,IAAI1jC,MAAM2B,EAAKjD,QAC7B,IAAIkH,EAAGK,EAAMW,EACb,IAAKhB,EAAI,EAAGK,EAAOtE,EAAKjD,OAAQkH,EAAIK,IAAQL,EAC1CgB,EAAMjF,EAAKiE,GACX89B,EAAM99B,GAAK,CACT8E,EAAG9D,EACH+D,EAAG3N,EAAK4J,IAGZ,OAAO88B,EAET,SAASC,GAAUvhB,EAAOgP,GACxB,MAAMwS,EAAUxhB,GAASA,EAAM/jB,QAAQulC,QACvC,OAAOA,QAAwBvnC,IAAZunC,QAAwCvnC,IAAf+0B,EAAKiS,MAEnD,SAASQ,GAAYC,EAAYC,EAAY3S,GAC3C,MAAO,GAAG0S,EAAWzhC,MAAM0hC,EAAW1hC,MAAM+uB,EAAKiS,OAASjS,EAAK9xB,OAEjE,SAAS0kC,GAAc5hB,GACrB,MAAM,IAACjX,EAAG,IAAEC,EAAG,WAAE64B,EAAU,WAAEC,GAAc9hB,EAAM4hB,gBACjD,MAAO,CACL74B,IAAK84B,EAAa94B,EAAMxL,OAAOwkC,kBAC/B/4B,IAAK84B,EAAa94B,EAAMzL,OAAOsJ,mBAGnC,SAASm7B,GAAiBC,EAAQC,EAAUC,GAC1C,MAAMC,EAAWH,EAAOC,KAAcD,EAAOC,GAAY,IACzD,OAAOE,EAASD,KAAgBC,EAASD,GAAc,IAEzD,SAASE,GAAoBpB,EAAOqB,EAAQC,EAAUrlC,GACpD,IAAK,MAAM8xB,KAAQsT,EAAOE,wBAAwBtlC,GAAMqG,UAAW,CACjE,MAAM/G,EAAQykC,EAAMjS,EAAKvyB,OACzB,GAAK8lC,GAAY/lC,EAAQ,IAAQ+lC,GAAY/lC,EAAQ,EACnD,OAAOwyB,EAAKvyB,MAGhB,OAAO,KAET,SAASgmC,GAAaC,EAAYtT,GAChC,MAAM,MAAC/0B,EAAOsoC,YAAa3T,GAAQ0T,EAC7BT,EAAS5nC,EAAMuoC,UAAYvoC,EAAMuoC,QAAU,KAC3C,OAAC1T,EAAM,OAAEoT,EAAQ7lC,MAAOuH,GAAgBgrB,EACxC6T,EAAQ3T,EAAO4T,KACfC,EAAQT,EAAOQ,KACft+B,EAAMi9B,GAAYvS,EAAQoT,EAAQtT,GAClCnrB,EAAOurB,EAAO9yB,OACpB,IAAI2kC,EACJ,IAAK,IAAIz9B,EAAI,EAAGA,EAAIK,IAAQL,EAAG,CAC7B,MAAM4C,EAAOgpB,EAAO5rB,IACb,CAACq/B,GAAQpmC,EAAO,CAACsmC,GAAQvmC,GAAS4J,EACnC48B,EAAa58B,EAAKw8B,UAAYx8B,EAAKw8B,QAAU,IACnD3B,EAAQ+B,EAAWD,GAASf,GAAiBC,EAAQz9B,EAAK/H,GAC1DwkC,EAAMj9B,GAAgBxH,EACtBykC,EAAMgC,KAAOZ,GAAoBpB,EAAOqB,GAAQ,EAAMtT,EAAK9xB,MAC3D+jC,EAAMiC,QAAUb,GAAoBpB,EAAOqB,GAAQ,EAAOtT,EAAK9xB,OAGnE,SAASimC,GAAgB9oC,EAAOyoC,GAC9B,MAAM7iB,EAAS5lB,EAAM4lB,OACrB,OAAOrkB,OAAO2D,KAAK0gB,GAAQkO,OAAO3pB,GAAOyb,EAAOzb,GAAKs+B,OAASA,GAAMM,QAEtE,SAASC,GAAqB9U,EAAQ9xB,GACpC,OAAOwsB,GAAcsF,EACnB,CACEuQ,QAAQ,EACRrjC,aAASxB,EACT+J,aAAcvH,EACdA,QACA+iB,KAAM,UACNtiB,KAAM,YAIZ,SAASomC,GAAkB/U,EAAQ9xB,EAAOu2B,GACxC,OAAO/J,GAAcsF,EAAQ,CAC3BuQ,QAAQ,EACRyE,UAAW9mC,EACX2yB,YAAQn1B,EACRupC,SAAKvpC,EACL+4B,UACAv2B,QACA+iB,KAAM,UACNtiB,KAAM,SAGV,SAASumC,GAAYzU,EAAMrE,GACzB,MAAM3mB,EAAegrB,EAAK0T,WAAWjmC,MAC/BqmC,EAAO9T,EAAKsT,QAAUtT,EAAKsT,OAAOQ,KACxC,GAAKA,EAAL,CAGAnY,EAAQA,GAASqE,EAAK0U,QACtB,IAAK,MAAMtU,KAAUzE,EAAO,CAC1B,MAAMsX,EAAS7S,EAAOwT,QACtB,IAAKX,QAA2BhoC,IAAjBgoC,EAAOa,SAAsD7oC,IAA/BgoC,EAAOa,GAAM9+B,GACxD,cAEKi+B,EAAOa,GAAM9+B,KAGxB,MAAM2/B,GAAsBnkB,GAAkB,UAATA,GAA6B,SAATA,EACnDokB,GAAmB,CAACC,EAAQC,IAAWA,EAASD,EAASjoC,OAAOC,OAAO,GAAIgoC,GAC3EE,GAAc,CAACC,EAAUhV,EAAM30B,IAAU2pC,IAAahV,EAAKiV,QAAUjV,EAAKkV,UAC3E,CAAC3kC,KAAMqhC,GAAwBvmC,GAAO,GAAO8jB,OAAQ,MAC1D,MAAM,GACJ,YAAY9jB,EAAO2J,GACjB9F,KAAK7D,MAAQA,EACb6D,KAAKimC,KAAO9pC,EAAM8kB,IAClBjhB,KAAKzB,MAAQuH,EACb9F,KAAKkmC,gBAAkB,GACvBlmC,KAAKykC,YAAczkC,KAAKmmC,UACxBnmC,KAAKomC,MAAQpmC,KAAKykC,YAAYzlC,KAC9BgB,KAAKjC,aAAUhC,EACfiE,KAAKixB,UAAW,EAChBjxB,KAAKqmC,WAAQtqC,EACbiE,KAAKsmC,iBAAcvqC,EACnBiE,KAAKumC,oBAAiBxqC,EACtBiE,KAAKwmC,gBAAazqC,EAClBiE,KAAKymC,gBAAa1qC,EAClBiE,KAAK0mC,qBAAsB,EAC3B1mC,KAAK2mC,oBAAqB,EAC1B3mC,KAAK4mC,cAAW7qC,EAChBiE,KAAK6mC,UAAY,GACjB7mC,KAAK8mC,aAEP,aACE,MAAMhW,EAAO9wB,KAAKykC,YAClBzkC,KAAKohC,YACLphC,KAAK+mC,aACLjW,EAAKkV,SAAW3C,GAAUvS,EAAKsT,OAAQtT,GACvC9wB,KAAKgnC,cAEP,YAAYlhC,GACN9F,KAAKzB,QAAUuH,GACjBy/B,GAAYvlC,KAAKykC,aAEnBzkC,KAAKzB,MAAQuH,EAEf,aACE,MAAM3J,EAAQ6D,KAAK7D,MACb20B,EAAO9wB,KAAKykC,YACZlnC,EAAUyC,KAAKinC,aACfC,EAAW,CAACtC,EAAMx6B,EAAGC,EAAG4G,IAAe,MAAT2zB,EAAex6B,EAAa,MAATw6B,EAAe3zB,EAAI5G,EACpE88B,EAAMrW,EAAKsW,QAAUviC,EAAetH,EAAQ6pC,QAASnC,GAAgB9oC,EAAO,MAC5EkrC,EAAMvW,EAAKwW,QAAUziC,EAAetH,EAAQ+pC,QAASrC,GAAgB9oC,EAAO,MAC5EorC,EAAMzW,EAAK0W,QAAU3iC,EAAetH,EAAQiqC,QAASvC,GAAgB9oC,EAAO,MAC5EilB,EAAY0P,EAAK1P,UACjBqmB,EAAM3W,EAAK4W,QAAUR,EAAS9lB,EAAW+lB,EAAKE,EAAKE,GACnDI,EAAM7W,EAAK8W,QAAUV,EAAS9lB,EAAWimB,EAAKF,EAAKI,GACzDzW,EAAKwR,OAAStiC,KAAK6nC,cAAcV,GACjCrW,EAAKyR,OAASviC,KAAK6nC,cAAcR,GACjCvW,EAAKgX,OAAS9nC,KAAK6nC,cAAcN,GACjCzW,EAAKE,OAAShxB,KAAK6nC,cAAcJ,GACjC3W,EAAKsT,OAASpkC,KAAK6nC,cAAcF,GAEnC,aACE,OAAO3nC,KAAK7D,MAAMO,KAAKI,SAASkD,KAAKzB,OAEvC,UACE,OAAOyB,KAAK7D,MAAM4rC,eAAe/nC,KAAKzB,OAExC,cAAcypC,GACZ,OAAOhoC,KAAK7D,MAAM4lB,OAAOimB,GAE3B,eAAelmB,GACb,MAAMgP,EAAO9wB,KAAKykC,YAClB,OAAO3iB,IAAUgP,EAAKE,OAClBF,EAAKsT,OACLtT,EAAKE,OAEX,QACEhxB,KAAK49B,QAAQ,SAEf,WACE,MAAM9M,EAAO9wB,KAAKykC,YACdzkC,KAAKqmC,OACP/Z,GAAoBtsB,KAAKqmC,MAAOrmC,MAE9B8wB,EAAKkV,UACPT,GAAYzU,GAGhB,aACE,MAAMvzB,EAAUyC,KAAKinC,aACfvqC,EAAOa,EAAQb,OAASa,EAAQb,KAAO,IACvC2pC,EAAQrmC,KAAKqmC,MACnB,GAAI7hC,EAAS9H,GACXsD,KAAKqmC,MAAQlD,GAAyBzmC,QACjC,GAAI2pC,IAAU3pC,EAAM,CACzB,GAAI2pC,EAAO,CACT/Z,GAAoB+Z,EAAOrmC,MAC3B,MAAM8wB,EAAO9wB,KAAKykC,YAClBc,GAAYzU,GACZA,EAAK0U,QAAU,GAEb9oC,GAAQgB,OAAOuqC,aAAavrC,IAC9BivB,GAAkBjvB,EAAMsD,MAE1BA,KAAK6mC,UAAY,GACjB7mC,KAAKqmC,MAAQ3pC,GAGjB,cACE,MAAMo0B,EAAO9wB,KAAKykC,YAClBzkC,KAAKkoC,aACDloC,KAAKmoC,qBACPrX,EAAKvzB,QAAU,IAAIyC,KAAKmoC,oBAG5B,sBAAsBC,GACpB,MAAMtX,EAAO9wB,KAAKykC,YACZlnC,EAAUyC,KAAKinC,aACrB,IAAIoB,GAAe,EACnBroC,KAAKkoC,aACL,MAAMI,EAAaxX,EAAKkV,SACxBlV,EAAKkV,SAAW3C,GAAUvS,EAAKsT,OAAQtT,GACnCA,EAAKiS,QAAUxlC,EAAQwlC,QACzBsF,GAAe,EACf9C,GAAYzU,GACZA,EAAKiS,MAAQxlC,EAAQwlC,OAEvB/iC,KAAKuoC,gBAAgBH,IACjBC,GAAgBC,IAAexX,EAAKkV,WACtCzB,GAAavkC,KAAM8wB,EAAK0U,SAG5B,YACE,MAAMtE,EAASlhC,KAAK7D,MAAM+kC,OACpBsH,EAAYtH,EAAOuH,iBAAiBzoC,KAAKomC,OACzCtZ,EAASoU,EAAOwH,gBAAgB1oC,KAAKinC,aAAcuB,GAAW,GACpExoC,KAAKjC,QAAUmjC,EAAOyH,eAAe7b,EAAQ9sB,KAAKmB,cAClDnB,KAAKixB,SAAWjxB,KAAKjC,QAAQ6jB,QAC7B5hB,KAAKkmC,gBAAkB,GAEzB,MAAMtiC,EAAOmtB,GACX,MAAO0T,YAAa3T,EAAMuV,MAAO3pC,GAAQsD,MACnC,OAACgxB,EAAM,SAAEgV,GAAYlV,EACrB6T,EAAQ3T,EAAO4T,KACrB,IAEIt/B,EAAGk2B,EAAKtK,EAFR0X,EAAmB,IAAVhlC,GAAemtB,IAAUr0B,EAAK0B,QAAgB0yB,EAAK+X,QAC5D5U,EAAOrwB,EAAQ,GAAKktB,EAAK0U,QAAQ5hC,EAAQ,GAE7C,IAAsB,IAAlB5D,KAAKixB,SACPH,EAAK0U,QAAU9oC,EACfo0B,EAAK+X,SAAU,EACf3X,EAASx0B,MACJ,CAEHw0B,EADE5sB,EAAQ5H,EAAKkH,IACN5D,KAAK8oC,eAAehY,EAAMp0B,EAAMkH,EAAOmtB,GACvCvsB,EAAS9H,EAAKkH,IACd5D,KAAK+oC,gBAAgBjY,EAAMp0B,EAAMkH,EAAOmtB,GAExC/wB,KAAKgpC,mBAAmBlY,EAAMp0B,EAAMkH,EAAOmtB,GAEtD,MAAMkY,EAA6B,IAAqB,OAAfzN,EAAImJ,IAAoB1Q,GAAQuH,EAAImJ,GAAS1Q,EAAK0Q,GAC3F,IAAKr/B,EAAI,EAAGA,EAAIyrB,IAASzrB,EACvBwrB,EAAK0U,QAAQlgC,EAAI1B,GAAS43B,EAAMtK,EAAO5rB,GACnCsjC,IACEK,MACFL,GAAS,GAEX3U,EAAOuH,GAGX1K,EAAK+X,QAAUD,EAEb5C,GACFzB,GAAavkC,KAAMkxB,GAGvB,mBAAmBJ,EAAMp0B,EAAMkH,EAAOmtB,GACpC,MAAM,OAACC,EAAM,OAAEoT,GAAUtT,EACnB6T,EAAQ3T,EAAO4T,KACfC,EAAQT,EAAOQ,KACf/nC,EAASm0B,EAAOkY,YAChBC,EAAcnY,IAAWoT,EACzBlT,EAAS,IAAIxxB,MAAMqxB,GACzB,IAAIzrB,EAAGK,EAAMpH,EACb,IAAK+G,EAAI,EAAGK,EAAOorB,EAAOzrB,EAAIK,IAAQL,EACpC/G,EAAQ+G,EAAI1B,EACZstB,EAAO5rB,GAAK,CACV,CAACq/B,GAAQwE,GAAenY,EAAOG,MAAMt0B,EAAO0B,GAAQA,GACpD,CAACsmC,GAAQT,EAAOjT,MAAMz0B,EAAK6B,GAAQA,IAGvC,OAAO2yB,EAET,eAAeJ,EAAMp0B,EAAMkH,EAAOmtB,GAChC,MAAM,OAACuR,EAAM,OAAEC,GAAUzR,EACnBI,EAAS,IAAIxxB,MAAMqxB,GACzB,IAAIzrB,EAAGK,EAAMpH,EAAO2J,EACpB,IAAK5C,EAAI,EAAGK,EAAOorB,EAAOzrB,EAAIK,IAAQL,EACpC/G,EAAQ+G,EAAI1B,EACZsE,EAAOxL,EAAK6B,GACZ2yB,EAAO5rB,GAAK,CACV8E,EAAGk4B,EAAOnR,MAAMjpB,EAAK,GAAI3J,GACzB8L,EAAGk4B,EAAOpR,MAAMjpB,EAAK,GAAI3J,IAG7B,OAAO2yB,EAET,gBAAgBJ,EAAMp0B,EAAMkH,EAAOmtB,GACjC,MAAM,OAACuR,EAAM,OAAEC,GAAUzR,GACnB,SAACsY,EAAW,IAAG,SAAEC,EAAW,KAAOrpC,KAAKixB,SACxCC,EAAS,IAAIxxB,MAAMqxB,GACzB,IAAIzrB,EAAGK,EAAMpH,EAAO2J,EACpB,IAAK5C,EAAI,EAAGK,EAAOorB,EAAOzrB,EAAIK,IAAQL,EACpC/G,EAAQ+G,EAAI1B,EACZsE,EAAOxL,EAAK6B,GACZ2yB,EAAO5rB,GAAK,CACV8E,EAAGk4B,EAAOnR,MAAM9pB,EAAiBa,EAAMkhC,GAAW7qC,GAClD8L,EAAGk4B,EAAOpR,MAAM9pB,EAAiBa,EAAMmhC,GAAW9qC,IAGtD,OAAO2yB,EAET,UAAU3yB,GACR,OAAOyB,KAAKykC,YAAYe,QAAQjnC,GAElC,eAAeA,GACb,OAAOyB,KAAKykC,YAAY/nC,KAAK6B,GAE/B,WAAWujB,EAAOoP,EAAQ5P,GACxB,MAAMnlB,EAAQ6D,KAAK7D,MACb20B,EAAO9wB,KAAKykC,YACZnmC,EAAQ4yB,EAAOpP,EAAM8iB,MACrB7B,EAAQ,CACZ1hC,KAAMqhC,GAAwBvmC,GAAO,GACrC8jB,OAAQiR,EAAOwT,QAAQ5iB,EAAM8iB,OAE/B,OAAO9B,GAAWC,EAAOzkC,EAAOwyB,EAAKvyB,MAAO,CAAC+iB,SAE/C,sBAAsBnY,EAAO2Y,EAAOoP,EAAQ6R,GAC1C,MAAMuG,EAAcpY,EAAOpP,EAAM8iB,MACjC,IAAItmC,EAAwB,OAAhBgrC,EAAuBC,IAAMD,EACzC,MAAMrpB,EAAS8iB,GAAS7R,EAAOwT,QAAQ5iB,EAAM8iB,MACzC7B,GAAS9iB,IACX8iB,EAAM9iB,OAASA,EACf3hB,EAAQwkC,GAAWC,EAAOuG,EAAatpC,KAAKykC,YAAYlmC,QAE1D4K,EAAM0B,IAAMtC,KAAKsC,IAAI1B,EAAM0B,IAAKvM,GAChC6K,EAAM2B,IAAMvC,KAAKuC,IAAI3B,EAAM2B,IAAKxM,GAElC,UAAUwjB,EAAOgkB,GACf,MAAMhV,EAAO9wB,KAAKykC,YACZe,EAAU1U,EAAK0U,QACfoD,EAAS9X,EAAK+X,SAAW/mB,IAAUgP,EAAKE,OACxCrrB,EAAO6/B,EAAQpnC,OACforC,EAAaxpC,KAAKypC,eAAe3nB,GACjCihB,EAAQ8C,GAAYC,EAAUhV,EAAM9wB,KAAK7D,OACzCgN,EAAQ,CAAC0B,IAAKxL,OAAOsJ,kBAAmBmC,IAAKzL,OAAOwkC,oBACnDh5B,IAAK6+B,EAAU5+B,IAAK6+B,GAAYjG,GAAc8F,GACrD,IAAIlkC,EAAG4rB,EACP,SAAS0Y,IACP1Y,EAASsU,EAAQlgC,GACjB,MAAM49B,EAAahS,EAAOsY,EAAW5E,MACrC,OAAQngC,EAAeysB,EAAOpP,EAAM8iB,QAAU8E,EAAWxG,GAAcyG,EAAWzG,EAEpF,IAAK59B,EAAI,EAAGA,EAAIK,IAAQL,EACtB,IAAIskC,MAGJ5pC,KAAK6pC,sBAAsB1gC,EAAO2Y,EAAOoP,EAAQ6R,GAC7C6F,GACF,MAGJ,GAAIA,EACF,IAAKtjC,EAAIK,EAAO,EAAGL,GAAK,IAAKA,EAC3B,IAAIskC,IAAJ,CAGA5pC,KAAK6pC,sBAAsB1gC,EAAO2Y,EAAOoP,EAAQ6R,GACjD,MAGJ,OAAO55B,EAET,mBAAmB2Y,GACjB,MAAMoP,EAASlxB,KAAKykC,YAAYe,QAC1BvlB,EAAS,GACf,IAAI3a,EAAGK,EAAMrH,EACb,IAAKgH,EAAI,EAAGK,EAAOurB,EAAO9yB,OAAQkH,EAAIK,IAAQL,EAC5ChH,EAAQ4yB,EAAO5rB,GAAGwc,EAAM8iB,MACpBngC,EAAenG,IACjB2hB,EAAOxiB,KAAKa,GAGhB,OAAO2hB,EAET,iBACE,OAAO,EAET,iBAAiB1hB,GACf,MAAMuyB,EAAO9wB,KAAKykC,YACZzT,EAASF,EAAKE,OACdoT,EAAStT,EAAKsT,OACdlT,EAASlxB,KAAK8pC,UAAUvrC,GAC9B,MAAO,CACLL,MAAO8yB,EAAS,GAAKA,EAAO+Y,iBAAiB7Y,EAAOF,EAAO4T,OAAS,GACpEtmC,MAAO8lC,EAAS,GAAKA,EAAO2F,iBAAiB7Y,EAAOkT,EAAOQ,OAAS,IAGxE,QAAQtjB,GACN,MAAMwP,EAAO9wB,KAAKykC,YAClBzkC,KAAK5D,OAAOklB,GAAQ,WACpBwP,EAAKkZ,MAAQxH,GAAO39B,EAAe7E,KAAKjC,QAAQuoB,KAAM+b,GAAYvR,EAAKwR,OAAQxR,EAAKyR,OAAQviC,KAAKiqC,oBAEnG,OAAO3oB,IACP,OACE,MAAML,EAAMjhB,KAAKimC,KACX9pC,EAAQ6D,KAAK7D,MACb20B,EAAO9wB,KAAKykC,YACZ/jB,EAAWoQ,EAAKp0B,MAAQ,GACxBupB,EAAO9pB,EAAM+tC,UACbtJ,EAAS,GACTh9B,EAAQ5D,KAAKwmC,YAAc,EAC3BzV,EAAQ/wB,KAAKymC,YAAe/lB,EAAStiB,OAASwF,EAC9Cqe,EAA0BjiB,KAAKjC,QAAQkkB,wBAC7C,IAAI3c,EAIJ,IAHIwrB,EAAKvzB,SACPuzB,EAAKvzB,QAAQ2gC,KAAKjd,EAAKgF,EAAMriB,EAAOmtB,GAEjCzrB,EAAI1B,EAAO0B,EAAI1B,EAAQmtB,IAASzrB,EAAG,CACtC,MAAMwvB,EAAUpU,EAASpb,GACrBwvB,EAAQiR,SAGRjR,EAAQ8L,QAAU3e,EACpB2e,EAAOnjC,KAAKq3B,GAEZA,EAAQoJ,KAAKjd,EAAKgF,IAGtB,IAAK3gB,EAAI,EAAGA,EAAIs7B,EAAOxiC,SAAUkH,EAC/Bs7B,EAAOt7B,GAAG44B,KAAKjd,EAAKgF,GAGxB,SAAS1nB,EAAOqiC,GACd,MAAMtf,EAAOsf,EAAS,SAAW,UACjC,YAAiB7kC,IAAVwC,GAAuByB,KAAKykC,YAAYlnC,QAC3CyC,KAAKmqC,6BAA6B7oB,GAClCthB,KAAKoqC,0BAA0B7rC,GAAS,EAAG+iB,GAEjD,WAAW/iB,EAAOqiC,EAAQtf,GACxB,MAAM/jB,EAAUyC,KAAKinC,aACrB,IAAInrC,EACJ,GAAIyC,GAAS,GAAKA,EAAQyB,KAAKykC,YAAY/nC,KAAK0B,OAAQ,CACtD,MAAM02B,EAAU90B,KAAKykC,YAAY/nC,KAAK6B,GACtCzC,EAAUg5B,EAAQ8R,WACf9R,EAAQ8R,SAAWxB,GAAkBplC,KAAKmB,aAAc5C,EAAOu2B,IAClEh5B,EAAQo1B,OAASlxB,KAAK8pC,UAAUvrC,GAChCzC,EAAQwpC,IAAM/nC,EAAQb,KAAK6B,GAC3BzC,EAAQyC,MAAQzC,EAAQupC,UAAY9mC,OAEpCzC,EAAUkE,KAAK4mC,WACZ5mC,KAAK4mC,SAAWzB,GAAqBnlC,KAAK7D,MAAMgF,aAAcnB,KAAKzB,QACtEzC,EAAQyB,QAAUA,EAClBzB,EAAQyC,MAAQzC,EAAQgK,aAAe9F,KAAKzB,MAI9C,OAFAzC,EAAQ8kC,SAAWA,EACnB9kC,EAAQwlB,KAAOA,EACRxlB,EAET,6BAA6BwlB,GAC3B,OAAOthB,KAAKqqC,uBAAuBrqC,KAAKmoC,mBAAmBpmC,GAAIuf,GAEjE,0BAA0B/iB,EAAO+iB,GAC/B,OAAOthB,KAAKqqC,uBAAuBrqC,KAAKsqC,gBAAgBvoC,GAAIuf,EAAM/iB,GAEpE,uBAAuBgsC,EAAajpB,EAAO,UAAW/iB,GACpD,MAAMqiC,EAAkB,WAATtf,EACTqC,EAAQ3jB,KAAKkmC,gBACbzN,EAAW8R,EAAc,IAAMjpB,EAC/BqkB,EAAShiB,EAAM8U,GACf+R,EAAUxqC,KAAK0mC,qBAAuB9+B,EAAQrJ,GACpD,GAAIonC,EACF,OAAOD,GAAiBC,EAAQ6E,GAElC,MAAMtJ,EAASlhC,KAAK7D,MAAM+kC,OACpBsH,EAAYtH,EAAOuJ,wBAAwBzqC,KAAKomC,MAAOmE,GACvDxd,EAAW6T,EAAS,CAAI2J,EAAH,QAAuB,QAASA,EAAa,IAAM,CAACA,EAAa,IACtFzd,EAASoU,EAAOwH,gBAAgB1oC,KAAKinC,aAAcuB,GACnDkC,EAAQhtC,OAAO2D,KAAKwhB,GAASnC,SAAS6pB,IACtCzuC,EAAU,IAAMkE,KAAKmB,WAAW5C,EAAOqiC,GACvC3gB,EAASihB,EAAOyJ,oBAAoB7d,EAAQ4d,EAAO5uC,EAASixB,GAKlE,OAJI9M,EAAO0hB,UACT1hB,EAAO0hB,QAAU6I,EACjB7mB,EAAM8U,GAAY/6B,OAAOktC,OAAOlF,GAAiBzlB,EAAQuqB,KAEpDvqB,EAET,mBAAmB1hB,EAAOssC,EAAYjK,GACpC,MAAMzkC,EAAQ6D,KAAK7D,MACbwnB,EAAQ3jB,KAAKkmC,gBACbzN,EAAW,aAAaoS,EACxBlF,EAAShiB,EAAM8U,GACrB,GAAIkN,EACF,OAAOA,EAET,IAAI5nC,EACJ,IAAgC,IAA5B5B,EAAM4B,QAAQqiB,UAAqB,CACrC,MAAM8gB,EAASlhC,KAAK7D,MAAM+kC,OACpBsH,EAAYtH,EAAO4J,0BAA0B9qC,KAAKomC,MAAOyE,GACzD/d,EAASoU,EAAOwH,gBAAgB1oC,KAAKinC,aAAcuB,GACzDzqC,EAAUmjC,EAAOyH,eAAe7b,EAAQ9sB,KAAKmB,WAAW5C,EAAOqiC,EAAQiK,IAEzE,MAAM9J,EAAa,IAAI,GAAW5kC,EAAO4B,GAAWA,EAAQgjC,YAI5D,OAHIhjC,GAAWA,EAAQsvB,aACrB1J,EAAM8U,GAAY/6B,OAAOktC,OAAO7J,IAE3BA,EAET,iBAAiBhjC,GACf,GAAKA,EAAQ4jC,QAGb,OAAO3hC,KAAKumC,iBAAmBvmC,KAAKumC,eAAiB7oC,OAAOC,OAAO,GAAII,IAEzE,eAAeujB,EAAMypB,GACnB,OAAQA,GAAiBtF,GAAmBnkB,IAASthB,KAAK7D,MAAM6uC,oBAElE,cAAclW,EAASv2B,EAAOoiC,EAAYrf,GACpCmkB,GAAmBnkB,GACrB5jB,OAAOC,OAAOm3B,EAAS6L,GAEvB3gC,KAAKirC,mBAAmB1sC,EAAO+iB,GAAMllB,OAAO04B,EAAS6L,GAGzD,oBAAoBoK,EAAezpB,EAAMkgB,GACnCuJ,IAAkBtF,GAAmBnkB,IACvCthB,KAAKirC,wBAAmBlvC,EAAWulB,GAAMllB,OAAO2uC,EAAevJ,GAGnE,UAAU1M,EAASv2B,EAAO+iB,EAAMsf,GAC9B9L,EAAQ8L,OAASA,EACjB,MAAM7iC,EAAUiC,KAAK+0B,SAASx2B,EAAOqiC,GACrC5gC,KAAKirC,mBAAmB1sC,EAAO+iB,EAAMsf,GAAQxkC,OAAO04B,EAAS,CAC3D/2B,SAAW6iC,GAAU5gC,KAAKkrC,iBAAiBntC,IAAaA,IAG5D,iBAAiB+2B,EAAShvB,EAAcvH,GACtCyB,KAAKmrC,UAAUrW,EAASv2B,EAAO,UAAU,GAE3C,cAAcu2B,EAAShvB,EAAcvH,GACnCyB,KAAKmrC,UAAUrW,EAASv2B,EAAO,UAAU,GAE3C,2BACE,MAAMu2B,EAAU90B,KAAKykC,YAAYlnC,QAC7Bu3B,GACF90B,KAAKmrC,UAAUrW,OAAS/4B,EAAW,UAAU,GAGjD,wBACE,MAAM+4B,EAAU90B,KAAKykC,YAAYlnC,QAC7Bu3B,GACF90B,KAAKmrC,UAAUrW,OAAS/4B,EAAW,UAAU,GAGjD,gBAAgBqsC,GACd,MAAM1rC,EAAOsD,KAAKqmC,MACZ3lB,EAAW1gB,KAAKykC,YAAY/nC,KAClC,IAAK,MAAOwvB,EAAQkf,EAAMC,KAASrrC,KAAK6mC,UACtC7mC,KAAKksB,GAAQkf,EAAMC,GAErBrrC,KAAK6mC,UAAY,GACjB,MAAMyE,EAAU5qB,EAAStiB,OACnBmtC,EAAU7uC,EAAK0B,OACf2yB,EAAQxoB,KAAKsC,IAAI0gC,EAASD,GAC5Bva,GACF/wB,KAAKmxB,MAAM,EAAGJ,GAEZwa,EAAUD,EACZtrC,KAAKwrC,gBAAgBF,EAASC,EAAUD,EAASlD,GACxCmD,EAAUD,GACnBtrC,KAAKyrC,gBAAgBF,EAASD,EAAUC,GAG5C,gBAAgB3nC,EAAOmtB,EAAOqX,GAAmB,GAC/C,MAAMtX,EAAO9wB,KAAKykC,YACZ/nC,EAAOo0B,EAAKp0B,KACZmH,EAAMD,EAAQmtB,EACpB,IAAIzrB,EACJ,MAAMomC,EAAQ1b,IAEZ,IADAA,EAAI5xB,QAAU2yB,EACTzrB,EAAI0qB,EAAI5xB,OAAS,EAAGkH,GAAKzB,EAAKyB,IACjC0qB,EAAI1qB,GAAK0qB,EAAI1qB,EAAIyrB,IAIrB,IADA2a,EAAKhvC,GACA4I,EAAI1B,EAAO0B,EAAIzB,IAAOyB,EACzB5I,EAAK4I,GAAK,IAAItF,KAAKsqC,gBAEjBtqC,KAAKixB,UACPya,EAAK5a,EAAK0U,SAEZxlC,KAAKmxB,MAAMvtB,EAAOmtB,GACdqX,GACFpoC,KAAK2rC,eAAejvC,EAAMkH,EAAOmtB,EAAO,SAG5C,eAAe+D,EAASlxB,EAAOmtB,EAAOzP,IACtC,gBAAgB1d,EAAOmtB,GACrB,MAAMD,EAAO9wB,KAAKykC,YAClB,GAAIzkC,KAAKixB,SAAU,CACjB,MAAM2a,EAAU9a,EAAK0U,QAAQrhB,OAAOvgB,EAAOmtB,GACvCD,EAAKkV,UACPT,GAAYzU,EAAM8a,GAGtB9a,EAAKp0B,KAAKynB,OAAOvgB,EAAOmtB,GAE1B,MAAMluB,GACJ,GAAI7C,KAAKixB,SACPjxB,KAAK6mC,UAAUppC,KAAKoF,OACf,CACL,MAAOqpB,EAAQkf,EAAMC,GAAQxoC,EAC7B7C,KAAKksB,GAAQkf,EAAMC,GAErBrrC,KAAK7D,MAAM0vC,aAAapuC,KAAK,CAACuC,KAAKzB,SAAUsE,IAE/C,cACE,MAAMkuB,EAAQ+a,UAAU1tC,OACxB4B,KAAK+rC,MAAM,CAAC,kBAAmB/rC,KAAKinC,aAAavqC,KAAK0B,OAAS2yB,EAAOA,IAExE,aACE/wB,KAAK+rC,MAAM,CAAC,kBAAmB/rC,KAAKykC,YAAY/nC,KAAK0B,OAAS,EAAG,IAEnE,eACE4B,KAAK+rC,MAAM,CAAC,kBAAmB,EAAG,IAEpC,cAAcnoC,EAAOmtB,GACfA,GACF/wB,KAAK+rC,MAAM,CAAC,kBAAmBnoC,EAAOmtB,IAExC,MAAMib,EAAWF,UAAU1tC,OAAS,EAChC4tC,GACFhsC,KAAK+rC,MAAM,CAAC,kBAAmBnoC,EAAOooC,IAG1C,iBACEhsC,KAAK+rC,MAAM,CAAC,kBAAmB,EAAGD,UAAU1tC,UAOhD,SAAS6tC,GAAkBnqB,EAAO9iB,GAChC,IAAK8iB,EAAMoqB,OAAOC,KAAM,CACtB,MAAMC,EAAetqB,EAAMwiB,wBAAwBtlC,GACnD,IAAIihB,EAAS,GACb,IAAK,IAAI3a,EAAI,EAAGK,EAAOymC,EAAahuC,OAAQkH,EAAIK,EAAML,IACpD2a,EAASA,EAAOosB,OAAOD,EAAa9mC,GAAGk/B,WAAW8H,mBAAmBxqB,IAEvEA,EAAMoqB,OAAOC,KAAO3f,GAAavM,EAAOlW,KAAK,CAAChC,EAAGC,IAAMD,EAAIC,IAE7D,OAAO8Z,EAAMoqB,OAAOC,KAEtB,SAASI,GAAqBzb,GAC5B,MAAMhP,EAAQgP,EAAKE,OACb/Q,EAASgsB,GAAkBnqB,EAAOgP,EAAK9xB,MAC7C,IACIsG,EAAGK,EAAM6mC,EAAMvY,EADfppB,EAAMiX,EAAM2qB,QAEhB,MAAMC,EAAmB,KACV,QAATF,IAA4B,QAAVA,IAGlB5kC,EAAQqsB,KACVppB,EAAMtC,KAAKsC,IAAIA,EAAKtC,KAAKgC,IAAIiiC,EAAOvY,IAASppB,IAE/CopB,EAAOuY,IAET,IAAKlnC,EAAI,EAAGK,EAAOsa,EAAO7hB,OAAQkH,EAAIK,IAAQL,EAC5CknC,EAAO1qB,EAAM6qB,iBAAiB1sB,EAAO3a,IACrConC,IAGF,IADAzY,OAAOl4B,EACFuJ,EAAI,EAAGK,EAAOmc,EAAM8qB,MAAMxuC,OAAQkH,EAAIK,IAAQL,EACjDknC,EAAO1qB,EAAM+qB,gBAAgBvnC,GAC7BonC,IAEF,OAAO7hC,EAET,SAASiiC,GAAyBvuC,EAAOwuC,EAAOhvC,EAASivC,GACvD,MAAMC,EAAYlvC,EAAQmvC,aAC1B,IAAIjlC,EAAMoW,EAQV,OAPIha,EAAc4oC,IAChBhlC,EAAO8kC,EAAMliC,IAAM9M,EAAQovC,mBAC3B9uB,EAAQtgB,EAAQqvC,gBAEhBnlC,EAAOglC,EAAYD,EACnB3uB,EAAQ,GAEH,CACLgvB,MAAOplC,EAAO+kC,EACd3uB,QACAza,MAAOmpC,EAAMO,OAAO/uC,GAAU0J,EAAO,GAGzC,SAASslC,GAA0BhvC,EAAOwuC,EAAOhvC,EAASivC,GACxD,MAAMM,EAASP,EAAMO,OACfd,EAAOc,EAAO/uC,GACpB,IAAI01B,EAAO11B,EAAQ,EAAI+uC,EAAO/uC,EAAQ,GAAK,KACvCszB,EAAOtzB,EAAQ+uC,EAAOlvC,OAAS,EAAIkvC,EAAO/uC,EAAQ,GAAK,KAC3D,MAAMivC,EAAUzvC,EAAQovC,mBACX,OAATlZ,IACFA,EAAOuY,GAAiB,OAAT3a,EAAgBkb,EAAMlpC,IAAMkpC,EAAMnpC,MAAQiuB,EAAO2a,IAErD,OAAT3a,IACFA,EAAO2a,EAAOA,EAAOvY,GAEvB,MAAMrwB,EAAQ4oC,GAAQA,EAAOjkC,KAAKsC,IAAIopB,EAAMpC,IAAS,EAAI2b,EACnDvlC,EAAOM,KAAKgC,IAAIsnB,EAAOoC,GAAQ,EAAIuZ,EACzC,MAAO,CACLH,MAAOplC,EAAO+kC,EACd3uB,MAAOtgB,EAAQqvC,cACfxpC,SAGJ,SAAS6pC,GAAcC,EAAOxlC,EAAMk8B,EAAQ9+B,GAC1C,MAAMqoC,EAAavJ,EAAOjT,MAAMuc,EAAM,GAAIpoC,GACpCsoC,EAAWxJ,EAAOjT,MAAMuc,EAAM,GAAIpoC,GAClCuF,EAAMtC,KAAKsC,IAAI8iC,EAAYC,GAC3B9iC,EAAMvC,KAAKuC,IAAI6iC,EAAYC,GACjC,IAAIC,EAAWhjC,EACXijC,EAAShjC,EACTvC,KAAKgC,IAAIM,GAAOtC,KAAKgC,IAAIO,KAC3B+iC,EAAW/iC,EACXgjC,EAASjjC,GAEX3C,EAAKk8B,EAAOQ,MAAQkJ,EACpB5lC,EAAK6lC,QAAU,CACbF,WACAC,SACAlqC,MAAO+pC,EACP9pC,IAAK+pC,EACL/iC,MACAC,OAGJ,SAASkjC,GAAWN,EAAOxlC,EAAMk8B,EAAQ9+B,GAMvC,OALIhB,EAAQopC,GACVD,GAAcC,EAAOxlC,EAAMk8B,EAAQ9+B,GAEnC4C,EAAKk8B,EAAOQ,MAAQR,EAAOjT,MAAMuc,EAAOpoC,GAEnC4C,EAET,SAAS+lC,GAAsBnd,EAAMp0B,EAAMkH,EAAOmtB,GAChD,MAAMC,EAASF,EAAKE,OACdoT,EAAStT,EAAKsT,OACdvnC,EAASm0B,EAAOkY,YAChBC,EAAcnY,IAAWoT,EACzBlT,EAAS,GACf,IAAI5rB,EAAGK,EAAMuC,EAAMwlC,EACnB,IAAKpoC,EAAI1B,EAAO+B,EAAO/B,EAAQmtB,EAAOzrB,EAAIK,IAAQL,EAChDooC,EAAQhxC,EAAK4I,GACb4C,EAAO,GACPA,EAAK8oB,EAAO4T,MAAQuE,GAAenY,EAAOG,MAAMt0B,EAAOyI,GAAIA,GAC3D4rB,EAAOzzB,KAAKuwC,GAAWN,EAAOxlC,EAAMk8B,EAAQ9+B,IAE9C,OAAO4rB,EAET,SAASgd,GAAWC,GAClB,OAAOA,QAA8BpyC,IAApBoyC,EAAON,eAA4C9xC,IAAlBoyC,EAAOL,OAE3D,SAASM,GAAQnmC,EAAMm8B,EAAQiK,GAC7B,OAAa,IAATpmC,EACKgB,EAAKhB,IAENm8B,EAAOkK,eAAiB,GAAK,IAAMlK,EAAOv5B,KAAOwjC,EAAa,GAAK,GAE7E,SAASE,GAAY5N,GACnB,IAAIt7B,EAASzB,EAAOC,EAAKsiB,EAAKC,EAiB9B,OAhBIua,EAAW6N,YACbnpC,EAAUs7B,EAAWxU,KAAOwU,EAAWv2B,EACvCxG,EAAQ,OACRC,EAAM,UAENwB,EAAUs7B,EAAWxU,KAAOwU,EAAWt2B,EACvCzG,EAAQ,SACRC,EAAM,OAEJwB,GACF8gB,EAAM,MACNC,EAAS,UAETD,EAAM,QACNC,EAAS,OAEJ,CAACxiB,QAAOC,MAAKwB,UAAS8gB,MAAKC,UAEpC,SAASqoB,GAAiB9N,EAAY5iC,EAASglC,EAAOxkC,GACpD,IAAImwC,EAAO3wC,EAAQ4wC,cACnB,MAAMviB,EAAM,GACZ,IAAKsiB,EAEH,YADA/N,EAAWgO,cAAgBviB,GAG7B,MAAM,MAACxoB,EAAK,IAAEC,EAAG,QAAEwB,EAAO,IAAE8gB,EAAG,OAAEC,GAAUmoB,GAAY5N,GAC1C,WAAT+N,GAAqB3L,IACvBpC,EAAWiO,oBAAqB,GAC3B7L,EAAMgC,MAAQ,KAAOxmC,EACxBmwC,EAAOvoB,GACG4c,EAAMiC,SAAW,KAAOzmC,EAClCmwC,EAAOtoB,GAEPgG,EAAIyiB,GAAUzoB,EAAQxiB,EAAOC,EAAKwB,KAAY,EAC9CqpC,EAAOvoB,IAGXiG,EAAIyiB,GAAUH,EAAM9qC,EAAOC,EAAKwB,KAAY,EAC5Cs7B,EAAWgO,cAAgBviB,EAE7B,SAASyiB,GAAUH,EAAM3mC,EAAGC,EAAG3C,GAO7B,OANIA,GACFqpC,EAAOI,GAAKJ,EAAM3mC,EAAGC,GACrB0mC,EAAOK,GAASL,EAAM1mC,EAAGD,IAEzB2mC,EAAOK,GAASL,EAAM3mC,EAAGC,GAEpB0mC,EAET,SAASI,GAAKE,EAAMnpC,EAAIopC,GACtB,OAAOD,IAASnpC,EAAKopC,EAAKD,IAASC,EAAKppC,EAAKmpC,EAE/C,SAASD,GAAS9/B,EAAGrL,EAAOC,GAC1B,MAAa,UAANoL,EAAgBrL,EAAc,QAANqL,EAAcpL,EAAMoL,EAErD,SAASigC,GAAiBvO,GAAY,cAACwO,GAAgB9wB,GACrDsiB,EAAWwO,cAAkC,SAAlBA,EACb,IAAV9wB,EAAc,IAAO,EACrB8wB,EA7LN,GAAkBtsB,SAAW,GAC7B,GAAkB/f,UAAUqlC,mBAAqB,KACjD,GAAkBrlC,UAAUwnC,gBAAkB,KA6L9C,MAAM,WAAsB,GAC1B,mBAAmBxZ,EAAMp0B,EAAMkH,EAAOmtB,GACpC,OAAOkd,GAAsBnd,EAAMp0B,EAAMkH,EAAOmtB,GAElD,eAAeD,EAAMp0B,EAAMkH,EAAOmtB,GAChC,OAAOkd,GAAsBnd,EAAMp0B,EAAMkH,EAAOmtB,GAElD,gBAAgBD,EAAMp0B,EAAMkH,EAAOmtB,GACjC,MAAM,OAACC,EAAM,OAAEoT,GAAUtT,GACnB,SAACsY,EAAW,IAAG,SAAEC,EAAW,KAAOrpC,KAAKixB,SACxCme,EAA2B,MAAhBpe,EAAO4T,KAAewE,EAAWC,EAC5CgG,EAA2B,MAAhBjL,EAAOQ,KAAewE,EAAWC,EAC5CnY,EAAS,GACf,IAAI5rB,EAAGK,EAAMuC,EAAMZ,EACnB,IAAKhC,EAAI1B,EAAO+B,EAAO/B,EAAQmtB,EAAOzrB,EAAIK,IAAQL,EAChDgC,EAAM5K,EAAK4I,GACX4C,EAAO,GACPA,EAAK8oB,EAAO4T,MAAQ5T,EAAOG,MAAM9pB,EAAiBC,EAAK8nC,GAAW9pC,GAClE4rB,EAAOzzB,KAAKuwC,GAAW3mC,EAAiBC,EAAK+nC,GAAWnnC,EAAMk8B,EAAQ9+B,IAExE,OAAO4rB,EAET,sBAAsB/nB,EAAO2Y,EAAOoP,EAAQ6R,GAC1CuM,MAAMzF,sBAAsB1gC,EAAO2Y,EAAOoP,EAAQ6R,GAClD,MAAMoL,EAASjd,EAAO6c,QAClBI,GAAUrsB,IAAU9hB,KAAKykC,YAAYL,SACvCj7B,EAAM0B,IAAMtC,KAAKsC,IAAI1B,EAAM0B,IAAKsjC,EAAOtjC,KACvC1B,EAAM2B,IAAMvC,KAAKuC,IAAI3B,EAAM2B,IAAKqjC,EAAOrjC,MAG3C,iBACE,OAAO,EAET,iBAAiBvM,GACf,MAAMuyB,EAAO9wB,KAAKykC,aACZ,OAACzT,EAAM,OAAEoT,GAAUtT,EACnBI,EAASlxB,KAAK8pC,UAAUvrC,GACxB4vC,EAASjd,EAAO6c,QAChBzvC,EAAQ4vC,GAAWC,GACrB,IAAMA,EAAOvqC,MAAQ,KAAOuqC,EAAOtqC,IAAM,IACzC,GAAKugC,EAAO2F,iBAAiB7Y,EAAOkT,EAAOQ,OAC/C,MAAO,CACL1mC,MAAO,GAAK8yB,EAAO+Y,iBAAiB7Y,EAAOF,EAAO4T,OAClDtmC,SAGJ,aACE0B,KAAK0mC,qBAAsB,EAC3B4I,MAAMxI,aACN,MAAMhW,EAAO9wB,KAAKykC,YAClB3T,EAAKiS,MAAQ/iC,KAAKinC,aAAalE,MAEjC,OAAOzhB,GACL,MAAMwP,EAAO9wB,KAAKykC,YAClBzkC,KAAK2rC,eAAe7a,EAAKp0B,KAAM,EAAGo0B,EAAKp0B,KAAK0B,OAAQkjB,GAEtD,eAAeiuB,EAAM3rC,EAAOmtB,EAAOzP,GACjC,MAAMkuB,EAAiB,UAATluB,GACR,MAAC/iB,EAAOkmC,aAAa,OAACL,IAAWpkC,KACjCmsB,EAAOiY,EAAOqL,eACdjB,EAAapK,EAAOkK,eACpBvB,EAAQ/sC,KAAK0vC,YACbC,EAAY3vC,KAAKoqC,0BAA0BxmC,EAAO0d,GAClDypB,EAAgB/qC,KAAKkrC,iBAAiByE,GACtCC,EAAiB5vC,KAAK4vC,eAAetuB,EAAMypB,GACjD/qC,KAAK6vC,oBAAoB9E,EAAezpB,EAAMquB,GAC9C,IAAK,IAAIrqC,EAAI1B,EAAO0B,EAAI1B,EAAQmtB,EAAOzrB,IAAK,CAC1C,MAAM4rB,EAASlxB,KAAK8pC,UAAUxkC,GACxBwqC,EAAUN,GAASnrC,EAAc6sB,EAAOkT,EAAOQ,OAAS,CAACzY,OAAM4jB,KAAM5jB,GAAQnsB,KAAKgwC,yBAAyB1qC,GAC3G2qC,EAAUjwC,KAAKkwC,yBAAyB5qC,EAAGynC,GAC3ChK,GAAS7R,EAAOwT,SAAW,IAAIN,EAAOQ,MACtCjE,EAAa,CACjB6N,aACAriB,KAAM2jB,EAAQ3jB,KACdyiB,oBAAqB7L,GAASmL,GAAWhd,EAAO6c,UAAaxvC,IAAUwkC,EAAMgC,MAAQxmC,IAAUwkC,EAAMiC,QACrG56B,EAAGokC,EAAasB,EAAQC,KAAOE,EAAQE,OACvC9lC,EAAGmkC,EAAayB,EAAQE,OAASL,EAAQC,KACzCzwC,OAAQkvC,EAAayB,EAAQhoC,KAAOM,KAAKgC,IAAIulC,EAAQ7nC,MACrD7I,MAAOovC,EAAajmC,KAAKgC,IAAIulC,EAAQ7nC,MAAQgoC,EAAQhoC,MAEnD2nC,IACFjP,EAAW5iC,QAAUgtC,GAAiB/qC,KAAKoqC,0BAA0B9kC,EAAGiqC,EAAKjqC,GAAGs7B,OAAS,SAAWtf,IAEtG,MAAMvjB,EAAU4iC,EAAW5iC,SAAWwxC,EAAKjqC,GAAGvH,QAC9C0wC,GAAiB9N,EAAY5iC,EAASglC,EAAOxkC,GAC7C2wC,GAAiBvO,EAAY5iC,EAASgvC,EAAM1uB,OAC5Cre,KAAKowC,cAAcb,EAAKjqC,GAAIA,EAAGq7B,EAAYrf,IAG/C,WAAWia,EAAM8J,GACf,MAAMvU,EAAO9wB,KAAKykC,YACZzT,EAASF,EAAKE,OACd4R,EAAW5R,EAAOsT,wBAAwBtkC,KAAKomC,OAC/C9C,EAAUtS,EAAOjzB,QAAQulC,QACzB39B,EAAOi9B,EAASxkC,OAChB2lC,EAAS,GACf,IAAIz+B,EAAG4C,EACP,IAAK5C,EAAI,EAAGA,EAAIK,IAAQL,EAEtB,GADA4C,EAAO06B,EAASt9B,GACX4C,EAAKs8B,WAAWzmC,QAAQsyC,QAA7B,CAGA,GAAyB,qBAAdhL,EAA2B,CACpC,MAAMhmB,EAAMnX,EAAKs8B,WAAWsF,UAAUzE,GACpCn9B,EAAKs8B,WAAWC,YAAYL,OAAOQ,MAErC,GAAIvgC,EAAcgb,IAAQlV,MAAMkV,GAC9B,SAOJ,KAJgB,IAAZikB,IAAqD,IAAhCS,EAAOx9B,QAAQ2B,EAAK66B,aAClChnC,IAAZunC,QAAwCvnC,IAAfmM,EAAK66B,QAC3BgB,EAAOtmC,KAAKyK,EAAK66B,OAEf76B,EAAK3J,QAAUg9B,EACjB,MAMJ,OAHKwI,EAAO3lC,QACV2lC,EAAOtmC,UAAK1B,GAEPgoC,EAET,eAAexlC,GACb,OAAOyB,KAAKswC,gBAAWv0C,EAAWwC,GAAOH,OAE3C,eAAe0H,EAAcqc,EAAMkjB,GACjC,MAAMtB,EAAS/jC,KAAKswC,WAAWxqC,EAAcu/B,GACvC9mC,OAAkBxC,IAATomB,EACX4hB,EAAOx9B,QAAQ4b,IACd,EACL,OAAmB,IAAX5jB,EACJwlC,EAAO3lC,OAAS,EAChBG,EAEN,YACE,MAAM6oB,EAAOpnB,KAAKjC,QACZ+yB,EAAO9wB,KAAKykC,YACZzT,EAASF,EAAKE,OACdsc,EAAS,GACf,IAAIhoC,EAAGK,EACP,IAAKL,EAAI,EAAGK,EAAOmrB,EAAKp0B,KAAK0B,OAAQkH,EAAIK,IAAQL,EAC/CgoC,EAAO7vC,KAAKuzB,EAAO2b,iBAAiB3sC,KAAK8pC,UAAUxkC,GAAG0rB,EAAO4T,MAAOt/B,IAEtE,MAAM4nC,EAAe9lB,EAAK8lB,aACpBriC,EAAMqiC,GAAgBX,GAAqBzb,GACjD,MAAO,CACLjmB,MACAyiC,SACA1pC,MAAOotB,EAAOuf,YACd1sC,IAAKmtB,EAAOwf,UACZxD,WAAYhtC,KAAKywC,iBACjB3uB,MAAOkP,EACPqf,QAASjpB,EAAKipB,QACdhyB,MAAO6uB,EAAe,EAAI9lB,EAAK+lB,mBAAqB/lB,EAAKgmB,eAG7D,yBAAyB7uC,GACvB,MAAOkmC,aAAa,OAACL,EAAM,SAAE4B,GAAWjoC,SAAUouB,KAAMukB,EAAS,aAAEC,IAAiB3wC,KAC9EquC,EAAaqC,GAAa,EAC1Bxf,EAASlxB,KAAK8pC,UAAUvrC,GACxB4vC,EAASjd,EAAO6c,QAChB6C,EAAW1C,GAAWC,GAC5B,IAGI4B,EAAM9nC,EAHN3J,EAAQ4yB,EAAOkT,EAAOQ,MACtBhhC,EAAQ,EACRxF,EAAS4nC,EAAWhmC,KAAK8iC,WAAWsB,EAAQlT,EAAQ8U,GAAY1nC,EAEhEF,IAAWE,IACbsF,EAAQxF,EAASE,EACjBF,EAASE,GAEPsyC,IACFtyC,EAAQ6vC,EAAON,SACfzvC,EAAS+vC,EAAOL,OAASK,EAAON,SAClB,IAAVvvC,GAAe2K,EAAK3K,KAAW2K,EAAKklC,EAAOL,UAC7ClqC,EAAQ,GAEVA,GAAStF,GAEX,MAAMqvC,EAActpC,EAAcqsC,IAAeE,EAAuBhtC,EAAZ8sC,EAC5D,IAAIvkB,EAAOiY,EAAOuI,iBAAiBgB,GAOnC,GALEoC,EADE/vC,KAAK7D,MAAM00C,kBAAkBtyC,GACxB6lC,EAAOuI,iBAAiB/oC,EAAQxF,GAEhC+tB,EAETlkB,EAAO8nC,EAAO5jB,EACV5jB,KAAKgC,IAAItC,GAAQ0oC,EAAc,CACjC1oC,EAAOmmC,GAAQnmC,EAAMm8B,EAAQiK,GAAcsC,EACvCryC,IAAU+vC,IACZliB,GAAQlkB,EAAO,GAEjB,MAAM6oC,EAAa1M,EAAO2M,mBAAmB,GACvCC,EAAW5M,EAAO2M,mBAAmB,GACrClmC,EAAMtC,KAAKsC,IAAIimC,EAAYE,GAC3BlmC,EAAMvC,KAAKuC,IAAIgmC,EAAYE,GACjC7kB,EAAO5jB,KAAKuC,IAAIvC,KAAKsC,IAAIshB,EAAMrhB,GAAMD,GACrCklC,EAAO5jB,EAAOlkB,EAEhB,GAAIkkB,IAASiY,EAAOuI,iBAAiB0B,GAAa,CAChD,MAAM4C,EAAWhoC,EAAKhB,GAAQm8B,EAAO8M,qBAAqB7C,GAAc,EACxEliB,GAAQ8kB,EACRhpC,GAAQgpC,EAEV,MAAO,CACLhpC,OACAkkB,OACA4jB,OACAI,OAAQJ,EAAO9nC,EAAO,GAG1B,yBAAyB1J,EAAOwuC,GAC9B,MAAMjrB,EAAQirB,EAAMjrB,MACd/jB,EAAUiC,KAAKjC,QACfozC,EAAWpzC,EAAQozC,SACnBC,EAAkBvsC,EAAe9G,EAAQqzC,gBAAiBC,KAChE,IAAIlB,EAAQloC,EACZ,GAAI8kC,EAAMsD,QAAS,CACjB,MAAMrD,EAAamE,EAAWnxC,KAAKywC,eAAelyC,GAASwuC,EAAMC,WAC3D7jC,EAAiC,SAAzBpL,EAAQmvC,aAClBK,GAA0BhvC,EAAOwuC,EAAOhvC,EAASivC,GACjDF,GAAyBvuC,EAAOwuC,EAAOhvC,EAASivC,GAC9CsE,EAAatxC,KAAKuxC,eAAevxC,KAAKzB,MAAOyB,KAAKykC,YAAY1B,MAAOoO,EAAW5yC,OAAQxC,GAC9Fo0C,EAAShnC,EAAMvF,MAASuF,EAAMkkC,MAAQiE,EAAenoC,EAAMkkC,MAAQ,EACnEplC,EAAOM,KAAKsC,IAAIumC,EAAiBjoC,EAAMkkC,MAAQlkC,EAAMkV,YAErD8xB,EAASruB,EAAM6qB,iBAAiB3sC,KAAK8pC,UAAUvrC,GAAOujB,EAAM8iB,MAAOrmC,GACnE0J,EAAOM,KAAKsC,IAAIumC,EAAiBrE,EAAMliC,IAAMkiC,EAAM1uB,OAErD,MAAO,CACL8N,KAAMgkB,EAASloC,EAAO,EACtB8nC,KAAMI,EAASloC,EAAO,EACtBkoC,SACAloC,QAGJ,OACE,MAAM6oB,EAAO9wB,KAAKykC,YACZL,EAAStT,EAAKsT,OACdoN,EAAQ1gB,EAAKp0B,KACbiJ,EAAO6rC,EAAMpzC,OACnB,IAAIkH,EAAI,EACR,KAAOA,EAAIK,IAAQL,EACsB,OAAnCtF,KAAK8pC,UAAUxkC,GAAG8+B,EAAOQ,OAC3B4M,EAAMlsC,GAAG44B,KAAKl+B,KAAKimC,OAK3B,GAAclkC,GAAK,MACnB,GAAc8gB,SAAW,CACvBslB,oBAAoB,EACpBmC,gBAAiB,MACjB6C,mBAAoB,GACpBC,cAAe,GACfiD,SAAS,EACTtP,WAAY,CACVN,QAAS,CACPzhC,KAAM,SACN2hC,WAAY,CAAC,IAAK,IAAK,OAAQ,QAAS,aAI9C,GAAchhB,UAAY,CACxBoC,OAAQ,CACN0vB,QAAS,CACPzyC,KAAM,WACN0yC,QAAQ,EACRC,KAAM,CACJD,QAAQ,IAGZE,QAAS,CACP5yC,KAAM,SACN2rB,aAAa,KAKnB,MAAM,WAAyB,GAC7B,aACE3qB,KAAK0mC,qBAAsB,EAC3B4I,MAAMxI,aAER,mBAAmBhW,EAAMp0B,EAAMkH,EAAOmtB,GACpC,MAAMG,EAASoe,MAAMtG,mBAAmBlY,EAAMp0B,EAAMkH,EAAOmtB,GAC3D,IAAK,IAAIzrB,EAAI,EAAGA,EAAI4rB,EAAO9yB,OAAQkH,IACjC4rB,EAAO5rB,GAAGyoC,QAAU/tC,KAAKoqC,0BAA0B9kC,EAAI1B,GAAOqhB,OAEhE,OAAOiM,EAET,eAAeJ,EAAMp0B,EAAMkH,EAAOmtB,GAChC,MAAMG,EAASoe,MAAMxG,eAAehY,EAAMp0B,EAAMkH,EAAOmtB,GACvD,IAAK,IAAIzrB,EAAI,EAAGA,EAAI4rB,EAAO9yB,OAAQkH,IAAK,CACtC,MAAM4C,EAAOxL,EAAKkH,EAAQ0B,GAC1B4rB,EAAO5rB,GAAGyoC,QAAUlpC,EAAeqD,EAAK,GAAIlI,KAAKoqC,0BAA0B9kC,EAAI1B,GAAOqhB,QAExF,OAAOiM,EAET,gBAAgBJ,EAAMp0B,EAAMkH,EAAOmtB,GACjC,MAAMG,EAASoe,MAAMvG,gBAAgBjY,EAAMp0B,EAAMkH,EAAOmtB,GACxD,IAAK,IAAIzrB,EAAI,EAAGA,EAAI4rB,EAAO9yB,OAAQkH,IAAK,CACtC,MAAM4C,EAAOxL,EAAKkH,EAAQ0B,GAC1B4rB,EAAO5rB,GAAGyoC,QAAUlpC,EAAeqD,GAAQA,EAAK+I,IAAM/I,EAAK+I,EAAGjR,KAAKoqC,0BAA0B9kC,EAAI1B,GAAOqhB,QAE1G,OAAOiM,EAET,iBACE,MAAMx0B,EAAOsD,KAAKykC,YAAY/nC,KAC9B,IAAIoO,EAAM,EACV,IAAK,IAAIxF,EAAI5I,EAAK0B,OAAS,EAAGkH,GAAK,IAAKA,EACtCwF,EAAMvC,KAAKuC,IAAIA,EAAKpO,EAAK4I,GAAG2C,KAAKjI,KAAKoqC,0BAA0B9kC,IAAM,GAExE,OAAOwF,EAAM,GAAKA,EAEpB,iBAAiBvM,GACf,MAAMuyB,EAAO9wB,KAAKykC,aACZ,OAACnC,EAAM,OAAEC,GAAUzR,EACnBI,EAASlxB,KAAK8pC,UAAUvrC,GACxB6L,EAAIk4B,EAAOyH,iBAAiB7Y,EAAO9mB,GACnCC,EAAIk4B,EAAOwH,iBAAiB7Y,EAAO7mB,GACnC4G,EAAIigB,EAAO6c,QACjB,MAAO,CACL7vC,MAAO4yB,EAAK5yB,MACZI,MAAO,IAAM8L,EAAI,KAAOC,GAAK4G,EAAI,KAAOA,EAAI,IAAM,KAGtD,OAAOqQ,GACL,MAAMgQ,EAAStxB,KAAKykC,YAAY/nC,KAChCsD,KAAK2rC,eAAera,EAAQ,EAAGA,EAAOlzB,OAAQkjB,GAEhD,eAAegQ,EAAQ1tB,EAAOmtB,EAAOzP,GACnC,MAAMkuB,EAAiB,UAATluB,GACR,OAAC0P,EAAM,OAAEoT,GAAUpkC,KAAKykC,YACxBkL,EAAY3vC,KAAKoqC,0BAA0BxmC,EAAO0d,GAClDypB,EAAgB/qC,KAAKkrC,iBAAiByE,GACtCC,EAAiB5vC,KAAK4vC,eAAetuB,EAAMypB,GAC3CpG,EAAQ3T,EAAO4T,KACfC,EAAQT,EAAOQ,KACrB,IAAK,IAAIt/B,EAAI1B,EAAO0B,EAAI1B,EAAQmtB,EAAOzrB,IAAK,CAC1C,MAAM0gB,EAAQsL,EAAOhsB,GACf4rB,GAAUse,GAASxvC,KAAK8pC,UAAUxkC,GAClCq7B,EAAa,GACbzN,EAASyN,EAAWgE,GAAS6K,EAAQxe,EAAO+f,mBAAmB,IAAO/f,EAAO2b,iBAAiBzb,EAAOyT,IACrGxR,EAASwN,EAAWkE,GAAS2K,EAAQpL,EAAOqL,eAAiBrL,EAAOuI,iBAAiBzb,EAAO2T,IAClGlE,EAAWpP,KAAOpnB,MAAM+oB,IAAW/oB,MAAMgpB,GACrCyc,IACFjP,EAAW5iC,QAAUiC,KAAKoqC,0BAA0B9kC,EAAG0gB,EAAM4a,OAAS,SAAWtf,GAC7EkuB,IACF7O,EAAW5iC,QAAQknB,OAAS,IAGhCjlB,KAAKowC,cAAcpqB,EAAO1gB,EAAGq7B,EAAYrf,GAE3CthB,KAAK6vC,oBAAoB9E,EAAezpB,EAAMquB,GAEhD,0BAA0BpxC,EAAO+iB,GAC/B,MAAM4P,EAASlxB,KAAK8pC,UAAUvrC,GAC9B,IAAI0hB,EAASqvB,MAAMlF,0BAA0B7rC,EAAO+iB,GAChDrB,EAAO0hB,UACT1hB,EAASviB,OAAOC,OAAO,GAAIsiB,EAAQ,CAAC0hB,SAAS,KAE/C,MAAM1c,EAAShF,EAAOgF,OAKtB,MAJa,WAAT3D,IACFrB,EAAOgF,OAAS,GAElBhF,EAAOgF,QAAUpgB,EAAeqsB,GAAUA,EAAO6c,QAAS9oB,GACnDhF,GAkCX,SAAS4xB,GAAkB7sB,EAAU8sB,EAAeC,GAClD,IAAIC,EAAS,EACTC,EAAS,EACTxc,EAAU,EACVC,EAAU,EACd,GAAIoc,EAAgBtpC,EAAK,CACvB,MAAM0pC,EAAaltB,EACbmtB,EAAWD,EAAaJ,EACxBM,EAAS7pC,KAAK0F,IAAIikC,GAClBG,EAAS9pC,KAAKyE,IAAIklC,GAClBI,EAAO/pC,KAAK0F,IAAIkkC,GAChBI,EAAOhqC,KAAKyE,IAAImlC,GAChBK,EAAU,CAAC7mC,EAAO5D,EAAGC,IAAMmE,GAAcR,EAAOumC,EAAYC,GAAU,GAAQ,EAAI5pC,KAAKuC,IAAI/C,EAAGA,EAAIgqC,EAAQ/pC,EAAGA,EAAI+pC,GACjHU,EAAU,CAAC9mC,EAAO5D,EAAGC,IAAMmE,GAAcR,EAAOumC,EAAYC,GAAU,IAAS,EAAI5pC,KAAKsC,IAAI9C,EAAGA,EAAIgqC,EAAQ/pC,EAAGA,EAAI+pC,GAClHW,EAAOF,EAAQ,EAAGJ,EAAQE,GAC1BK,EAAOH,EAAQ3pC,EAASwpC,EAAQE,GAChCK,EAAOH,EAAQnqC,EAAI8pC,EAAQE,GAC3BO,EAAOJ,EAAQnqC,EAAKO,EAASwpC,EAAQE,GAC3CP,GAAUU,EAAOE,GAAQ,EACzBX,GAAUU,EAAOE,GAAQ,EACzBpd,IAAYid,EAAOE,GAAQ,EAC3Bld,IAAYid,EAAOE,GAAQ,EAE7B,MAAO,CAACb,SAAQC,SAAQxc,UAASC,WAtDnC,GAAiB3zB,GAAK,SACtB,GAAiB8gB,SAAW,CAC1BslB,oBAAoB,EACpBmC,gBAAiB,QACjBvJ,WAAY,CACVN,QAAS,CACPzhC,KAAM,SACN2hC,WAAY,CAAC,IAAK,IAAK,cAAe,aAI5C,GAAiBhhB,UAAY,CAC3BoC,OAAQ,CACN3X,EAAG,CACDpL,KAAM,UAERqL,EAAG,CACDrL,KAAM,WAGVS,QAAS,CACPqzC,QAAS,CACPvV,UAAW,CACT,QACE,MAAO,QAgCjB,MAAM,WAA2B,GAC/B,YAAYphC,EAAO2J,GACjBwpC,MAAMnzC,EAAO2J,GACb9F,KAAK0mC,qBAAsB,EAC3B1mC,KAAK+yC,iBAAch3C,EACnBiE,KAAKgzC,iBAAcj3C,EACnBiE,KAAKy1B,aAAU15B,EACfiE,KAAK01B,aAAU35B,EAEjB,cACA,MAAM6H,EAAOmtB,GACX,MAAMr0B,EAAOsD,KAAKinC,aAAavqC,KACzBo0B,EAAO9wB,KAAKykC,YAClB,IAAsB,IAAlBzkC,KAAKixB,SACPH,EAAK0U,QAAU9oC,MACV,CACL,IAKI4I,EAAGK,EALHstC,EAAU3tC,IAAO5I,EAAK4I,GAC1B,GAAId,EAAS9H,EAAKkH,IAAS,CACzB,MAAM,IAAC0C,EAAM,SAAWtG,KAAKixB,SAC7BgiB,EAAU3tC,IAAO+B,EAAiB3K,EAAK4I,GAAIgB,GAG7C,IAAKhB,EAAI1B,EAAO+B,EAAO/B,EAAQmtB,EAAOzrB,EAAIK,IAAQL,EAChDwrB,EAAK0U,QAAQlgC,GAAK2tC,EAAO3tC,IAI/B,eACE,OAAOyF,EAAU/K,KAAKjC,QAAQinB,SAAW,IAE3C,oBACE,OAAOja,EAAU/K,KAAKjC,QAAQ+zC,eAEhC,sBACE,IAAIjnC,EAAMrC,EACNsC,GAAOtC,EACX,IAAK,IAAIlD,EAAI,EAAGA,EAAItF,KAAK7D,MAAMO,KAAKI,SAASsB,SAAUkH,EACrD,GAAItF,KAAK7D,MAAM+2C,iBAAiB5tC,GAAI,CAClC,MAAMk/B,EAAaxkC,KAAK7D,MAAM4rC,eAAeziC,GAAGk/B,WAC1Cxf,EAAWwf,EAAW2O,eACtBrB,EAAgBtN,EAAW4O,oBACjCvoC,EAAMtC,KAAKsC,IAAIA,EAAKma,GACpBla,EAAMvC,KAAKuC,IAAIA,EAAKka,EAAW8sB,GAGnC,MAAO,CACL9sB,SAAUna,EACVinC,cAAehnC,EAAMD,GAGzB,OAAOyW,GACL,MAAMnlB,EAAQ6D,KAAK7D,OACb,UAAC+tC,GAAa/tC,EACd20B,EAAO9wB,KAAKykC,YACZ4O,EAAOviB,EAAKp0B,KACZ42C,EAAUtzC,KAAKuzC,oBAAsBvzC,KAAKwzC,aAAaH,GAAQrzC,KAAKjC,QAAQu1C,QAC5EG,EAAUlrC,KAAKuC,KAAKvC,KAAKsC,IAAIq/B,EAAU9qC,MAAO8qC,EAAU5qC,QAAUg0C,GAAW,EAAG,GAChFvB,EAASxpC,KAAKsC,IAAI/F,EAAa9E,KAAKjC,QAAQg0C,OAAQ0B,GAAU,GAC9DC,EAAc1zC,KAAK2zC,eAAe3zC,KAAKzB,QACvC,cAACuzC,EAAa,SAAE9sB,GAAYhlB,KAAK4zC,uBACjC,OAAC5B,EAAM,OAAEC,EAAM,QAAExc,EAAO,QAAEC,GAAWmc,GAAkB7sB,EAAU8sB,EAAeC,GAChFlqB,GAAYqiB,EAAU9qC,MAAQk0C,GAAWtB,EACzC1b,GAAa4T,EAAU5qC,OAASg0C,GAAWrB,EAC3C4B,EAAYtrC,KAAKuC,IAAIvC,KAAKsC,IAAIgd,EAAUyO,GAAa,EAAG,GACxD0c,EAAc9tC,EAAYlF,KAAKjC,QAAQknB,OAAQ4uB,GAC/Cd,EAAcxqC,KAAKuC,IAAIkoC,EAAcjB,EAAQ,GAC7C+B,GAAgBd,EAAcD,GAAe/yC,KAAK+zC,gCACxD/zC,KAAKy1B,QAAUA,EAAUud,EACzBhzC,KAAK01B,QAAUA,EAAUsd,EACzBliB,EAAKkjB,MAAQh0C,KAAKi0C,iBAClBj0C,KAAKgzC,YAAcA,EAAcc,EAAe9zC,KAAKk0C,qBAAqBl0C,KAAKzB,OAC/EyB,KAAK+yC,YAAcxqC,KAAKuC,IAAI9K,KAAKgzC,YAAcc,EAAeJ,EAAa,GAC3E1zC,KAAK2rC,eAAe0H,EAAM,EAAGA,EAAKj1C,OAAQkjB,GAE5C,eAAehc,EAAGkqC,GAChB,MAAMpoB,EAAOpnB,KAAKjC,QACZ+yB,EAAO9wB,KAAKykC,YACZqN,EAAgB9xC,KAAKozC,oBAC3B,OAAK5D,GAASpoB,EAAKhH,UAAU+zB,gBAAmBn0C,KAAK7D,MAAM00C,kBAAkBvrC,IAA0B,OAApBwrB,EAAK0U,QAAQlgC,IAAewrB,EAAKp0B,KAAK4I,GAAGygC,OACnH,EAEF/lC,KAAKo0C,uBAAuBtjB,EAAK0U,QAAQlgC,GAAKwsC,EAAgBtpC,GAEvE,eAAe6qC,EAAMzvC,EAAOmtB,EAAOzP,GACjC,MAAMkuB,EAAiB,UAATluB,EACRnlB,EAAQ6D,KAAK7D,MACb+tC,EAAY/tC,EAAM+tC,UAClB9iB,EAAOjrB,EAAM4B,QACbs2C,EAAgBjtB,EAAKhH,UACrBk0B,GAAWpK,EAAUnmC,KAAOmmC,EAAUlmC,OAAS,EAC/CuwC,GAAWrK,EAAU/jB,IAAM+jB,EAAU9jB,QAAU,EAC/CouB,EAAehF,GAAS6E,EAAcG,aACtCzB,EAAcyB,EAAe,EAAIx0C,KAAK+yC,YACtCC,EAAcwB,EAAe,EAAIx0C,KAAKgzC,YACtCrD,EAAY3vC,KAAKoqC,0BAA0BxmC,EAAO0d,GAClDypB,EAAgB/qC,KAAKkrC,iBAAiByE,GACtCC,EAAiB5vC,KAAK4vC,eAAetuB,EAAMypB,GACjD,IACIzlC,EADA4sC,EAAalyC,KAAKmzC,eAEtB,IAAK7tC,EAAI,EAAGA,EAAI1B,IAAS0B,EACvB4sC,GAAclyC,KAAKy0C,eAAenvC,EAAGkqC,GAEvC,IAAKlqC,EAAI1B,EAAO0B,EAAI1B,EAAQmtB,IAASzrB,EAAG,CACtC,MAAMwsC,EAAgB9xC,KAAKy0C,eAAenvC,EAAGkqC,GACvClqB,EAAM+tB,EAAK/tC,GACXq7B,EAAa,CACjBv2B,EAAGkqC,EAAUt0C,KAAKy1B,QAClBprB,EAAGkqC,EAAUv0C,KAAK01B,QAClBwc,aACAC,SAAUD,EAAaJ,EACvBA,gBACAkB,cACAD,eAEEnD,IACFjP,EAAW5iC,QAAUgtC,GAAiB/qC,KAAKoqC,0BAA0B9kC,EAAGggB,EAAIsb,OAAS,SAAWtf,IAElG4wB,GAAcJ,EACd9xC,KAAKowC,cAAc9qB,EAAKhgB,EAAGq7B,EAAYrf,GAEzCthB,KAAK6vC,oBAAoB9E,EAAezpB,EAAMquB,GAEhD,iBACE,MAAM7e,EAAO9wB,KAAKykC,YACZiQ,EAAW5jB,EAAKp0B,KACtB,IACI4I,EADA0uC,EAAQ,EAEZ,IAAK1uC,EAAI,EAAGA,EAAIovC,EAASt2C,OAAQkH,IAAK,CACpC,MAAMhH,EAAQwyB,EAAK0U,QAAQlgC,GACb,OAAVhH,GAAmB6L,MAAM7L,KAAU0B,KAAK7D,MAAM00C,kBAAkBvrC,IAAOovC,EAASpvC,GAAGygC,SACrFiO,GAASzrC,KAAKgC,IAAIjM,IAGtB,OAAO01C,EAET,uBAAuB11C,GACrB,MAAM01C,EAAQh0C,KAAKykC,YAAYuP,MAC/B,OAAIA,EAAQ,IAAM7pC,MAAM7L,GACfkK,GAAOD,KAAKgC,IAAIjM,GAAS01C,GAE3B,EAET,iBAAiBz1C,GACf,MAAMuyB,EAAO9wB,KAAKykC,YACZtoC,EAAQ6D,KAAK7D,MACbU,EAASV,EAAMO,KAAKG,QAAU,GAC9ByB,EAAQ06B,GAAalI,EAAK0U,QAAQjnC,GAAQpC,EAAM4B,QAAQy6B,QAC9D,MAAO,CACLt6B,MAAOrB,EAAO0B,IAAU,GACxBD,SAGJ,kBAAkB+0C,GAChB,IAAIvoC,EAAM,EACV,MAAM3O,EAAQ6D,KAAK7D,MACnB,IAAImJ,EAAGK,EAAMmrB,EAAM0T,EAAYzmC,EAC/B,IAAKs1C,EACH,IAAK/tC,EAAI,EAAGK,EAAOxJ,EAAMO,KAAKI,SAASsB,OAAQkH,EAAIK,IAAQL,EACzD,GAAInJ,EAAM+2C,iBAAiB5tC,GAAI,CAC7BwrB,EAAO30B,EAAM4rC,eAAeziC,GAC5B+tC,EAAOviB,EAAKp0B,KACZ8nC,EAAa1T,EAAK0T,WAClB,MAIN,IAAK6O,EACH,OAAO,EAET,IAAK/tC,EAAI,EAAGK,EAAO0tC,EAAKj1C,OAAQkH,EAAIK,IAAQL,EAC1CvH,EAAUymC,EAAW4F,0BAA0B9kC,GACnB,UAAxBvH,EAAQ42C,cACV7pC,EAAMvC,KAAKuC,IAAIA,EAAK/M,EAAQ8nB,aAAe,EAAG9nB,EAAQ62C,kBAAoB,IAG9E,OAAO9pC,EAET,aAAauoC,GACX,IAAIvoC,EAAM,EACV,IAAK,IAAIxF,EAAI,EAAGK,EAAO0tC,EAAKj1C,OAAQkH,EAAIK,IAAQL,EAAG,CACjD,MAAMvH,EAAUiC,KAAKoqC,0BAA0B9kC,GAC/CwF,EAAMvC,KAAKuC,IAAIA,EAAK/M,EAAQ2zC,QAAU,EAAG3zC,EAAQ82C,aAAe,GAElE,OAAO/pC,EAET,qBAAqBhF,GACnB,IAAIgvC,EAAmB,EACvB,IAAK,IAAIxvC,EAAI,EAAGA,EAAIQ,IAAgBR,EAC9BtF,KAAK7D,MAAM+2C,iBAAiB5tC,KAC9BwvC,GAAoB90C,KAAK2zC,eAAeruC,IAG5C,OAAOwvC,EAET,eAAehvC,GACb,OAAOyC,KAAKuC,IAAIjG,EAAe7E,KAAK7D,MAAMO,KAAKI,SAASgJ,GAAckZ,OAAQ,GAAI,GAEpF,gCACE,OAAOhf,KAAKk0C,qBAAqBl0C,KAAK7D,MAAMO,KAAKI,SAASsB,SAAW,GAGzE,GAAmB2D,GAAK,WACxB,GAAmB8gB,SAAW,CAC5BslB,oBAAoB,EACpBmC,gBAAiB,MACjBlqB,UAAW,CACT+zB,eAAe,EACfK,cAAc,GAEhBzT,WAAY,CACVN,QAAS,CACPzhC,KAAM,SACN2hC,WAAY,CAAC,gBAAiB,WAAY,cAAe,cAAe,aAAc,IAAK,IAAK,SAAU,cAAe,aAG7HoR,OAAQ,MACR/sB,SAAU,EACV8sB,cAAe,IACf7sB,OAAQ,OACRquB,QAAS,EACTlyB,UAAW,KAEb,GAAmBsO,YAAc,CAC/B5M,YAAcX,GAAkB,YAATA,EACvBa,WAAab,GAAkB,YAATA,GAExB,GAAmBxC,UAAY,CAC7BsX,YAAa,EACbx3B,QAAS,CACPs1C,OAAQ,CACNl4C,OAAQ,CACN,eAAeV,GACb,MAAMO,EAAOP,EAAMO,KACnB,GAAIA,EAAKG,OAAOuB,QAAU1B,EAAKI,SAASsB,OAAQ,CAC9C,MAAOvB,QAAQ,WAACkoB,IAAe5oB,EAAM44C,OAAOh3C,QAC5C,OAAOrB,EAAKG,OAAOM,IAAI,CAACe,EAAOoH,KAC7B,MAAMwrB,EAAO30B,EAAM4rC,eAAe,GAC5BnmC,EAAQkvB,EAAK0T,WAAWzP,SAASzvB,GACvC,MAAO,CACL6hB,KAAMjpB,EACN+pB,UAAWrmB,EAAMye,gBACjBqH,YAAa9lB,EAAM0e,YACnBqH,UAAW/lB,EAAMikB,YACjBd,WAAYA,EACZghB,QAAS5pC,EAAM00C,kBAAkBvrC,GACjC/G,MAAO+G,KAIb,MAAO,KAGX,QAAQ+C,EAAG2sC,EAAYD,GACrBA,EAAO54C,MAAM84C,qBAAqBD,EAAWz2C,OAC7Cw2C,EAAO54C,MAAMC,WAGjB02C,QAAS,CACPvV,UAAW,CACT,QACE,MAAO,IAET,MAAM2X,GACJ,IAAIC,EAAYD,EAAYh3C,MAC5B,MAAMI,EAAQ,KAAO42C,EAAYE,eAOjC,OANI9wC,EAAQ6wC,IACVA,EAAYA,EAAUpyC,QACtBoyC,EAAU,IAAM72C,GAEhB62C,GAAa72C,EAER62C,OAOjB,MAAM,WAAuB,GAC3B,aACEn1C,KAAK0mC,qBAAsB,EAC3B1mC,KAAK2mC,oBAAqB,EAC1B2I,MAAMxI,aAER,OAAOxlB,GACL,MAAMwP,EAAO9wB,KAAKykC,aACXlnC,QAASiqB,EAAM9qB,KAAM40B,EAAS,GAAE,SAAE+jB,GAAYvkB,EAC/CwkB,EAAqBt1C,KAAK7D,MAAM6uC,oBACtC,IAAI,MAACpnC,EAAK,MAAEmtB,GAASwkB,GAAgCzkB,EAAMQ,EAAQgkB,GACnEt1C,KAAKwmC,WAAa5iC,EAClB5D,KAAKymC,WAAa1V,EACdykB,GAAmB1kB,KACrBltB,EAAQ,EACRmtB,EAAQO,EAAOlzB,QAEjBopB,EAAK7nB,OAASK,KAAK7D,MACnBqrB,EAAK4U,cAAgBp8B,KAAKzB,MAC1BipB,EAAKiuB,aAAeJ,EAASI,WAC7BjuB,EAAK8J,OAASA,EACd,MAAMvzB,EAAUiC,KAAKmqC,6BAA6B7oB,GAC7CthB,KAAKjC,QAAQikB,WAChBjkB,EAAQ8nB,YAAc,GAExB9nB,EAAQu8B,QAAUt6B,KAAKjC,QAAQu8B,QAC/Bt6B,KAAKowC,cAAc5oB,OAAMzrB,EAAW,CAClC25C,UAAWJ,EACXv3C,WACCujB,GACHthB,KAAK2rC,eAAera,EAAQ1tB,EAAOmtB,EAAOzP,GAE5C,eAAegQ,EAAQ1tB,EAAOmtB,EAAOzP,GACnC,MAAMkuB,EAAiB,UAATluB,GACR,OAAC0P,EAAM,OAAEoT,EAAM,SAAE4B,EAAQ,SAAEqP,GAAYr1C,KAAKykC,YAC5CkL,EAAY3vC,KAAKoqC,0BAA0BxmC,EAAO0d,GAClDypB,EAAgB/qC,KAAKkrC,iBAAiByE,GACtCC,EAAiB5vC,KAAK4vC,eAAetuB,EAAMypB,GAC3CpG,EAAQ3T,EAAO4T,KACfC,EAAQT,EAAOQ,MACf,SAAC7Q,EAAQ,QAAEuG,GAAWt6B,KAAKjC,QAC3B43C,EAAe1rC,EAAS8pB,GAAYA,EAAW10B,OAAOsJ,kBACtDitC,EAAe51C,KAAK7D,MAAM6uC,qBAAuBwE,GAAkB,SAATluB,EAChE,IAAIu0B,EAAajyC,EAAQ,GAAK5D,KAAK8pC,UAAUlmC,EAAQ,GACrD,IAAK,IAAI0B,EAAI1B,EAAO0B,EAAI1B,EAAQmtB,IAASzrB,EAAG,CAC1C,MAAM0gB,EAAQsL,EAAOhsB,GACf4rB,EAASlxB,KAAK8pC,UAAUxkC,GACxBq7B,EAAaiV,EAAe5vB,EAAQ,GACpC8vB,EAAWzxC,EAAc6sB,EAAO2T,IAChC3R,EAASyN,EAAWgE,GAAS3T,EAAO2b,iBAAiBzb,EAAOyT,GAAQr/B,GACpE6tB,EAASwN,EAAWkE,GAAS2K,GAASsG,EAAW1R,EAAOqL,eAAiBrL,EAAOuI,iBAAiB3G,EAAWhmC,KAAK8iC,WAAWsB,EAAQlT,EAAQ8U,GAAY9U,EAAO2T,GAAQv/B,GAC7Kq7B,EAAWpP,KAAOpnB,MAAM+oB,IAAW/oB,MAAMgpB,IAAW2iB,EACpDnV,EAAWlF,KAAOn2B,EAAI,GAAMiD,KAAKgC,IAAI2mB,EAAOyT,GAASkR,EAAWlR,IAAWgR,EACvErb,IACFqG,EAAWzP,OAASA,EACpByP,EAAW2E,IAAM+P,EAAS34C,KAAK4I,IAE7BsqC,IACFjP,EAAW5iC,QAAUgtC,GAAiB/qC,KAAKoqC,0BAA0B9kC,EAAG0gB,EAAM4a,OAAS,SAAWtf,IAE/Fs0B,GACH51C,KAAKowC,cAAcpqB,EAAO1gB,EAAGq7B,EAAYrf,GAE3Cu0B,EAAa3kB,EAEflxB,KAAK6vC,oBAAoB9E,EAAezpB,EAAMquB,GAEhD,iBACE,MAAM7e,EAAO9wB,KAAKykC,YACZlnC,EAAUuzB,EAAKvzB,QACfw4C,EAASx4C,EAAQQ,SAAWR,EAAQQ,QAAQ8nB,aAAe,EAC3DnpB,EAAOo0B,EAAKp0B,MAAQ,GAC1B,IAAKA,EAAK0B,OACR,OAAO23C,EAET,MAAMrkB,EAAah1B,EAAK,GAAGuL,KAAKjI,KAAKoqC,0BAA0B,IACzD4L,EAAYt5C,EAAKA,EAAK0B,OAAS,GAAG6J,KAAKjI,KAAKoqC,0BAA0B1tC,EAAK0B,OAAS,IAC1F,OAAOmK,KAAKuC,IAAIirC,EAAQrkB,EAAYskB,GAAa,EAEnD,OACE,MAAMllB,EAAO9wB,KAAKykC,YAClB3T,EAAKvzB,QAAQ04C,oBAAoBj2C,KAAK7D,MAAM+tC,UAAWpZ,EAAKE,OAAO4T,MACnE0K,MAAMpR,QAoBV,SAASqX,GAAgCzkB,EAAMQ,EAAQgkB,GACrD,MAAMY,EAAa5kB,EAAOlzB,OAC1B,IAAIwF,EAAQ,EACRmtB,EAAQmlB,EACZ,GAAIplB,EAAK+X,QAAS,CAChB,MAAM,OAAC7X,EAAM,QAAEwU,GAAW1U,EACpB8T,EAAO5T,EAAO4T,MACd,IAAC/5B,EAAG,IAAEC,EAAG,WAAE64B,EAAU,WAAEC,GAAc5S,EAAO0S,gBAC9CC,IACF//B,EAAQ8I,GAAYnE,KAAKsC,IACvB0gB,GAAaia,EAASxU,EAAO4T,KAAM/5B,GAAKygB,GACxCgqB,EAAqBY,EAAa3qB,GAAa+F,EAAQsT,EAAM5T,EAAO2b,iBAAiB9hC,IAAMygB,IAC7F,EAAG4qB,EAAa,IAGhBnlB,EADE6S,EACMl3B,GAAYnE,KAAKuC,IACvBygB,GAAaia,EAASxU,EAAO4T,KAAM95B,GAAKugB,GAAK,EAC7CiqB,EAAqB,EAAI/pB,GAAa+F,EAAQsT,EAAM5T,EAAO2b,iBAAiB7hC,IAAMugB,GAAK,GACzFznB,EAAOsyC,GAActyC,EAEbsyC,EAAatyC,EAGzB,MAAO,CAACA,QAAOmtB,SAEjB,SAASykB,GAAmB1kB,GAC1B,MAAM,OAACwR,EAAM,OAAEC,EAAM,aAAE4T,GAAgBrlB,EACjCslB,EAAY,CAChBC,KAAM/T,EAAOz3B,IACbyrC,KAAMhU,EAAOx3B,IACbyrC,KAAMhU,EAAO13B,IACb2rC,KAAMjU,EAAOz3B,KAEf,IAAKqrC,EAEH,OADArlB,EAAKqlB,aAAeC,GACb,EAET,MAAMK,EAAUN,EAAaE,OAAS/T,EAAOz3B,KAC1CsrC,EAAaG,OAAShU,EAAOx3B,KAC7BqrC,EAAaI,OAAShU,EAAO13B,KAC7BsrC,EAAaK,OAASjU,EAAOz3B,IAEhC,OADApN,OAAOC,OAAOw4C,EAAcC,GACrBK,EA3DT,GAAe10C,GAAK,OACpB,GAAe8gB,SAAW,CACxBslB,mBAAoB,OACpBmC,gBAAiB,QACjBtoB,UAAU,EACV+R,UAAU,GAEZ,GAAepU,UAAY,CACzBoC,OAAQ,CACN0vB,QAAS,CACPzyC,KAAM,YAER4yC,QAAS,CACP5yC,KAAM,YAiDZ,MAAM,WAA4B,GAChC,YAAY7C,EAAO2J,GACjBwpC,MAAMnzC,EAAO2J,GACb9F,KAAK+yC,iBAAch3C,EACnBiE,KAAKgzC,iBAAcj3C,EAErB,iBAAiBwC,GACf,MAAMuyB,EAAO9wB,KAAKykC,YACZtoC,EAAQ6D,KAAK7D,MACbU,EAASV,EAAMO,KAAKG,QAAU,GAC9ByB,EAAQ06B,GAAalI,EAAK0U,QAAQjnC,GAAO0S,EAAG9U,EAAM4B,QAAQy6B,QAChE,MAAO,CACLt6B,MAAOrB,EAAO0B,IAAU,GACxBD,SAGJ,gBAAgBwyB,EAAMp0B,EAAMkH,EAAOmtB,GACjC,OAAOF,GAA4B6lB,KAAK12C,KAAjC6wB,CAAuCC,EAAMp0B,EAAMkH,EAAOmtB,GAEnE,OAAOzP,GACL,MAAM+xB,EAAOrzC,KAAKykC,YAAY/nC,KAC9BsD,KAAK22C,gBACL32C,KAAK2rC,eAAe0H,EAAM,EAAGA,EAAKj1C,OAAQkjB,GAE5C,YACE,MAAMwP,EAAO9wB,KAAKykC,YACZt7B,EAAQ,CAAC0B,IAAKxL,OAAOsJ,kBAAmBmC,IAAKzL,OAAOwkC,mBAY1D,OAXA/S,EAAKp0B,KAAKuvB,QAAQ,CAAC6I,EAASv2B,KAC1B,MAAM2yB,EAASlxB,KAAK8pC,UAAUvrC,GAAO0S,GAChC9G,MAAM+mB,IAAWlxB,KAAK7D,MAAM00C,kBAAkBtyC,KAC7C2yB,EAAS/nB,EAAM0B,MACjB1B,EAAM0B,IAAMqmB,GAEVA,EAAS/nB,EAAM2B,MACjB3B,EAAM2B,IAAMomB,MAIX/nB,EAET,gBACE,MAAMhN,EAAQ6D,KAAK7D,MACb+tC,EAAY/tC,EAAM+tC,UAClB9iB,EAAOjrB,EAAM4B,QACb64C,EAAUruC,KAAKsC,IAAIq/B,EAAUlmC,MAAQkmC,EAAUnmC,KAAMmmC,EAAU9jB,OAAS8jB,EAAU/jB,KAClF6sB,EAAczqC,KAAKuC,IAAI8rC,EAAU,EAAG,GACpC7D,EAAcxqC,KAAKuC,IAAIsc,EAAKyvB,iBAAoB7D,EAAc,IAAQ5rB,EAAqB,iBAAI,EAAG,GAClG0sB,GAAgBd,EAAcD,GAAe52C,EAAM26C,yBACzD92C,KAAKgzC,YAAcA,EAAec,EAAe9zC,KAAKzB,MACtDyB,KAAK+yC,YAAc/yC,KAAKgzC,YAAcc,EAExC,eAAeT,EAAMzvC,EAAOmtB,EAAOzP,GACjC,MAAMkuB,EAAiB,UAATluB,EACRnlB,EAAQ6D,KAAK7D,MACbirB,EAAOjrB,EAAM4B,QACbs2C,EAAgBjtB,EAAKhH,UACrB0B,EAAQ9hB,KAAKykC,YAAYqD,OACzBwM,EAAUxyB,EAAMi1B,QAChBxC,EAAUzyB,EAAMk1B,QAChBC,EAAoBn1B,EAAMo1B,cAAc,GAAK,GAAM5uC,EACzD,IACIhD,EADAqG,EAAQsrC,EAEZ,MAAME,EAAe,IAAMn3C,KAAKo3C,uBAChC,IAAK9xC,EAAI,EAAGA,EAAI1B,IAAS0B,EACvBqG,GAAS3L,KAAKq3C,cAAc/xC,EAAGgc,EAAM61B,GAEvC,IAAK7xC,EAAI1B,EAAO0B,EAAI1B,EAAQmtB,EAAOzrB,IAAK,CACtC,MAAMggB,EAAM+tB,EAAK/tC,GACjB,IAAI4sC,EAAavmC,EACbwmC,EAAWxmC,EAAQ3L,KAAKq3C,cAAc/xC,EAAGgc,EAAM61B,GAC/CnE,EAAc72C,EAAM00C,kBAAkBvrC,GAAKwc,EAAMw1B,8BAA8Bt3C,KAAK8pC,UAAUxkC,GAAG2L,GAAK,EAC1GtF,EAAQwmC,EACJ3C,IACE6E,EAAcG,eAChBxB,EAAc,GAEZqB,EAAcF,gBAChBjC,EAAaC,EAAW8E,IAG5B,MAAMtW,EAAa,CACjBv2B,EAAGkqC,EACHjqC,EAAGkqC,EACHxB,YAAa,EACbC,cACAd,aACAC,WACAp0C,QAASiC,KAAKoqC,0BAA0B9kC,EAAGggB,EAAIsb,OAAS,SAAWtf,IAErEthB,KAAKowC,cAAc9qB,EAAKhgB,EAAGq7B,EAAYrf,IAG3C,uBACE,MAAMwP,EAAO9wB,KAAKykC,YAClB,IAAI1T,EAAQ,EAMZ,OALAD,EAAKp0B,KAAKuvB,QAAQ,CAAC6I,EAASv2B,MACrB4L,MAAMnK,KAAK8pC,UAAUvrC,GAAO0S,IAAMjR,KAAK7D,MAAM00C,kBAAkBtyC,IAClEwyB,MAGGA,EAET,cAAcxyB,EAAO+iB,EAAM61B,GACzB,OAAOn3C,KAAK7D,MAAM00C,kBAAkBtyC,GAChCwM,EAAU/K,KAAKoqC,0BAA0B7rC,EAAO+iB,GAAM3V,OAASwrC,GAC/D,GAGR,GAAoBp1C,GAAK,YACzB,GAAoB8gB,SAAW,CAC7BynB,gBAAiB,MACjBlqB,UAAW,CACT+zB,eAAe,EACfK,cAAc,GAEhBzT,WAAY,CACVN,QAAS,CACPzhC,KAAM,SACN2hC,WAAY,CAAC,IAAK,IAAK,aAAc,WAAY,cAAe,iBAGpEvf,UAAW,IACX8wB,WAAY,GAEd,GAAoBvyB,UAAY,CAC9BsX,YAAa,EACbx3B,QAAS,CACPs1C,OAAQ,CACNl4C,OAAQ,CACN,eAAeV,GACb,MAAMO,EAAOP,EAAMO,KACnB,GAAIA,EAAKG,OAAOuB,QAAU1B,EAAKI,SAASsB,OAAQ,CAC9C,MAAOvB,QAAQ,WAACkoB,IAAe5oB,EAAM44C,OAAOh3C,QAC5C,OAAOrB,EAAKG,OAAOM,IAAI,CAACe,EAAOoH,KAC7B,MAAMwrB,EAAO30B,EAAM4rC,eAAe,GAC5BnmC,EAAQkvB,EAAK0T,WAAWzP,SAASzvB,GACvC,MAAO,CACL6hB,KAAMjpB,EACN+pB,UAAWrmB,EAAMye,gBACjBqH,YAAa9lB,EAAM0e,YACnBqH,UAAW/lB,EAAMikB,YACjBd,WAAYA,EACZghB,QAAS5pC,EAAM00C,kBAAkBvrC,GACjC/G,MAAO+G,KAIb,MAAO,KAGX,QAAQ+C,EAAG2sC,EAAYD,GACrBA,EAAO54C,MAAM84C,qBAAqBD,EAAWz2C,OAC7Cw2C,EAAO54C,MAAMC,WAGjB02C,QAAS,CACPvV,UAAW,CACT,QACE,MAAO,IAET,MAAMzhC,GACJ,OAAOA,EAAQK,MAAMO,KAAKG,OAAOf,EAAQupC,WAAa,KAAOvpC,EAAQs5C,mBAK7ErzB,OAAQ,CACN9Q,EAAG,CACDjS,KAAM,eACNu4C,WAAY,CACVC,SAAS,GAEX7sB,aAAa,EACbgnB,KAAM,CACJ8F,UAAU,GAEZC,YAAa,CACXF,SAAS,GAEXtF,WAAY,KAKlB,MAAMyF,WAAsB,IAE5BA,GAAc51C,GAAK,MACnB41C,GAAc90B,SAAW,CACvBkvB,OAAQ,EACR/sB,SAAU,EACV8sB,cAAe,IACf7sB,OAAQ,QAGV,MAAM,WAAwB,GAC5B,iBAAiB1mB,GACf,MAAM6lC,EAASpkC,KAAKykC,YAAYL,OAC1BlT,EAASlxB,KAAK8pC,UAAUvrC,GAC9B,MAAO,CACLL,MAAOkmC,EAAO8E,YAAY3qC,GAC1BD,MAAO,GAAK8lC,EAAO2F,iBAAiB7Y,EAAOkT,EAAOQ,QAGtD,gBAAgB9T,EAAMp0B,EAAMkH,EAAOmtB,GACjC,OAAOF,GAA4B6lB,KAAK12C,KAAjC6wB,CAAuCC,EAAMp0B,EAAMkH,EAAOmtB,GAEnE,OAAOzP,GACL,MAAMwP,EAAO9wB,KAAKykC,YACZjd,EAAOsJ,EAAKvzB,QACZ+zB,EAASR,EAAKp0B,MAAQ,GACtBG,EAASi0B,EAAKE,OAAOkY,YAE3B,GADA1hB,EAAK8J,OAASA,EACD,WAAThQ,EAAmB,CACrB,MAAMvjB,EAAUiC,KAAKmqC,6BAA6B7oB,GAC7CthB,KAAKjC,QAAQikB,WAChBjkB,EAAQ8nB,YAAc,GAExB,MAAM8a,EAAa,CACjB/E,OAAO,EACPG,UAAWl/B,EAAOuB,SAAWkzB,EAAOlzB,OACpCL,WAEFiC,KAAKowC,cAAc5oB,OAAMzrB,EAAW4kC,EAAYrf,GAElDthB,KAAK2rC,eAAera,EAAQ,EAAGA,EAAOlzB,OAAQkjB,GAEhD,eAAegQ,EAAQ1tB,EAAOmtB,EAAOzP,GACnC,MAAMQ,EAAQ9hB,KAAKykC,YAAYqD,OACzB0H,EAAiB,UAATluB,EACd,IAAK,IAAIhc,EAAI1B,EAAO0B,EAAI1B,EAAQmtB,EAAOzrB,IAAK,CAC1C,MAAM0gB,EAAQsL,EAAOhsB,GACfvH,EAAUiC,KAAKoqC,0BAA0B9kC,EAAG0gB,EAAM4a,OAAS,SAAWtf,GACtEs2B,EAAgB91B,EAAM+1B,yBAAyBvyC,EAAGtF,KAAK8pC,UAAUxkC,GAAG2L,GACpE7G,EAAIolC,EAAQ1tB,EAAMi1B,QAAUa,EAAcxtC,EAC1CC,EAAImlC,EAAQ1tB,EAAMk1B,QAAUY,EAAcvtC,EAC1Cs2B,EAAa,CACjBv2B,IACAC,IACAsB,MAAOisC,EAAcjsC,MACrB4lB,KAAMpnB,MAAMC,IAAMD,MAAME,GACxBtM,WAEFiC,KAAKowC,cAAcpqB,EAAO1gB,EAAGq7B,EAAYrf,KAI/C,GAAgBvf,GAAK,QACrB,GAAgB8gB,SAAW,CACzBslB,mBAAoB,OACpBmC,gBAAiB,QACjBlpB,UAAW,IACXY,UAAU,EACVtB,SAAU,CACR8G,KAAM,CACJ5B,KAAM,WAIZ,GAAgBjG,UAAY,CAC1BsX,YAAa,EACblV,OAAQ,CACN9Q,EAAG,CACDjS,KAAM,kBAKZ,MAAM84C,WAA0B,IAEhCA,GAAkB/1C,GAAK,UACvB+1C,GAAkBj1B,SAAW,CAC3Bb,UAAU,EACV4D,MAAM,GAERkyB,GAAkBn4B,UAAY,CAC5B0B,YAAa,CACXC,KAAM,SAER7hB,QAAS,CACPqzC,QAAS,CACPvV,UAAW,CACT,QACE,MAAO,IAET,MAAMr1B,GACJ,MAAO,IAAMA,EAAKhK,MAAQ,KAAOgK,EAAKktC,eAAiB,QAK/DrzB,OAAQ,CACN3X,EAAG,CACDpL,KAAM,UAERqL,EAAG,CACDrL,KAAM,YAiBZ,SAAS,KACP,MAAM,IAAIiC,MAAM,mFAElB,MAAM82C,GACJ,YAAYh6C,GACViC,KAAKjC,QAAUA,GAAW,GAE5B,UACE,OAAO,KAET,MAAMO,EAAO46B,GACX,OAAO,KAET,OAAO8e,EAAW9e,GAChB,OAAO,KAET,IAAI8e,EAAWC,EAAQC,GACrB,OAAO,KAET,KAAKnwC,EAAGC,EAAGkwC,GACT,OAAO,KAET,QAAQF,EAAWE,EAAMC,GACvB,OAAO,KAET,MAAMH,EAAWE,GACf,OAAO,MAGXH,GAAYtqB,SAAW,SAAS2qB,GAC9B16C,OAAOC,OAAOo6C,GAAYj1C,UAAWs1C,IAEvC,IAAIC,GAAW,CACbC,MAAOP,IAGT,SAASQ,GAAaC,EAAS5T,EAAMtmC,EAAOijB,GAC1C,MAAM,WAACijB,EAAU,KAAE9nC,EAAI,QAAEmsC,GAAW2P,EAC9BxnB,EAASwT,EAAWC,YAAYzT,OACtC,GAAIA,GAAU4T,IAAS5T,EAAO4T,MAAiB,MAATA,GAAgBiE,GAAWnsC,EAAK0B,OAAQ,CAC5E,MAAMq6C,EAAeznB,EAAO0nB,eAAiBltB,GAAgBD,GAC7D,IAAKhK,EACH,OAAOk3B,EAAa/7C,EAAMkoC,EAAMtmC,GAC3B,GAAIkmC,EAAW+B,eAAgB,CACpC,MAAMvR,EAAKt4B,EAAK,GACVyM,EAA+B,oBAAhB6rB,EAAG2jB,UAA2B3jB,EAAG2jB,SAAS/T,GAC/D,GAAIz7B,EAAO,CACT,MAAMvF,EAAQ60C,EAAa/7C,EAAMkoC,EAAMtmC,EAAQ6K,GACzCtF,EAAM40C,EAAa/7C,EAAMkoC,EAAMtmC,EAAQ6K,GAC7C,MAAO,CAACmiB,GAAI1nB,EAAM0nB,GAAID,GAAIxnB,EAAIwnB,MAIpC,MAAO,CAACC,GAAI,EAAGD,GAAI3uB,EAAK0B,OAAS,GAEnC,SAASw6C,GAAyBz8C,EAAOyoC,EAAMiU,EAAUv4C,EAASihB,GAChE,MAAMqhB,EAAWzmC,EAAM28C,+BACjBx6C,EAAQu6C,EAASjU,GACvB,IAAK,IAAIt/B,EAAI,EAAGK,EAAOi9B,EAASxkC,OAAQkH,EAAIK,IAAQL,EAAG,CACrD,MAAM,MAAC/G,EAAK,KAAE7B,GAAQkmC,EAASt9B,IACzB,GAACgmB,EAAE,GAAED,GAAMktB,GAAa3V,EAASt9B,GAAIs/B,EAAMtmC,EAAOijB,GACxD,IAAK,IAAIjE,EAAIgO,EAAIhO,GAAK+N,IAAM/N,EAAG,CAC7B,MAAMwX,EAAUp4B,EAAK4gB,GAChBwX,EAAQvD,MACXjxB,EAAQw0B,EAASv2B,EAAO+e,KAKhC,SAASy7B,GAAyBnU,GAChC,MAAMoU,GAA8B,IAAvBpU,EAAKr+B,QAAQ,KACpB0yC,GAA8B,IAAvBrU,EAAKr+B,QAAQ,KAC1B,OAAO,SAASwF,EAAKC,GACnB,MAAMktC,EAASF,EAAOzwC,KAAKgC,IAAIwB,EAAI3B,EAAI4B,EAAI5B,GAAK,EAC1C+uC,EAASF,EAAO1wC,KAAKgC,IAAIwB,EAAI1B,EAAI2B,EAAI3B,GAAK,EAChD,OAAO9B,KAAKuB,KAAKvB,KAAKiB,IAAI0vC,EAAQ,GAAK3wC,KAAKiB,IAAI2vC,EAAQ,KAG5D,SAASC,GAAkBj9C,EAAO08C,EAAUjU,EAAMyU,EAAkB73B,GAClE,MAAMiL,EAAQ,GACd,IAAKjL,IAAqBrlB,EAAMm9C,cAAcT,GAC5C,OAAOpsB,EAET,MAAM8sB,EAAiB,SAASzkB,EAAShvB,EAAcvH,IAChDijB,GAAqBuE,GAAe+O,EAAS34B,EAAM+tC,UAAW,KAG/DpV,EAAQ0kB,QAAQX,EAASzuC,EAAGyuC,EAASxuC,EAAGgvC,IAC1C5sB,EAAMhvB,KAAK,CAACq3B,UAAShvB,eAAcvH,WAIvC,OADAq6C,GAAyBz8C,EAAOyoC,EAAMiU,EAAUU,GAAgB,GACzD9sB,EAET,SAASgtB,GAAsBt9C,EAAO08C,EAAUjU,EAAMyU,GACpD,IAAI5sB,EAAQ,GACZ,SAAS8sB,EAAezkB,EAAShvB,EAAcvH,GAC7C,MAAM,WAAC2zC,EAAU,SAAEC,GAAYrd,EAAQ4kB,SAAS,CAAC,aAAc,YAAaL,IACtE,MAAC1tC,GAASN,GAAkBypB,EAAS,CAAC1qB,EAAGyuC,EAASzuC,EAAGC,EAAGwuC,EAASxuC,IACnE8B,GAAcR,EAAOumC,EAAYC,IACnC1lB,EAAMhvB,KAAK,CAACq3B,UAAShvB,eAAcvH,UAIvC,OADAq6C,GAAyBz8C,EAAOyoC,EAAMiU,EAAUU,GACzC9sB,EAET,SAASktB,GAAyBx9C,EAAO08C,EAAUjU,EAAMrjB,EAAW83B,EAAkB73B,GACpF,IAAIiL,EAAQ,GACZ,MAAMmtB,EAAiBb,GAAyBnU,GAChD,IAAIiV,EAAcx6C,OAAOsJ,kBACzB,SAAS4wC,EAAezkB,EAAShvB,EAAcvH,GAC7C,MAAMi7C,EAAU1kB,EAAQ0kB,QAAQX,EAASzuC,EAAGyuC,EAASxuC,EAAGgvC,GACxD,GAAI93B,IAAci4B,EAChB,OAEF,MAAMrJ,EAASrb,EAAQglB,eAAeT,GAChCU,IAAgBv4B,GAAoBrlB,EAAMm9C,cAAcnJ,GAC9D,IAAK4J,IAAgBP,EACnB,OAEF,MAAM3tC,EAAW+tC,EAAef,EAAU1I,GACtCtkC,EAAWguC,GACbptB,EAAQ,CAAC,CAACqI,UAAShvB,eAAcvH,UACjCs7C,EAAchuC,GACLA,IAAaguC,GACtBptB,EAAMhvB,KAAK,CAACq3B,UAAShvB,eAAcvH,UAIvC,OADAq6C,GAAyBz8C,EAAOyoC,EAAMiU,EAAUU,GACzC9sB,EAET,SAASutB,GAAgB79C,EAAO08C,EAAUjU,EAAMrjB,EAAW83B,EAAkB73B,GAC3E,OAAKA,GAAqBrlB,EAAMm9C,cAAcT,GAG9B,MAATjU,GAAiBrjB,EAEpBo4B,GAAyBx9C,EAAO08C,EAAUjU,EAAMrjB,EAAW83B,EAAkB73B,GAD7Ei4B,GAAsBt9C,EAAO08C,EAAUjU,EAAMyU,GAHxC,GAMX,SAASY,GAAa99C,EAAO08C,EAAUjU,EAAMrjB,EAAW83B,GACtD,MAAM5sB,EAAQ,GACRytB,EAAuB,MAATtV,EAAe,WAAa,WAChD,IAAIuV,GAAiB,EAOrB,OANAvB,GAAyBz8C,EAAOyoC,EAAMiU,EAAU,CAAC/jB,EAAShvB,EAAcvH,KAClEu2B,EAAQolB,GAAarB,EAASjU,GAAOyU,KACvC5sB,EAAMhvB,KAAK,CAACq3B,UAAShvB,eAAcvH,UACnC47C,EAAiBA,GAAkBrlB,EAAQ0kB,QAAQX,EAASzuC,EAAGyuC,EAASxuC,EAAGgvC,MAG3E93B,IAAc44B,EACT,GAEF1tB,EAET,IAAI2tB,GAAc,CAChBxB,4BACAyB,MAAO,CACL,MAAMl+C,EAAOkM,EAAGtK,EAASs7C,GACvB,MAAMR,EAAW9iB,GAAoB1tB,EAAGlM,GAClCyoC,EAAO7mC,EAAQ6mC,MAAQ,IACvBpjB,EAAmBzjB,EAAQyjB,mBAAoB,EAC/CiL,EAAQ1uB,EAAQwjB,UAClB63B,GAAkBj9C,EAAO08C,EAAUjU,EAAMyU,EAAkB73B,GAC3Dw4B,GAAgB79C,EAAO08C,EAAUjU,GAAM,EAAOyU,EAAkB73B,GAC9Dd,EAAW,GACjB,OAAK+L,EAAMruB,QAGXjC,EAAM28C,+BAA+B7sB,QAAS6E,IAC5C,MAAMvyB,EAAQkuB,EAAM,GAAGluB,MACjBu2B,EAAUhE,EAAKp0B,KAAK6B,GACtBu2B,IAAYA,EAAQvD,MACtB7Q,EAASjjB,KAAK,CAACq3B,UAAShvB,aAAcgrB,EAAKvyB,MAAOA,YAG/CmiB,GATE,IAWX,QAAQvkB,EAAOkM,EAAGtK,EAASs7C,GACzB,MAAMR,EAAW9iB,GAAoB1tB,EAAGlM,GAClCyoC,EAAO7mC,EAAQ6mC,MAAQ,KACvBpjB,EAAmBzjB,EAAQyjB,mBAAoB,EACrD,IAAIiL,EAAQ1uB,EAAQwjB,UAChB63B,GAAkBj9C,EAAO08C,EAAUjU,EAAMyU,EAAkB73B,GAC7Dw4B,GAAgB79C,EAAO08C,EAAUjU,GAAM,EAAOyU,EAAkB73B,GAClE,GAAIiL,EAAMruB,OAAS,EAAG,CACpB,MAAM0H,EAAe2mB,EAAM,GAAG3mB,aACxBpJ,EAAOP,EAAM4rC,eAAejiC,GAAcpJ,KAChD+vB,EAAQ,GACR,IAAK,IAAInnB,EAAI,EAAGA,EAAI5I,EAAK0B,SAAUkH,EACjCmnB,EAAMhvB,KAAK,CAACq3B,QAASp4B,EAAK4I,GAAIQ,eAAcvH,MAAO+G,IAGvD,OAAOmnB,GAET,MAAMtwB,EAAOkM,EAAGtK,EAASs7C,GACvB,MAAMR,EAAW9iB,GAAoB1tB,EAAGlM,GAClCyoC,EAAO7mC,EAAQ6mC,MAAQ,KACvBpjB,EAAmBzjB,EAAQyjB,mBAAoB,EACrD,OAAO43B,GAAkBj9C,EAAO08C,EAAUjU,EAAMyU,EAAkB73B,IAEpE,QAAQrlB,EAAOkM,EAAGtK,EAASs7C,GACzB,MAAMR,EAAW9iB,GAAoB1tB,EAAGlM,GAClCyoC,EAAO7mC,EAAQ6mC,MAAQ,KACvBpjB,EAAmBzjB,EAAQyjB,mBAAoB,EACrD,OAAOw4B,GAAgB79C,EAAO08C,EAAUjU,EAAM7mC,EAAQwjB,UAAW83B,EAAkB73B,IAErF,EAAErlB,EAAOkM,EAAGtK,EAASs7C,GACnB,MAAMR,EAAW9iB,GAAoB1tB,EAAGlM,GACxC,OAAO89C,GAAa99C,EAAO08C,EAAU,IAAK96C,EAAQwjB,UAAW83B,IAE/D,EAAEl9C,EAAOkM,EAAGtK,EAASs7C,GACnB,MAAMR,EAAW9iB,GAAoB1tB,EAAGlM,GACxC,OAAO89C,GAAa99C,EAAO08C,EAAU,IAAK96C,EAAQwjB,UAAW83B,MAKnE,MAAMiB,GAAmB,CAAC,OAAQ,MAAO,QAAS,UAClD,SAASC,GAAiB5vC,EAAOkuC,GAC/B,OAAOluC,EAAMslB,OAAOhhB,GAAKA,EAAE1H,MAAQsxC,GAErC,SAAS2B,GAA4B7vC,EAAOi6B,GAC1C,OAAOj6B,EAAMslB,OAAOhhB,IAA0C,IAArCqrC,GAAiB/zC,QAAQ0I,EAAE1H,MAAe0H,EAAE0mB,IAAIiP,OAASA,GAEpF,SAAS6V,GAAa9vC,EAAOtF,GAC3B,OAAOsF,EAAMZ,KAAK,CAAChC,EAAGC,KACpB,MAAMpC,EAAKP,EAAU2C,EAAID,EACnBlC,EAAKR,EAAU0C,EAAIC,EACzB,OAAOpC,EAAGoZ,SAAWnZ,EAAGmZ,OACtBpZ,EAAGrH,MAAQsH,EAAGtH,MACdqH,EAAGoZ,OAASnZ,EAAGmZ,SAGrB,SAAS07B,GAAUC,GACjB,MAAMC,EAAc,GACpB,IAAIt1C,EAAGK,EAAMgwB,EAAKpuB,EAAKw7B,EAAO8X,EAC9B,IAAKv1C,EAAI,EAAGK,GAAQg1C,GAAS,IAAIv8C,OAAQkH,EAAIK,IAAQL,EACnDqwB,EAAMglB,EAAMr1C,KACVuzC,SAAUtxC,EAAKxJ,SAAUglC,QAAO8X,cAAc,IAAMllB,GACtDilB,EAAYn9C,KAAK,CACfc,MAAO+G,EACPqwB,MACApuB,MACAinC,WAAY7Y,EAAI2Y,eAChBtvB,OAAQ2W,EAAI3W,OACZ+jB,MAAOA,GAAUx7B,EAAMw7B,EACvB8X,gBAGJ,OAAOD,EAET,SAASE,GAAYC,GACnB,MAAMhX,EAAS,GACf,IAAK,MAAMiX,KAAQD,EAAS,CAC1B,MAAM,MAAChY,EAAK,IAAEx7B,EAAG,YAAEszC,GAAeG,EAClC,IAAKjY,IAAUuX,GAAiB98C,SAAS+J,GACvC,SAEF,MAAMonB,EAASoV,EAAOhB,KAAWgB,EAAOhB,GAAS,CAAChS,MAAO,EAAGkqB,OAAQ,EAAGj8B,OAAQ,EAAG/W,KAAM,IACxF0mB,EAAOoC,QACPpC,EAAO3P,QAAU67B,EAEnB,OAAO9W,EAET,SAASmX,GAAcH,EAASI,GAC9B,MAAMpX,EAAS+W,GAAYC,IACrB,aAACK,EAAY,cAAEC,GAAiBF,EACtC,IAAI71C,EAAGK,EAAM21C,EACb,IAAKh2C,EAAI,EAAGK,EAAOo1C,EAAQ38C,OAAQkH,EAAIK,IAAQL,EAAG,CAChDg2C,EAASP,EAAQz1C,GACjB,MAAM,SAACi2C,GAAYD,EAAO3lB,IACpBoN,EAAQgB,EAAOuX,EAAOvY,OACtB3D,EAAS2D,GAASuY,EAAOT,YAAc9X,EAAM/jB,OAC/Cs8B,EAAO9M,YACT8M,EAAOl8C,MAAQggC,EAASA,EAASgc,EAAeG,GAAYJ,EAAOK,eACnEF,EAAOh8C,OAAS+7C,IAEhBC,EAAOl8C,MAAQg8C,EACfE,EAAOh8C,OAAS8/B,EAASA,EAASic,EAAgBE,GAAYJ,EAAOM,iBAGzE,OAAO1X,EAET,SAAS2X,GAAiBf,GACxB,MAAMC,EAAcF,GAAUC,GACxBY,EAAWd,GAAaG,EAAY3qB,OAAO+qB,GAAQA,EAAKrlB,IAAI4lB,WAAW,GACvEx3C,EAAO02C,GAAaF,GAAiBK,EAAa,SAAS,GAC3D52C,EAAQy2C,GAAaF,GAAiBK,EAAa,UACnDz0B,EAAMs0B,GAAaF,GAAiBK,EAAa,QAAQ,GACzDx0B,EAASq0B,GAAaF,GAAiBK,EAAa,WACpDe,EAAmBnB,GAA4BI,EAAa,KAC5DgB,EAAiBpB,GAA4BI,EAAa,KAChE,MAAO,CACLW,WACAM,WAAY93C,EAAKsoC,OAAOlmB,GACxB21B,eAAgB93C,EAAMqoC,OAAOuP,GAAgBvP,OAAOjmB,GAAQimB,OAAOsP,GACnEzR,UAAWqQ,GAAiBK,EAAa,aACzCmB,SAAUh4C,EAAKsoC,OAAOroC,GAAOqoC,OAAOuP,GACpCpN,WAAYroB,EAAIkmB,OAAOjmB,GAAQimB,OAAOsP,IAG1C,SAASK,GAAeC,EAAY/R,EAAWniC,EAAGC,GAChD,OAAOO,KAAKuC,IAAImxC,EAAWl0C,GAAImiC,EAAUniC,IAAMQ,KAAKuC,IAAImxC,EAAWj0C,GAAIkiC,EAAUliC,IAEnF,SAASk0C,GAAiBD,EAAYE,GACpCF,EAAW91B,IAAM5d,KAAKuC,IAAImxC,EAAW91B,IAAKg2B,EAAWh2B,KACrD81B,EAAWl4C,KAAOwE,KAAKuC,IAAImxC,EAAWl4C,KAAMo4C,EAAWp4C,MACvDk4C,EAAW71B,OAAS7d,KAAKuC,IAAImxC,EAAW71B,OAAQ+1B,EAAW/1B,QAC3D61B,EAAWj4C,MAAQuE,KAAKuC,IAAImxC,EAAWj4C,MAAOm4C,EAAWn4C,OAE3D,SAASo4C,GAAWlS,EAAWiR,EAAQG,EAAQvX,GAC7C,MAAM,IAACx8B,EAAG,IAAEouB,GAAO2lB,EACbW,EAAa/R,EAAU+R,WAC7B,IAAKz3C,EAAS+C,GAAM,CACd+zC,EAAOrzC,OACTiiC,EAAU3iC,IAAQ+zC,EAAOrzC,MAE3B,MAAM86B,EAAQgB,EAAOuX,EAAOvY,QAAU,CAAC96B,KAAM,EAAG8oB,MAAO,GACvDgS,EAAM96B,KAAOM,KAAKuC,IAAIi4B,EAAM96B,KAAMqzC,EAAO9M,WAAa7Y,EAAIr2B,OAASq2B,EAAIv2B,OACvEk8C,EAAOrzC,KAAO86B,EAAM96B,KAAO86B,EAAMhS,MACjCmZ,EAAU3iC,IAAQ+zC,EAAOrzC,KAEvB0tB,EAAI0mB,YACNH,GAAiBD,EAAYtmB,EAAI0mB,cAEnC,MAAMC,EAAW/zC,KAAKuC,IAAI,EAAGqwC,EAAOoB,WAAaP,GAAeC,EAAY/R,EAAW,OAAQ,UACzFsS,EAAYj0C,KAAKuC,IAAI,EAAGqwC,EAAOsB,YAAcT,GAAeC,EAAY/R,EAAW,MAAO,WAC1FwS,EAAeJ,IAAapS,EAAUx4B,EACtCirC,EAAgBH,IAActS,EAAU96B,EAG9C,OAFA86B,EAAUx4B,EAAI4qC,EACdpS,EAAU96B,EAAIotC,EACPlB,EAAO9M,WACV,CAACoO,KAAMF,EAAcG,MAAOF,GAC5B,CAACC,KAAMD,EAAeE,MAAOH,GAEnC,SAASI,GAAiB5S,GACxB,MAAM+R,EAAa/R,EAAU+R,WAC7B,SAASc,EAAUx1C,GACjB,MAAMqjB,EAASriB,KAAKuC,IAAImxC,EAAW10C,GAAO2iC,EAAU3iC,GAAM,GAE1D,OADA2iC,EAAU3iC,IAAQqjB,EACXA,EAETsf,EAAU7/B,GAAK0yC,EAAU,OACzB7S,EAAU9/B,GAAK2yC,EAAU,QACzBA,EAAU,SACVA,EAAU,UAEZ,SAASC,GAAWxO,EAAYtE,GAC9B,MAAM+R,EAAa/R,EAAU+R,WAC7B,SAASgB,EAAmB/nB,GAC1B,MAAMhP,EAAS,CAACniB,KAAM,EAAGoiB,IAAK,EAAGniB,MAAO,EAAGoiB,OAAQ,GAInD,OAHA8O,EAAUjJ,QAAS1kB,IACjB2e,EAAO3e,GAAOgB,KAAKuC,IAAIo/B,EAAU3iC,GAAM00C,EAAW10C,MAE7C2e,EAET,OACI+2B,EADGzO,EACgB,CAAC,OAAQ,SACT,CAAC,MAAO,WAEjC,SAAS0O,GAASvC,EAAOzQ,EAAWiR,EAAQpX,GAC1C,MAAMoZ,EAAa,GACnB,IAAI73C,EAAGK,EAAM21C,EAAQ3lB,EAAKynB,EAAO3G,EACjC,IAAKnxC,EAAI,EAAGK,EAAOg1C,EAAMv8C,OAAQg/C,EAAQ,EAAG93C,EAAIK,IAAQL,EAAG,CACzDg2C,EAASX,EAAMr1C,GACfqwB,EAAM2lB,EAAO3lB,IACbA,EAAIv5B,OACFk/C,EAAOl8C,OAAS8qC,EAAUx4B,EAC1B4pC,EAAOh8C,QAAU4qC,EAAU96B,EAC3B4tC,GAAW1B,EAAO9M,WAAYtE,IAEhC,MAAM,KAAC0S,EAAI,MAAEC,GAAST,GAAWlS,EAAWiR,EAAQG,EAAQvX,GAC5DqZ,GAASR,GAAQO,EAAW/+C,OAC5Bq4C,EAAUA,GAAWoG,EAChBlnB,EAAI4lB,UACP4B,EAAW1/C,KAAK69C,GAGpB,OAAO8B,GAASF,GAASC,EAAYjT,EAAWiR,EAAQpX,IAAW0S,EAErE,SAAS4G,GAAW1nB,EAAK5xB,EAAMoiB,EAAK/mB,EAAOE,GACzCq2B,EAAIxP,IAAMA,EACVwP,EAAI5xB,KAAOA,EACX4xB,EAAI3xB,MAAQD,EAAO3E,EACnBu2B,EAAIvP,OAASD,EAAM7mB,EACnBq2B,EAAIv2B,MAAQA,EACZu2B,EAAIr2B,OAASA,EAEf,SAASg+C,GAAW3C,EAAOzQ,EAAWiR,EAAQpX,GAC5C,MAAMwZ,EAAcpC,EAAOqC,QAC3B,IAAI,EAACpzC,EAAC,EAAEC,GAAK6/B,EACb,IAAK,MAAMoR,KAAUX,EAAO,CAC1B,MAAMhlB,EAAM2lB,EAAO3lB,IACboN,EAAQgB,EAAOuX,EAAOvY,QAAU,CAAChS,MAAO,EAAGkqB,OAAQ,EAAGj8B,OAAQ,GAC9DA,EAAUs8B,EAAOT,YAAc9X,EAAM/jB,QAAW,EACtD,GAAIs8B,EAAO9M,WAAY,CACrB,MAAMpvC,EAAQ8qC,EAAUx4B,EAAIsN,EACtB1f,EAASyjC,EAAM96B,MAAQ0tB,EAAIr2B,OAC7BsI,EAAQm7B,EAAMn/B,SAChByG,EAAI04B,EAAMn/B,OAER+xB,EAAI4lB,SACN8B,GAAW1nB,EAAK4nB,EAAYx5C,KAAMsG,EAAG8wC,EAAOoB,WAAagB,EAAYv5C,MAAQu5C,EAAYx5C,KAAMzE,GAE/F+9C,GAAW1nB,EAAKuU,EAAUnmC,KAAOg/B,EAAMkY,OAAQ5wC,EAAGjL,EAAOE,GAE3DyjC,EAAMn/B,MAAQyG,EACd04B,EAAMkY,QAAU77C,EAChBiL,EAAIsrB,EAAIvP,WACH,CACL,MAAM9mB,EAAS4qC,EAAU96B,EAAI4P,EACvB5f,EAAQ2jC,EAAM96B,MAAQ0tB,EAAIv2B,MAC5BwI,EAAQm7B,EAAMn/B,SAChBwG,EAAI24B,EAAMn/B,OAER+xB,EAAI4lB,SACN8B,GAAW1nB,EAAKvrB,EAAGmzC,EAAYp3B,IAAK/mB,EAAO+7C,EAAOsB,YAAcc,EAAYn3B,OAASm3B,EAAYp3B,KAEjGk3B,GAAW1nB,EAAKvrB,EAAG8/B,EAAU/jB,IAAM4c,EAAMkY,OAAQ77C,EAAOE,GAE1DyjC,EAAMn/B,MAAQwG,EACd24B,EAAMkY,QAAU37C,EAChB8K,EAAIurB,EAAI3xB,OAGZkmC,EAAU9/B,EAAIA,EACd8/B,EAAU7/B,EAAIA,EAEhBwY,GAAS6J,IAAI,SAAU,CACrB+wB,aAAa,EACbD,QAAS,CACPr3B,IAAK,EACLniB,MAAO,EACPoiB,OAAQ,EACRriB,KAAM,KAGV,IAAIg3C,GAAU,CACZ,OAAO5+C,EAAO+L,GACP/L,EAAMw+C,QACTx+C,EAAMw+C,MAAQ,IAEhBzyC,EAAKqzC,SAAWrzC,EAAKqzC,WAAY,EACjCrzC,EAAK2wC,SAAW3wC,EAAK2wC,UAAY,MACjC3wC,EAAK8W,OAAS9W,EAAK8W,QAAU,EAC7B9W,EAAKw1C,QAAUx1C,EAAKw1C,SAAW,WAC7B,MAAO,CAAC,CACNC,EAAG,EACH,KAAKzT,GACHhiC,EAAKg2B,KAAKgM,OAIhB/tC,EAAMw+C,MAAMl9C,KAAKyK,IAEnB,UAAU/L,EAAOyhD,GACf,MAAMr/C,EAAQpC,EAAMw+C,MAAQx+C,EAAMw+C,MAAMp0C,QAAQq3C,IAAe,GAChD,IAAXr/C,GACFpC,EAAMw+C,MAAMx2B,OAAO5lB,EAAO,IAG9B,UAAUpC,EAAO+L,EAAMnK,GACrBmK,EAAKqzC,SAAWx9C,EAAQw9C,SACxBrzC,EAAK2wC,SAAW96C,EAAQ86C,SACxB3wC,EAAK8W,OAASjhB,EAAQihB,QAExB,OAAO7iB,EAAOiD,EAAOE,EAAQu+C,GAC3B,IAAK1hD,EACH,OAEF,MAAMqhD,EAAUzzB,GAAU5tB,EAAM4B,QAAQu9C,OAAOkC,SACzChC,EAAiBjzC,KAAKuC,IAAI1L,EAAQo+C,EAAQp+C,MAAO,GACjDq8C,EAAkBlzC,KAAKuC,IAAIxL,EAASk+C,EAAQl+C,OAAQ,GACpDq7C,EAAQe,GAAiBv/C,EAAMw+C,OAC/BmD,EAAgBnD,EAAMoB,SACtBgC,EAAkBpD,EAAMnM,WAC9BrpC,EAAKhJ,EAAMw+C,MAAOhlB,IACgB,oBAArBA,EAAIqoB,cACbroB,EAAIqoB,iBAGR,MAAMC,EAA0BH,EAAcjf,OAAO,CAACmV,EAAOgH,IAC3DA,EAAKrlB,IAAI53B,UAAwC,IAA7Bi9C,EAAKrlB,IAAI53B,QAAQy5C,QAAoBxD,EAAQA,EAAQ,EAAG,IAAM,EAC9EmH,EAASz9C,OAAOktC,OAAO,CAC3B2R,WAAYn9C,EACZq9C,YAAan9C,EACbk+C,UACAhC,iBACAC,kBACAL,aAAcI,EAAiB,EAAIyC,EACnC5C,cAAeI,EAAkB,IAE7BQ,EAAav+C,OAAOC,OAAO,GAAI6/C,GACrCtB,GAAiBD,EAAYlyB,GAAU8zB,IACvC,MAAM3T,EAAYxsC,OAAOC,OAAO,CAC9Bs+C,aACAvqC,EAAG8pC,EACHpsC,EAAGqsC,EACHrxC,EAAGozC,EAAQz5C,KACXsG,EAAGmzC,EAAQr3B,KACVq3B,GACGzZ,EAASmX,GAAc4C,EAAczR,OAAO0R,GAAkB5C,GACpE+B,GAASvC,EAAMY,SAAUrR,EAAWiR,EAAQpX,GAC5CmZ,GAASY,EAAe5T,EAAWiR,EAAQpX,GACvCmZ,GAASa,EAAiB7T,EAAWiR,EAAQpX,IAC/CmZ,GAASY,EAAe5T,EAAWiR,EAAQpX,GAE7C+Y,GAAiB5S,GACjBoT,GAAW3C,EAAMkB,WAAY3R,EAAWiR,EAAQpX,GAChDmG,EAAU9/B,GAAK8/B,EAAUx4B,EACzBw4B,EAAU7/B,GAAK6/B,EAAU96B,EACzBkuC,GAAW3C,EAAMmB,eAAgB5R,EAAWiR,EAAQpX,GACpD5nC,EAAM+tC,UAAY,CAChBnmC,KAAMmmC,EAAUnmC,KAChBoiB,IAAK+jB,EAAU/jB,IACfniB,MAAOkmC,EAAUnmC,KAAOmmC,EAAUx4B,EAClC0U,OAAQ8jB,EAAU/jB,IAAM+jB,EAAU96B,EAClC9P,OAAQ4qC,EAAU96B,EAClBhQ,MAAO8qC,EAAUx4B,GAEnBvM,EAAKw1C,EAAMzQ,UAAYoR,IACrB,MAAM3lB,EAAM2lB,EAAO3lB,IACnBj4B,OAAOC,OAAOg4B,EAAKx5B,EAAM+tC,WACzBvU,EAAIv5B,OAAO8tC,EAAUx4B,EAAGw4B,EAAU96B,EAAG,CAACrL,KAAM,EAAGoiB,IAAK,EAAGniB,MAAO,EAAGoiB,OAAQ,QAK/E,MAAM83B,GACJ,eAAel9C,EAAQi2B,IACvB,eAAen7B,GACb,OAAO,EAET,iBAAiBK,EAAO6C,EAAM4sB,IAC9B,oBAAoBzvB,EAAO6C,EAAM4sB,IACjC,sBACE,OAAO,EAET,eAAekJ,EAAS11B,EAAOE,EAAQ23B,GAGrC,OAFA73B,EAAQmJ,KAAKuC,IAAI,EAAG1L,GAAS01B,EAAQ11B,OACrCE,EAASA,GAAUw1B,EAAQx1B,OACpB,CACLF,QACAE,OAAQiJ,KAAKuC,IAAI,EAAGmsB,EAAc1uB,KAAKkB,MAAMrK,EAAQ63B,GAAe33B,IAGxE,WAAW0B,GACT,OAAO,EAET,aAAakgC,KAIf,MAAMid,WAAsBD,GAC1B,eAAeh2C,GACb,OAAOA,GAAQA,EAAK/G,YAAc+G,EAAK/G,WAAW,OAAS,KAE7D,aAAa+/B,GACXA,EAAOnjC,QAAQqiB,WAAY,GAI/B,MAAMg+B,GAAc,WACdC,GAAc,CAClBC,WAAY,YACZC,UAAW,YACXC,SAAU,UACVC,aAAc,aACdC,YAAa,YACbC,YAAa,YACbC,UAAW,UACXC,aAAc,WACdC,WAAY,YAERC,GAAgBzgD,GAAmB,OAAVA,GAA4B,KAAVA,EACjD,SAAS0gD,GAAWh+C,EAAQi2B,GAC1B,MAAMr1B,EAAQZ,EAAOY,MACfq9C,EAAej+C,EAAOk+C,aAAa,UACnCC,EAAcn+C,EAAOk+C,aAAa,SAcxC,GAbAl+C,EAAOo9C,IAAe,CACpB1gB,QAAS,CACPp+B,OAAQ2/C,EACR7/C,MAAO+/C,EACPv9C,MAAO,CACL41C,QAAS51C,EAAM41C,QACfl4C,OAAQsC,EAAMtC,OACdF,MAAOwC,EAAMxC,SAInBwC,EAAM41C,QAAU51C,EAAM41C,SAAW,QACjC51C,EAAMs0B,UAAYt0B,EAAMs0B,WAAa,aACjC6oB,GAAcI,GAAc,CAC9B,MAAMC,EAAernB,GAAa/2B,EAAQ,cACrBjF,IAAjBqjD,IACFp+C,EAAO5B,MAAQggD,GAGnB,GAAIL,GAAcE,GAChB,GAA4B,KAAxBj+C,EAAOY,MAAMtC,OACf0B,EAAO1B,OAAS0B,EAAO5B,OAAS63B,GAAe,OAC1C,CACL,MAAMooB,EAAgBtnB,GAAa/2B,EAAQ,eACrBjF,IAAlBsjD,IACFr+C,EAAO1B,OAAS+/C,GAItB,OAAOr+C,EAET,MAAMs+C,KAAuB3nB,IAA+B,CAAC4nB,SAAS,GACtE,SAASC,GAAY3/B,EAAM7gB,EAAM4sB,GAC/B/L,EAAKgY,iBAAiB74B,EAAM4sB,EAAU0zB,IAExC,SAASG,GAAetjD,EAAO6C,EAAM4sB,GACnCzvB,EAAM6E,OAAO82B,oBAAoB94B,EAAM4sB,EAAU0zB,IAEnD,SAASI,GAAgBhhB,EAAOviC,GAC9B,MAAM6C,EAAOq/C,GAAY3f,EAAM1/B,OAAS0/B,EAAM1/B,MACxC,EAACoL,EAAC,EAAEC,GAAK0rB,GAAoB2I,EAAOviC,GAC1C,MAAO,CACL6C,OACA7C,QACAwjD,OAAQjhB,EACRt0B,OAASrO,IAANqO,EAAkBA,EAAI,KACzBC,OAAStO,IAANsO,EAAkBA,EAAI,MAG7B,SAASu1C,GAAiBC,EAAU7+C,GAClC,IAAK,MAAM6e,KAAQggC,EACjB,GAAIhgC,IAAS7e,GAAU6e,EAAKigC,SAAS9+C,GACnC,OAAO,EAIb,SAAS++C,GAAqB5jD,EAAO6C,EAAM4sB,GACzC,MAAM5qB,EAAS7E,EAAM6E,OACfg/C,EAAW,IAAIC,iBAAiBC,IACpC,IAAIC,GAAU,EACd,IAAK,MAAMzS,KAASwS,EAClBC,EAAUA,GAAWP,GAAiBlS,EAAM0S,WAAYp/C,GACxDm/C,EAAUA,IAAYP,GAAiBlS,EAAM2S,aAAcr/C,GAEzDm/C,GACFv0B,MAIJ,OADAo0B,EAASM,QAAQlsB,SAAU,CAACmsB,WAAW,EAAMC,SAAS,IAC/CR,EAET,SAASS,GAAqBtkD,EAAO6C,EAAM4sB,GACzC,MAAM5qB,EAAS7E,EAAM6E,OACfg/C,EAAW,IAAIC,iBAAiBC,IACpC,IAAIC,GAAU,EACd,IAAK,MAAMzS,KAASwS,EAClBC,EAAUA,GAAWP,GAAiBlS,EAAM2S,aAAcr/C,GAC1Dm/C,EAAUA,IAAYP,GAAiBlS,EAAM0S,WAAYp/C,GAEvDm/C,GACFv0B,MAIJ,OADAo0B,EAASM,QAAQlsB,SAAU,CAACmsB,WAAW,EAAMC,SAAS,IAC/CR,EAET,MAAMU,GAAqB,IAAIpoB,IAC/B,IAAIqoB,GAAsB,EAC1B,SAASC,KACP,MAAMC,EAAMx+C,OAAOke,iBACfsgC,IAAQF,KAGZA,GAAsBE,EACtBH,GAAmBz0B,QAAQ,CAAC4U,EAAQ1kC,KAC9BA,EAAMmoB,0BAA4Bu8B,GACpChgB,OAIN,SAASigB,GAA8B3kD,EAAO0kC,GACvC6f,GAAmBz4C,MACtB5F,OAAOw1B,iBAAiB,SAAU+oB,IAEpCF,GAAmBh0B,IAAIvwB,EAAO0kC,GAEhC,SAASkgB,GAAgC5kD,GACvCukD,GAAmB5wB,OAAO3zB,GACrBukD,GAAmBz4C,MACtB5F,OAAOy1B,oBAAoB,SAAU8oB,IAGzC,SAASI,GAAqB7kD,EAAO6C,EAAM4sB,GACzC,MAAM5qB,EAAS7E,EAAM6E,OACfu1B,EAAYv1B,GAAUqzB,GAAerzB,GAC3C,IAAKu1B,EACH,OAEF,MAAMsK,EAASr+B,EAAU,CAACpD,EAAOE,KAC/B,MAAMoS,EAAI6kB,EAAUI,YACpB/K,EAASxsB,EAAOE,GACZoS,EAAI6kB,EAAUI,aAChB/K,KAEDvpB,QACG29C,EAAW,IAAIiB,eAAef,IAClC,MAAMxS,EAAQwS,EAAQ,GAChB9gD,EAAQsuC,EAAMwT,YAAY9hD,MAC1BE,EAASouC,EAAMwT,YAAY5hD,OACnB,IAAVF,GAA0B,IAAXE,GAGnBuhC,EAAOzhC,EAAOE,KAIhB,OAFA0gD,EAASM,QAAQ/pB,GACjBuqB,GAA8B3kD,EAAO0kC,GAC9Bmf,EAET,SAASmB,GAAgBhlD,EAAO6C,EAAMghD,GAChCA,GACFA,EAASoB,aAEE,WAATpiD,GACF+hD,GAAgC5kD,GAGpC,SAASklD,GAAqBllD,EAAO6C,EAAM4sB,GACzC,MAAM5qB,EAAS7E,EAAM6E,OACfqtB,EAAQ7rB,EAAWk8B,IACL,OAAdviC,EAAM8kB,KACR2K,EAAS8zB,GAAgBhhB,EAAOviC,KAEjCA,EAAQ0G,IACT,MAAM67B,EAAQ77B,EAAK,GACnB,MAAO,CAAC67B,EAAOA,EAAMjJ,QAASiJ,EAAMhJ,WAGtC,OADA8pB,GAAYx+C,EAAQhC,EAAMqvB,GACnBA,EAET,MAAM,WAAoB6vB,GACxB,eAAel9C,EAAQi2B,GACrB,MAAMn7B,EAAUkF,GAAUA,EAAOG,YAAcH,EAAOG,WAAW,MACjE,OAAIrF,GAAWA,EAAQkF,SAAWA,GAChCg+C,GAAWh+C,EAAQi2B,GACZn7B,GAEF,KAET,eAAeA,GACb,MAAMkF,EAASlF,EAAQkF,OACvB,IAAKA,EAAOo9C,IACV,OAAO,EAET,MAAM1gB,EAAU18B,EAAOo9C,IAAa1gB,QACpC,CAAC,SAAU,SAASzR,QAASrC,IAC3B,MAAMtrB,EAAQo/B,EAAQ9T,GAClBvlB,EAAc/F,GAChB0C,EAAOsgD,gBAAgB13B,GAEvB5oB,EAAOugD,aAAa33B,EAAMtrB,KAG9B,MAAMsD,EAAQ87B,EAAQ97B,OAAS,GAM/B,OALAlE,OAAO2D,KAAKO,GAAOqqB,QAAS3lB,IAC1BtF,EAAOY,MAAM0E,GAAO1E,EAAM0E,KAE5BtF,EAAO5B,MAAQ4B,EAAO5B,aACf4B,EAAOo9C,KACP,EAET,iBAAiBjiD,EAAO6C,EAAM4sB,GAC5B5rB,KAAK83B,oBAAoB37B,EAAO6C,GAChC,MAAMwiD,EAAUrlD,EAAMslD,WAAatlD,EAAMslD,SAAW,IAC9CC,EAAW,CACfC,OAAQ5B,GACR6B,OAAQnB,GACR5f,OAAQmgB,IAEJ1gD,EAAUohD,EAAS1iD,IAASqiD,GAClCG,EAAQxiD,GAAQsB,EAAQnE,EAAO6C,EAAM4sB,GAEvC,oBAAoBzvB,EAAO6C,GACzB,MAAMwiD,EAAUrlD,EAAMslD,WAAatlD,EAAMslD,SAAW,IAC9CpzB,EAAQmzB,EAAQxiD,GACtB,IAAKqvB,EACH,OAEF,MAAMqzB,EAAW,CACfC,OAAQR,GACRS,OAAQT,GACRtgB,OAAQsgB,IAEJ7gD,EAAUohD,EAAS1iD,IAASygD,GAClCn/C,EAAQnE,EAAO6C,EAAMqvB,GACrBmzB,EAAQxiD,QAAQjD,EAElB,sBACE,OAAOsG,OAAOke,iBAEhB,eAAevf,EAAQ5B,EAAOE,EAAQ23B,GACpC,OAAOH,GAAe91B,EAAQ5B,EAAOE,EAAQ23B,GAE/C,WAAWj2B,GACT,MAAMu1B,EAAYlC,GAAerzB,GACjC,SAAUu1B,IAAaA,EAAUsrB,cAIrC,SAASC,GAAgB9gD,GACvB,OAAKmzB,MAAiD,qBAApB4tB,iBAAmC/gD,aAAkB+gD,gBAC9E5D,GAEF,GAGT,MAAM,GACJ,cACEn+C,KAAKoK,OAAIrO,EACTiE,KAAKqK,OAAItO,EACTiE,KAAK4gC,QAAS,EACd5gC,KAAKjC,aAAUhC,EACfiE,KAAK6hC,iBAAc9lC,EAErB,gBAAgBs9C,GACd,MAAM,EAACjvC,EAAC,EAAEC,GAAKrK,KAAK05C,SAAS,CAAC,IAAK,KAAML,GACzC,MAAO,CAACjvC,IAAGC,KAEb,WACE,OAAOJ,EAASjK,KAAKoK,IAAMH,EAASjK,KAAKqK,GAE3C,SAAStL,EAAOijD,GACd,MAAM3kB,EAAQr9B,KAAK6hC,YACnB,IAAKmgB,IAAU3kB,EACb,OAAOr9B,KAET,MAAMoR,EAAM,GAIZ,OAHArS,EAAMktB,QAAQrC,IACZxY,EAAIwY,GAAQyT,EAAMzT,IAASyT,EAAMzT,GAAMgX,SAAWvD,EAAMzT,GAAMqW,IAAMjgC,KAAK4pB,KAEpExY,GAGX,GAAQyR,SAAW,GACnB,GAAQo/B,mBAAgBlmD,EAExB,MAAMmmD,GAAa,CACjB,OAAO5jD,GACL,OAAOgG,EAAQhG,GAASA,EAAQ,GAAKA,GAEvC,QAAQ6jD,EAAW5jD,EAAOquC,GACxB,GAAkB,IAAduV,EACF,MAAO,IAET,MAAM3pB,EAASx4B,KAAK7D,MAAM4B,QAAQy6B,OAClC,IAAI4pB,EACApvB,EAAQmvB,EACZ,GAAIvV,EAAMxuC,OAAS,EAAG,CACpB,MAAMikD,EAAU95C,KAAKuC,IAAIvC,KAAKgC,IAAIqiC,EAAM,GAAGtuC,OAAQiK,KAAKgC,IAAIqiC,EAAMA,EAAMxuC,OAAS,GAAGE,SAChF+jD,EAAU,MAAQA,EAAU,QAC9BD,EAAW,cAEbpvB,EAAQsvB,GAAeH,EAAWvV,GAEpC,MAAM2V,EAAWv5C,EAAMT,KAAKgC,IAAIyoB,IAC1BwvB,EAAaj6C,KAAKuC,IAAIvC,KAAKsC,KAAK,EAAItC,KAAKkB,MAAM84C,GAAW,IAAK,GAC/DxkD,EAAU,CAACqkD,WAAUK,sBAAuBD,EAAYE,sBAAuBF,GAErF,OADA9kD,OAAOC,OAAOI,EAASiC,KAAKjC,QAAQ6uC,MAAM1T,QACnCF,GAAampB,EAAW3pB,EAAQz6B,IAEzC,YAAYokD,EAAW5jD,EAAOquC,GAC5B,GAAkB,IAAduV,EACF,MAAO,IAET,MAAM/hB,EAAS+hB,EAAa55C,KAAKiB,IAAI,GAAIjB,KAAKkB,MAAMT,EAAMm5C,KAC1D,OAAe,IAAX/hB,GAA2B,IAAXA,GAA2B,IAAXA,EAC3B8hB,GAAWS,QAAQ3/C,KAAKhD,KAAMmiD,EAAW5jD,EAAOquC,GAElD,KAGX,SAAS0V,GAAeH,EAAWvV,GACjC,IAAI5Z,EAAQ4Z,EAAMxuC,OAAS,EAAIwuC,EAAM,GAAGtuC,MAAQsuC,EAAM,GAAGtuC,MAAQsuC,EAAM,GAAGtuC,MAAQsuC,EAAM,GAAGtuC,MAI3F,OAHIiK,KAAKgC,IAAIyoB,IAAU,GAAKmvB,IAAc55C,KAAKkB,MAAM04C,KACnDnvB,EAAQmvB,EAAY55C,KAAKkB,MAAM04C,IAE1BnvB,EAET,IAAI4vB,GAAQ,CAACV,eAqEb,SAASW,GAAS/gC,EAAO8qB,GACvB,MAAMkW,EAAWhhC,EAAM/jB,QAAQ6uC,MACzBmW,EAAaD,EAASE,eAAiBC,GAAkBnhC,GACzDohC,EAAeJ,EAASK,MAAMC,QAAUC,GAAgBzW,GAAS,GACjE0W,EAAkBJ,EAAa9kD,OAC/BmlD,EAAQL,EAAa,GACrB3nB,EAAO2nB,EAAaI,EAAkB,GACtCE,EAAW,GACjB,GAAIF,EAAkBP,EAEpB,OADAU,GAAW7W,EAAO4W,EAAUN,EAAcI,EAAkBP,GACrDS,EAET,MAAMlQ,EAAUoQ,GAAiBR,EAActW,EAAOmW,GACtD,GAAIO,EAAkB,EAAG,CACvB,IAAIh+C,EAAGK,EACP,MAAMg+C,EAAkBL,EAAkB,EAAI/6C,KAAKc,OAAOkyB,EAAOgoB,IAAUD,EAAkB,IAAM,KAEnG,IADA,GAAK1W,EAAO4W,EAAUlQ,EAASjvC,EAAcs/C,GAAmB,EAAIJ,EAAQI,EAAiBJ,GACxFj+C,EAAI,EAAGK,EAAO29C,EAAkB,EAAGh+C,EAAIK,EAAML,IAChD,GAAKsnC,EAAO4W,EAAUlQ,EAAS4P,EAAa59C,GAAI49C,EAAa59C,EAAI,IAGnE,OADA,GAAKsnC,EAAO4W,EAAUlQ,EAAS/X,EAAMl3B,EAAcs/C,GAAmB/W,EAAMxuC,OAASm9B,EAAOooB,GACrFH,EAGT,OADA,GAAK5W,EAAO4W,EAAUlQ,GACfkQ,EAET,SAASP,GAAkBnhC,GACzB,MAAM4vB,EAAS5vB,EAAM/jB,QAAQ2zC,OACvBkS,EAAa9hC,EAAM+hC,YACnBC,EAAWhiC,EAAM2qB,QAAUmX,GAAclS,EAAS,EAAI,GACtDqS,EAAWjiC,EAAMkiC,WAAaJ,EACpC,OAAOr7C,KAAKkB,MAAMlB,KAAKsC,IAAIi5C,EAAUC,IAEvC,SAASL,GAAiBR,EAActW,EAAOmW,GAC7C,MAAMkB,EAAmBC,GAAehB,GAClC5P,EAAU1G,EAAMxuC,OAAS2kD,EAC/B,IAAKkB,EACH,OAAO17C,KAAKuC,IAAIwoC,EAAS,GAE3B,MAAM6Q,EAAUv6C,EAAWq6C,GAC3B,IAAK,IAAI3+C,EAAI,EAAGK,EAAOw+C,EAAQ/lD,OAAS,EAAGkH,EAAIK,EAAML,IAAK,CACxD,MAAM85B,EAAS+kB,EAAQ7+C,GACvB,GAAI85B,EAASkU,EACX,OAAOlU,EAGX,OAAO72B,KAAKuC,IAAIwoC,EAAS,GAE3B,SAAS+P,GAAgBzW,GACvB,MAAM/iC,EAAS,GACf,IAAIvE,EAAGK,EACP,IAAKL,EAAI,EAAGK,EAAOinC,EAAMxuC,OAAQkH,EAAIK,EAAML,IACrCsnC,EAAMtnC,GAAG69C,OACXt5C,EAAOpM,KAAK6H,GAGhB,OAAOuE,EAET,SAAS45C,GAAW7W,EAAO4W,EAAUN,EAAc5P,GACjD,IAEIhuC,EAFAyrB,EAAQ,EACRc,EAAOqxB,EAAa,GAGxB,IADA5P,EAAU/qC,KAAK67C,KAAK9Q,GACfhuC,EAAI,EAAGA,EAAIsnC,EAAMxuC,OAAQkH,IACxBA,IAAMusB,IACR2xB,EAAS/lD,KAAKmvC,EAAMtnC,IACpByrB,IACAc,EAAOqxB,EAAanyB,EAAQuiB,IAIlC,SAAS,GAAK1G,EAAO4W,EAAUlQ,EAAS+Q,EAAYC,GAClD,MAAM1gD,EAAQiB,EAAew/C,EAAY,GACnCxgD,EAAM0E,KAAKsC,IAAIhG,EAAey/C,EAAU1X,EAAMxuC,QAASwuC,EAAMxuC,QACnE,IACIA,EAAQkH,EAAGusB,EADXd,EAAQ,EAEZuiB,EAAU/qC,KAAK67C,KAAK9Q,GAChBgR,IACFlmD,EAASkmD,EAAWD,EACpB/Q,EAAUl1C,EAASmK,KAAKkB,MAAMrL,EAASk1C,IAEzCzhB,EAAOjuB,EACP,MAAOiuB,EAAO,EACZd,IACAc,EAAOtpB,KAAKc,MAAMzF,EAAQmtB,EAAQuiB,GAEpC,IAAKhuC,EAAIiD,KAAKuC,IAAIlH,EAAO,GAAI0B,EAAIzB,EAAKyB,IAChCA,IAAMusB,IACR2xB,EAAS/lD,KAAKmvC,EAAMtnC,IACpByrB,IACAc,EAAOtpB,KAAKc,MAAMzF,EAAQmtB,EAAQuiB,IAIxC,SAAS4Q,GAAel0B,GACtB,MAAMzqB,EAAMyqB,EAAI5xB,OAChB,IAAIkH,EAAGi/C,EACP,GAAIh/C,EAAM,EACR,OAAO,EAET,IAAKg/C,EAAOv0B,EAAI,GAAI1qB,EAAI,EAAGA,EAAIC,IAAOD,EACpC,GAAI0qB,EAAI1qB,GAAK0qB,EAAI1qB,EAAI,KAAOi/C,EAC1B,OAAO,EAGX,OAAOA,EA5KT1hC,GAAS6J,IAAI,QAAS,CACpB8qB,SAAS,EACT9F,QAAQ,EACRrsC,SAAS,EACTslB,aAAa,EACb4P,OAAQ,QACR7P,MAAO,EACPinB,KAAM,CACJ6F,SAAS,EACT7vB,UAAW,EACX68B,YAAY,EACZC,iBAAiB,EACjBC,WAAW,EACXd,WAAY,EACZe,UAAW,CAAC1e,EAAMloC,IAAYA,EAAQ4pB,UACtCi9B,UAAW,CAAC3e,EAAMloC,IAAYA,EAAQghB,MACtC2yB,QAAQ,EACR5U,WAAY,GACZC,iBAAkB,EAClBlX,YAAa,GAEfg/B,MAAO,CACLrN,SAAS,EACTrwB,KAAM,GACNq2B,QAAS,CACPr3B,IAAK,EACLC,OAAQ,IAGZwmB,MAAO,CACLkY,YAAa,EACbC,YAAa,GACbC,QAAQ,EACRC,gBAAiB,EACjBC,gBAAiB,GACjB1H,QAAS,EACThG,SAAS,EACTqL,UAAU,EACVsC,gBAAiB,EACjBC,YAAa,EACb9iD,SAAUsgD,GAAMV,WAAWjiC,OAC3BolC,MAAO,GACPlC,MAAO,GACPz/C,MAAO,SACP4hD,WAAY,OACZC,mBAAmB,EACnBC,cAAe,4BACfC,gBAAiB,KAGrB5iC,GAAS6iC,MAAM,cAAe,QAAS,GAAI,SAC3C7iC,GAAS6iC,MAAM,aAAc,QAAS,GAAI,eAC1C7iC,GAAS6iC,MAAM,aAAc,cAAe,GAAI,eAChD7iC,GAAS6iC,MAAM,cAAe,QAAS,GAAI,SAC3C7iC,GAASX,SAAS,QAAS,CACzBe,WAAW,EACXH,YAAcX,IAAUA,EAAKY,WAAW,YAAcZ,EAAKY,WAAW,UAAqB,aAATZ,GAAgC,WAATA,EACzGa,WAAab,GAAkB,eAATA,GAAkC,mBAATA,IAEjDU,GAASX,SAAS,SAAU,CAC1Be,UAAW,UAEbJ,GAASX,SAAS,cAAe,CAC/BY,YAAcX,GAAkB,oBAATA,GAAuC,aAATA,EACrDa,WAAab,GAAkB,oBAATA,IA+GxB,MAAMwjC,GAAgBjiD,GAAoB,SAAVA,EAAmB,QAAoB,UAAVA,EAAoB,OAASA,EACpFkiD,GAAiB,CAAC9jC,EAAO4sB,EAAMgD,IAAoB,QAAThD,GAA2B,SAATA,EAAkB5sB,EAAM4sB,GAAQgD,EAAS5vB,EAAM4sB,GAAQgD,EACzH,SAASmU,GAAO71B,EAAK81B,GACnB,MAAMj8C,EAAS,GACTk8C,EAAY/1B,EAAI5xB,OAAS0nD,EACzBvgD,EAAMyqB,EAAI5xB,OAChB,IAAIkH,EAAI,EACR,KAAOA,EAAIC,EAAKD,GAAKygD,EACnBl8C,EAAOpM,KAAKuyB,EAAIznB,KAAKkB,MAAMnE,KAE7B,OAAOuE,EAET,SAASm8C,GAAoBlkC,EAAOvjB,EAAO0nD,GACzC,MAAM7nD,EAAS0jB,EAAM8qB,MAAMxuC,OACrB8nD,EAAa39C,KAAKsC,IAAItM,EAAOH,EAAS,GACtCwF,EAAQke,EAAMyuB,YACd1sC,EAAMie,EAAM0uB,UACZlmC,EAAU,KAChB,IACIonC,EADAyU,EAAYrkC,EAAM+qB,gBAAgBqZ,GAEtC,KAAID,IAEAvU,EADa,IAAXtzC,EACOmK,KAAKuC,IAAIq7C,EAAYviD,EAAOC,EAAMsiD,GACxB,IAAV5nD,GACCujB,EAAM+qB,gBAAgB,GAAKsZ,GAAa,GAExCA,EAAYrkC,EAAM+qB,gBAAgBqZ,EAAa,IAAM,EAEjEC,GAAaD,EAAa3nD,EAAQmzC,GAAUA,EACxCyU,EAAYviD,EAAQ0G,GAAW67C,EAAYtiD,EAAMyG,IAIvD,OAAO67C,EAET,SAASviC,GAAewiC,EAAQhoD,GAC9B+G,EAAKihD,EAASziC,IACZ,MAAMP,EAAKO,EAAMP,GACXc,EAAQd,EAAGhlB,OAAS,EAC1B,IAAIkH,EACJ,GAAI4e,EAAQ9lB,EAAQ,CAClB,IAAKkH,EAAI,EAAGA,EAAI4e,IAAS5e,SAChBqe,EAAMjnB,KAAK0mB,EAAG9d,IAEvB8d,EAAGe,OAAO,EAAGD,MAInB,SAASmiC,GAAkBtoD,GACzB,OAAOA,EAAQ2mD,UAAY3mD,EAAQ6lD,WAAa,EAElD,SAAS0C,GAAevoD,EAASksB,GAC/B,IAAKlsB,EAAQy5C,QACX,OAAO,EAET,MAAM52B,EAAOoJ,GAAOjsB,EAAQ6iB,KAAMqJ,GAC5BuzB,EAAUzzB,GAAUhsB,EAAQy/C,SAC5Bn2B,EAAQ/iB,EAAQvG,EAAQopB,MAAQppB,EAAQopB,KAAK/oB,OAAS,EAC5D,OAAQipB,EAAQzG,EAAKE,WAAc08B,EAAQl+C,OAE7C,SAASinD,GAAmBl2B,EAAQvO,GAClC,OAAOiJ,GAAcsF,EAAQ,CAC3BvO,QACA9iB,KAAM,UAGV,SAASwnD,GAAkBn2B,EAAQ9xB,EAAO8/B,GACxC,OAAOtT,GAAcsF,EAAQ,CAC3BgO,OACA9/B,QACAS,KAAM,SAGV,SAASynD,GAAW/iD,EAAOm1C,EAAUxzC,GACnC,IAAI+L,EAAM3N,EAAmBC,GAI7B,OAHK2B,GAAwB,UAAbwzC,IAA2BxzC,GAAwB,UAAbwzC,KACpDznC,EAAMu0C,GAAav0C,IAEdA,EAET,SAASs1C,GAAU5kC,EAAO4vB,EAAQmH,EAAUn1C,GAC1C,MAAM,IAACyiB,EAAG,KAAEpiB,EAAI,OAAEqiB,EAAM,MAAEpiB,EAAK,MAAE7H,GAAS2lB,GACpC,UAACooB,EAAS,OAAEnoB,GAAU5lB,EAC5B,IACI0rB,EAAU8+B,EAAQC,EADlB5hC,EAAW,EAEf,MAAM1lB,EAAS8mB,EAASD,EAClB/mB,EAAQ4E,EAAQD,EACtB,GAAI+d,EAAMwsB,eAAgB,CAExB,GADAqY,EAAShjD,EAAeD,EAAOK,EAAMC,GACjCQ,EAASq0C,GAAW,CACtB,MAAMgO,EAAiBnpD,OAAO2D,KAAKw3C,GAAU,GACvCv6C,EAAQu6C,EAASgO,GACvBD,EAAS7kC,EAAO8kC,GAAgBla,iBAAiBruC,GAASgB,EAASoyC,OAEnEkV,EADsB,WAAb/N,GACC3O,EAAU9jB,OAAS8jB,EAAU/jB,KAAO,EAAI7mB,EAASoyC,EAElDkU,GAAe9jC,EAAO+2B,EAAUnH,GAE3C7pB,EAAW7jB,EAAQD,MACd,CACL,GAAIS,EAASq0C,GAAW,CACtB,MAAMgO,EAAiBnpD,OAAO2D,KAAKw3C,GAAU,GACvCv6C,EAAQu6C,EAASgO,GACvBF,EAAS5kC,EAAO8kC,GAAgBla,iBAAiBruC,GAASc,EAAQsyC,OAElEiV,EADsB,WAAb9N,GACC3O,EAAUnmC,KAAOmmC,EAAUlmC,OAAS,EAAI5E,EAAQsyC,EAEjDkU,GAAe9jC,EAAO+2B,EAAUnH,GAE3CkV,EAASjjD,EAAeD,EAAO0iB,EAAQD,GACvCnB,EAAwB,SAAb6zB,GAAuBhwC,EAAUA,EAE9C,MAAO,CAAC89C,SAAQC,SAAQ/+B,WAAU7C,YAEpC,MAAM,WAAc,GAClB,YAAYwa,GACV8P,QACAtvC,KAAK+B,GAAKy9B,EAAIz9B,GACd/B,KAAKhB,KAAOwgC,EAAIxgC,KAChBgB,KAAKjC,aAAUhC,EACfiE,KAAKihB,IAAMue,EAAIve,IACfjhB,KAAK7D,MAAQqjC,EAAIrjC,MACjB6D,KAAKmmB,SAAMpqB,EACXiE,KAAKomB,YAASrqB,EACdiE,KAAK+D,UAAOhI,EACZiE,KAAKgE,WAAQjI,EACbiE,KAAKZ,WAAQrD,EACbiE,KAAKV,YAASvD,EACdiE,KAAK8mD,SAAW,CACd/iD,KAAM,EACNC,MAAO,EACPmiB,IAAK,EACLC,OAAQ,GAEVpmB,KAAK6nB,cAAW9rB,EAChBiE,KAAKs2B,eAAYv6B,EACjBiE,KAAK+mD,gBAAahrD,EAClBiE,KAAKgnD,mBAAgBjrD,EACrBiE,KAAKinD,iBAAclrD,EACnBiE,KAAKknD,kBAAenrD,EACpBiE,KAAK4kC,UAAO7oC,EACZiE,KAAKmnD,mBAAgBprD,EACrBiE,KAAK6K,SAAM9O,EACXiE,KAAK8K,SAAM/O,EACXiE,KAAKonD,YAASrrD,EACdiE,KAAK4sC,MAAQ,GACb5sC,KAAKqnD,eAAiB,KACtBrnD,KAAKsnD,YAAc,KACnBtnD,KAAKunD,YAAc,KACnBvnD,KAAKysC,QAAU,EACfzsC,KAAKgkD,WAAa,EAClBhkD,KAAKwnD,kBAAoB,GACzBxnD,KAAKuwC,iBAAcx0C,EACnBiE,KAAKwwC,eAAYz0C,EACjBiE,KAAK04C,gBAAiB,EACtB14C,KAAKynD,cAAW1rD,EAChBiE,KAAK0nD,cAAW3rD,EAChBiE,KAAK2nD,mBAAgB5rD,EACrBiE,KAAK4nD,mBAAgB7rD,EACrBiE,KAAK6nD,aAAe,EACpB7nD,KAAK8nD,aAAe,EACpB9nD,KAAKksC,OAAS,GACdlsC,KAAK+nD,mBAAoB,EACzB/nD,KAAK4mC,cAAW7qC,EAElB,KAAKgC,GACHiC,KAAKjC,QAAUA,EAAQ6wB,WAAW5uB,KAAKmB,cACvCnB,KAAK4kC,KAAO7mC,EAAQ6mC,KACpB5kC,KAAK0nD,SAAW1nD,KAAKmxB,MAAMpzB,EAAQ8M,KACnC7K,KAAKynD,SAAWznD,KAAKmxB,MAAMpzB,EAAQ+M,KACnC9K,KAAK4nD,cAAgB5nD,KAAKmxB,MAAMpzB,EAAQiqD,cACxChoD,KAAK2nD,cAAgB3nD,KAAKmxB,MAAMpzB,EAAQkqD,cAE1C,MAAM3iB,EAAK/mC,GACT,OAAO+mC,EAET,gBACE,IAAI,SAACoiB,EAAQ,SAAED,EAAQ,cAAEG,EAAa,cAAED,GAAiB3nD,KAKzD,OAJA0nD,EAAW/iD,EAAgB+iD,EAAUroD,OAAOsJ,mBAC5C8+C,EAAW9iD,EAAgB8iD,EAAUpoD,OAAOwkC,mBAC5C+jB,EAAgBjjD,EAAgBijD,EAAevoD,OAAOsJ,mBACtDg/C,EAAgBhjD,EAAgBgjD,EAAetoD,OAAOwkC,mBAC/C,CACLh5B,IAAKlG,EAAgB+iD,EAAUE,GAC/B98C,IAAKnG,EAAgB8iD,EAAUE,GAC/BhkB,WAAYl/B,EAAeijD,GAC3B9jB,WAAYn/B,EAAegjD,IAG/B,UAAU3hB,GACR,IACI38B,GADA,IAAC0B,EAAG,IAAEC,EAAG,WAAE64B,EAAU,WAAEC,GAAc5jC,KAAK0jC,gBAE9C,GAAIC,GAAcC,EAChB,MAAO,CAAC/4B,MAAKC,OAEf,MAAMo9C,EAAQloD,KAAKskC,0BACnB,IAAK,IAAIh/B,EAAI,EAAGK,EAAOuiD,EAAM9pD,OAAQkH,EAAIK,IAAQL,EAC/C6D,EAAQ++C,EAAM5iD,GAAGk/B,WAAW2jB,UAAUnoD,KAAM8lC,GACvCnC,IACH94B,EAAMtC,KAAKsC,IAAIA,EAAK1B,EAAM0B,MAEvB+4B,IACH94B,EAAMvC,KAAKuC,IAAIA,EAAK3B,EAAM2B,MAK9B,OAFAD,EAAM+4B,GAAc/4B,EAAMC,EAAMA,EAAMD,EACtCC,EAAM64B,GAAc94B,EAAMC,EAAMD,EAAMC,EAC/B,CACLD,IAAKlG,EAAgBkG,EAAKlG,EAAgBmG,EAAKD,IAC/CC,IAAKnG,EAAgBmG,EAAKnG,EAAgBkG,EAAKC,KAGnD,aACE,MAAO,CACL/G,KAAM/D,KAAKinD,aAAe,EAC1B9gC,IAAKnmB,KAAK+mD,YAAc,EACxB/iD,MAAOhE,KAAKknD,cAAgB,EAC5B9gC,OAAQpmB,KAAKgnD,eAAiB,GAGlC,WACE,OAAOhnD,KAAK4sC,MAEd,YACE,MAAMlwC,EAAOsD,KAAK7D,MAAMO,KACxB,OAAOsD,KAAKjC,QAAQlB,SAAWmD,KAAKsuC,eAAiB5xC,EAAK0rD,QAAU1rD,EAAK2rD,UAAY3rD,EAAKG,QAAU,GAEtG,eACEmD,KAAKksC,OAAS,GACdlsC,KAAK+nD,mBAAoB,EAE3B,eACEzlD,EAAStC,KAAKjC,QAAQuqD,aAAc,CAACtoD,OAEvC,OAAO6nB,EAAUyO,EAAWY,GAC1B,MAAM,YAACvM,EAAW,MAAED,EAAOkiB,MAAOkW,GAAY9iD,KAAKjC,QAC7CwqD,EAAazF,EAASyF,WAC5BvoD,KAAKsoD,eACLtoD,KAAK6nB,SAAWA,EAChB7nB,KAAKs2B,UAAYA,EACjBt2B,KAAK8mD,SAAW5vB,EAAUx5B,OAAOC,OAAO,CACtCoG,KAAM,EACNC,MAAO,EACPmiB,IAAK,EACLC,OAAQ,GACP8Q,GACHl3B,KAAK4sC,MAAQ,KACb5sC,KAAKunD,YAAc,KACnBvnD,KAAKqnD,eAAiB,KACtBrnD,KAAKsnD,YAAc,KACnBtnD,KAAKwoD,sBACLxoD,KAAKyoD,gBACLzoD,KAAK0oD,qBACL1oD,KAAKgkD,WAAahkD,KAAKsuC,eACnBtuC,KAAKZ,MAAQ83B,EAAQnzB,KAAOmzB,EAAQlzB,MACpChE,KAAKV,OAAS43B,EAAQ/Q,IAAM+Q,EAAQ9Q,OACnCpmB,KAAK+nD,oBACR/nD,KAAK2oD,mBACL3oD,KAAK4oD,sBACL5oD,KAAK6oD,kBACL7oD,KAAKonD,OAAS58B,GAAUxqB,KAAM0qB,EAAOC,GACrC3qB,KAAK+nD,mBAAoB,GAE3B/nD,KAAK8oD,mBACL9oD,KAAK4sC,MAAQ5sC,KAAK+oD,cAAgB,GAClC/oD,KAAKgpD,kBACL,MAAMC,EAAkBV,EAAavoD,KAAK4sC,MAAMxuC,OAChD4B,KAAKkpD,sBAAsBD,EAAkBpD,GAAO7lD,KAAK4sC,MAAO2b,GAAcvoD,KAAK4sC,OACnF5sC,KAAKohC,YACLphC,KAAKmpD,+BACLnpD,KAAKopD,yBACLppD,KAAKqpD,8BACDvG,EAAStL,UAAYsL,EAASD,UAAgC,SAApBC,EAAS98C,UACrDhG,KAAK4sC,MAAQiW,GAAS7iD,KAAMA,KAAK4sC,OACjC5sC,KAAKunD,YAAc,KACnBvnD,KAAKspD,iBAEHL,GACFjpD,KAAKkpD,sBAAsBlpD,KAAK4sC,OAElC5sC,KAAKupD,YACLvpD,KAAKwpD,MACLxpD,KAAKypD,WACLzpD,KAAK0pD,cAEP,YACE,IACI5Y,EAAYE,EADZ2Y,EAAgB3pD,KAAKjC,QAAQsH,QAE7BrF,KAAKsuC,gBACPwC,EAAa9wC,KAAK+D,KAClBitC,EAAWhxC,KAAKgE,QAEhB8sC,EAAa9wC,KAAKmmB,IAClB6qB,EAAWhxC,KAAKomB,OAChBujC,GAAiBA,GAEnB3pD,KAAKuwC,YAAcO,EACnB9wC,KAAKwwC,UAAYQ,EACjBhxC,KAAK04C,eAAiBiR,EACtB3pD,KAAKysC,QAAUuE,EAAWF,EAC1B9wC,KAAK4pD,eAAiB5pD,KAAKjC,QAAQ8rD,cAErC,cACEvnD,EAAStC,KAAKjC,QAAQ2rD,YAAa,CAAC1pD,OAEtC,sBACEsC,EAAStC,KAAKjC,QAAQyqD,oBAAqB,CAACxoD,OAE9C,gBACMA,KAAKsuC,gBACPtuC,KAAKZ,MAAQY,KAAK6nB,SAClB7nB,KAAK+D,KAAO,EACZ/D,KAAKgE,MAAQhE,KAAKZ,QAElBY,KAAKV,OAASU,KAAKs2B,UACnBt2B,KAAKmmB,IAAM,EACXnmB,KAAKomB,OAASpmB,KAAKV,QAErBU,KAAKinD,YAAc,EACnBjnD,KAAK+mD,WAAa,EAClB/mD,KAAKknD,aAAe,EACpBlnD,KAAKgnD,cAAgB,EAEvB,qBACE1kD,EAAStC,KAAKjC,QAAQ2qD,mBAAoB,CAAC1oD,OAE7C,WAAWmiB,GACTniB,KAAK7D,MAAM2tD,cAAc3nC,EAAMniB,KAAKmB,cACpCmB,EAAStC,KAAKjC,QAAQokB,GAAO,CAACniB,OAEhC,mBACEA,KAAK+pD,WAAW,oBAElB,uBACA,kBACE/pD,KAAK+pD,WAAW,mBAElB,mBACE/pD,KAAK+pD,WAAW,oBAElB,aACE,MAAO,GAET,kBACE/pD,KAAK+pD,WAAW,mBAElB,8BACEznD,EAAStC,KAAKjC,QAAQisD,4BAA6B,CAAChqD,OAEtD,mBAAmB4sC,GACjB,MAAMkW,EAAW9iD,KAAKjC,QAAQ6uC,MAC9B,IAAItnC,EAAGK,EAAM04B,EACb,IAAK/4B,EAAI,EAAGK,EAAOinC,EAAMxuC,OAAQkH,EAAIK,EAAML,IACzC+4B,EAAOuO,EAAMtnC,GACb+4B,EAAKngC,MAAQoE,EAASwgD,EAASxgD,SAAU,CAAC+7B,EAAK//B,MAAOgH,EAAGsnC,GAAQ5sC,MAGrE,6BACEsC,EAAStC,KAAKjC,QAAQksD,2BAA4B,CAACjqD,OAErD,+BACEsC,EAAStC,KAAKjC,QAAQorD,6BAA8B,CAACnpD,OAEvD,yBACE,MAAMjC,EAAUiC,KAAKjC,QACf+kD,EAAW/kD,EAAQ6uC,MACnBsd,EAAWlqD,KAAK4sC,MAAMxuC,OACtB0mD,EAAchC,EAASgC,aAAe,EACtCC,EAAcjC,EAASiC,YAC7B,IACIJ,EAAWruB,EAAW6zB,EADtBhD,EAAgBrC,EAEpB,IAAK9kD,KAAKoqD,eAAiBtH,EAAStL,SAAWsN,GAAeC,GAAemF,GAAY,IAAMlqD,KAAKsuC,eAElG,YADAtuC,KAAKmnD,cAAgBrC,GAGvB,MAAMuF,EAAarqD,KAAKsqD,iBAClBC,EAAgBF,EAAWG,OAAOprD,MAClCqrD,EAAiBJ,EAAWK,QAAQprD,OACpCuoB,EAAWnb,GAAY1M,KAAK7D,MAAMiD,MAAQmrD,EAAe,EAAGvqD,KAAK6nB,UACvE88B,EAAY5mD,EAAQ2zC,OAAS1xC,KAAK6nB,SAAWqiC,EAAWriC,GAAYqiC,EAAW,GAC3EK,EAAgB,EAAI5F,IACtBA,EAAY98B,GAAYqiC,GAAYnsD,EAAQ2zC,OAAS,GAAM,IAC3Dpb,EAAYt2B,KAAKs2B,UAAY+vB,GAAkBtoD,EAAQ4zC,MACvDmR,EAAStF,QAAU8I,GAAevoD,EAAQ8mD,MAAO7kD,KAAK7D,MAAM4B,QAAQ6iB,MACpEupC,EAAmB5hD,KAAKuB,KAAKygD,EAAgBA,EAAgBE,EAAiBA,GAC9EtD,EAAgBl8C,GAAU1C,KAAKsC,IAC7BtC,KAAKoiD,KAAKj+C,IAAa29C,EAAWK,QAAQprD,OAAS,GAAKqlD,GAAY,EAAG,IACvEp8C,KAAKoiD,KAAKj+C,GAAY4pB,EAAY6zB,GAAmB,EAAG,IAAM5hD,KAAKoiD,KAAKj+C,GAAY+9C,EAAiBN,GAAmB,EAAG,MAE7HhD,EAAgB5+C,KAAKuC,IAAIg6C,EAAav8C,KAAKsC,IAAIk6C,EAAaoC,KAE9DnnD,KAAKmnD,cAAgBA,EAEvB,8BACE7kD,EAAStC,KAAKjC,QAAQsrD,4BAA6B,CAACrpD,OAEtD,iBACA,YACEsC,EAAStC,KAAKjC,QAAQwrD,UAAW,CAACvpD,OAEpC,MACE,MAAM42C,EAAU,CACdx3C,MAAO,EACPE,OAAQ,IAEJ,MAACnD,EAAO4B,SAAU6uC,MAAOkW,EAAU+B,MAAO+F,EAAWjZ,KAAMkZ,IAAa7qD,KACxEw3C,EAAUx3C,KAAKoqD,aACf9b,EAAetuC,KAAKsuC,eAC1B,GAAIkJ,EAAS,CACX,MAAMsT,EAAcxE,GAAesE,EAAWzuD,EAAM4B,QAAQ6iB,MAQ5D,GAPI0tB,GACFsI,EAAQx3C,MAAQY,KAAK6nB,SACrB+uB,EAAQt3C,OAAS+mD,GAAkBwE,GAAYC,IAE/ClU,EAAQt3C,OAASU,KAAKs2B,UACtBsgB,EAAQx3C,MAAQinD,GAAkBwE,GAAYC,GAE5ChI,EAAStL,SAAWx3C,KAAK4sC,MAAMxuC,OAAQ,CACzC,MAAM,MAACmlD,EAAK,KAAEhoB,EAAI,OAAEivB,EAAM,QAAEE,GAAW1qD,KAAKsqD,iBACtCS,EAAiC,EAAnBjI,EAAStF,QACvBwN,EAAejgD,EAAU/K,KAAKmnD,eAC9Bl5C,EAAM1F,KAAK0F,IAAI+8C,GACfh+C,EAAMzE,KAAKyE,IAAIg+C,GACrB,GAAI1c,EAAc,CAChB,MAAM2c,EAAcnI,EAASkC,OAAS,EAAIh4C,EAAMw9C,EAAOprD,MAAQ6O,EAAMy8C,EAAQprD,OAC7Es3C,EAAQt3C,OAASiJ,KAAKsC,IAAI7K,KAAKs2B,UAAWsgB,EAAQt3C,OAAS2rD,EAAcF,OACpE,CACL,MAAMG,EAAapI,EAASkC,OAAS,EAAI/2C,EAAMu8C,EAAOprD,MAAQ4N,EAAM09C,EAAQprD,OAC5Es3C,EAAQx3C,MAAQmJ,KAAKsC,IAAI7K,KAAK6nB,SAAU+uB,EAAQx3C,MAAQ8rD,EAAaH,GAEvE/qD,KAAKmrD,kBAAkB5H,EAAOhoB,EAAMvuB,EAAKiB,IAG7CjO,KAAKorD,iBACD9c,GACFtuC,KAAKZ,MAAQY,KAAKysC,QAAUtwC,EAAMiD,MAAQY,KAAK8mD,SAAS/iD,KAAO/D,KAAK8mD,SAAS9iD,MAC7EhE,KAAKV,OAASs3C,EAAQt3C,SAEtBU,KAAKZ,MAAQw3C,EAAQx3C,MACrBY,KAAKV,OAASU,KAAKysC,QAAUtwC,EAAMmD,OAASU,KAAK8mD,SAAS3gC,IAAMnmB,KAAK8mD,SAAS1gC,QAGlF,kBAAkBm9B,EAAOhoB,EAAMvuB,EAAKiB,GAClC,MAAO2+B,OAAO,MAAClpC,EAAK,QAAE85C,GAAQ,SAAE3E,GAAY74C,KAAKjC,QAC3CstD,EAAmC,IAAvBrrD,KAAKmnD,cACjBmE,EAAgC,QAAbzS,GAAoC,MAAd74C,KAAK4kC,KACpD,GAAI5kC,KAAKsuC,eAAgB,CACvB,MAAMid,EAAavrD,KAAK6sC,gBAAgB,GAAK7sC,KAAK+D,KAC5CynD,EAAcxrD,KAAKgE,MAAQhE,KAAK6sC,gBAAgB7sC,KAAK4sC,MAAMxuC,OAAS,GAC1E,IAAI6oD,EAAc,EACdC,EAAe,EACfmE,EACEC,GACFrE,EAAch5C,EAAMs1C,EAAMnkD,MAC1B8nD,EAAel6C,EAAMuuB,EAAKj8B,SAE1B2nD,EAAcj6C,EAAMu2C,EAAMjkD,OAC1B4nD,EAAej5C,EAAMstB,EAAKn8B,OAET,UAAVsE,EACTwjD,EAAe3rB,EAAKn8B,MACD,QAAVsE,EACTujD,EAAc1D,EAAMnkD,MACD,UAAVsE,IACTujD,EAAc1D,EAAMnkD,MAAQ,EAC5B8nD,EAAe3rB,EAAKn8B,MAAQ,GAE9BY,KAAKinD,YAAc1+C,KAAKuC,KAAKm8C,EAAcsE,EAAa/N,GAAWx9C,KAAKZ,OAASY,KAAKZ,MAAQmsD,GAAa,GAC3GvrD,KAAKknD,aAAe3+C,KAAKuC,KAAKo8C,EAAesE,EAAchO,GAAWx9C,KAAKZ,OAASY,KAAKZ,MAAQosD,GAAc,OAC1G,CACL,IAAIzE,EAAaxrB,EAAKj8B,OAAS,EAC3B0nD,EAAgBzD,EAAMjkD,OAAS,EACrB,UAAVoE,GACFqjD,EAAa,EACbC,EAAgBzD,EAAMjkD,QACH,QAAVoE,IACTqjD,EAAaxrB,EAAKj8B,OAClB0nD,EAAgB,GAElBhnD,KAAK+mD,WAAaA,EAAavJ,EAC/Bx9C,KAAKgnD,cAAgBA,EAAgBxJ,GAGzC,iBACMx9C,KAAK8mD,WACP9mD,KAAK8mD,SAAS/iD,KAAOwE,KAAKuC,IAAI9K,KAAKinD,YAAajnD,KAAK8mD,SAAS/iD,MAC9D/D,KAAK8mD,SAAS3gC,IAAM5d,KAAKuC,IAAI9K,KAAK+mD,WAAY/mD,KAAK8mD,SAAS3gC,KAC5DnmB,KAAK8mD,SAAS9iD,MAAQuE,KAAKuC,IAAI9K,KAAKknD,aAAclnD,KAAK8mD,SAAS9iD,OAChEhE,KAAK8mD,SAAS1gC,OAAS7d,KAAKuC,IAAI9K,KAAKgnD,cAAehnD,KAAK8mD,SAAS1gC,SAGtE,WACE9jB,EAAStC,KAAKjC,QAAQ0rD,SAAU,CAACzpD,OAEnC,eACE,MAAM,KAAC4kC,EAAI,SAAEiU,GAAY74C,KAAKjC,QAC9B,MAAoB,QAAb86C,GAAmC,WAAbA,GAAkC,MAATjU,EAExD,aACE,OAAO5kC,KAAKjC,QAAQw9C,SAEtB,sBAAsB3O,GAGpB,IAAItnC,EAAGK,EACP,IAHA3F,KAAKgqD,8BACLhqD,KAAKyrD,mBAAmB7e,GAEnBtnC,EAAI,EAAGK,EAAOinC,EAAMxuC,OAAQkH,EAAIK,EAAML,IACrCjB,EAAcuoC,EAAMtnC,GAAGpH,SACzB0uC,EAAMzoB,OAAO7e,EAAG,GAChBK,IACAL,KAGJtF,KAAKiqD,6BAEP,iBACE,IAAII,EAAarqD,KAAKunD,YACtB,IAAK8C,EAAY,CACf,MAAM9B,EAAavoD,KAAKjC,QAAQ6uC,MAAM2b,WACtC,IAAI3b,EAAQ5sC,KAAK4sC,MACb2b,EAAa3b,EAAMxuC,SACrBwuC,EAAQiZ,GAAOjZ,EAAO2b,IAExBvoD,KAAKunD,YAAc8C,EAAarqD,KAAK0rD,mBAAmB9e,EAAOA,EAAMxuC,QAEvE,OAAOisD,EAET,mBAAmBzd,EAAOxuC,GACxB,MAAM,IAAC6iB,EAAKumC,kBAAmBpB,GAAUpmD,KACnC2rD,EAAS,GACTC,EAAU,GAChB,IAEItmD,EAAGgY,EAAGwG,EAAM5lB,EAAO2tD,EAAUC,EAAYnoC,EAAO7C,EAAY1hB,EAAOE,EAAQysD,EAF3EC,EAAkB,EAClBC,EAAmB,EAEvB,IAAK3mD,EAAI,EAAGA,EAAIlH,IAAUkH,EAAG,CAO3B,GANApH,EAAQ0uC,EAAMtnC,GAAGpH,MACjB2tD,EAAW7rD,KAAKksD,wBAAwB5mD,GACxC2b,EAAIL,KAAOkrC,EAAaD,EAASvoC,OACjCK,EAAQyiC,EAAO0F,GAAc1F,EAAO0F,IAAe,CAACpvD,KAAM,GAAI0mB,GAAI,IAClEtC,EAAa+qC,EAAS/qC,WACtB1hB,EAAQE,EAAS,EACZ+E,EAAcnG,IAAWoG,EAAQpG,IAG/B,GAAIoG,EAAQpG,GACjB,IAAKof,EAAI,EAAGwG,EAAO5lB,EAAME,OAAQkf,EAAIwG,IAAQxG,EAC3CyuC,EAAc7tD,EAAMof,GACfjZ,EAAc0nD,IAAiBznD,EAAQynD,KAC1C3sD,EAAQ+jB,GAAalC,EAAK0C,EAAMjnB,KAAMinB,EAAMP,GAAIhkB,EAAO2sD,GACvDzsD,GAAUwhB,QAPd1hB,EAAQ+jB,GAAalC,EAAK0C,EAAMjnB,KAAMinB,EAAMP,GAAIhkB,EAAOlB,GACvDoB,EAASwhB,EAUX6qC,EAAOluD,KAAK2B,GACZwsD,EAAQnuD,KAAK6B,GACb0sD,EAAkBzjD,KAAKuC,IAAI1L,EAAO4sD,GAClCC,EAAmB1jD,KAAKuC,IAAIxL,EAAQ2sD,GAEtCroC,GAAewiC,EAAQhoD,GACvB,MAAMosD,EAASmB,EAAOplD,QAAQylD,GACxBtB,EAAUkB,EAAQrlD,QAAQ0lD,GAC1BE,EAAW/kD,IAAQ,CAAEhI,MAAOusD,EAAOvkD,IAAQ,EAAG9H,OAAQssD,EAAQxkD,IAAQ,IAC5E,MAAO,CACLm8C,MAAO4I,EAAQ,GACf5wB,KAAM4wB,EAAQ/tD,EAAS,GACvBosD,OAAQ2B,EAAQ3B,GAChBE,QAASyB,EAAQzB,GACjBiB,SACAC,WAGJ,iBAAiBttD,GACf,OAAOA,EAET,iBAAiBA,EAAOC,GACtB,OAAOgrC,IAET,iBAAiBllB,IACjB,gBAAgB9lB,GACd,MAAMquC,EAAQ5sC,KAAK4sC,MACnB,OAAIruC,EAAQ,GAAKA,EAAQquC,EAAMxuC,OAAS,EAC/B,KAEF4B,KAAK2sC,iBAAiBC,EAAMruC,GAAOD,OAE5C,mBAAmB8tD,GACbpsD,KAAK04C,iBACP0T,EAAU,EAAIA,GAEhB,MAAM/nC,EAAQrkB,KAAKuwC,YAAc6b,EAAUpsD,KAAKysC,QAChD,OAAO9/B,GAAY3M,KAAK4pD,eAAiBxlC,GAAYpkB,KAAK7D,MAAOkoB,EAAO,GAAKA,GAE/E,mBAAmBA,GACjB,MAAM+nC,GAAW/nC,EAAQrkB,KAAKuwC,aAAevwC,KAAKysC,QAClD,OAAOzsC,KAAK04C,eAAiB,EAAI0T,EAAUA,EAE7C,eACE,OAAOpsD,KAAK2sC,iBAAiB3sC,KAAKqsD,gBAEpC,eACE,MAAM,IAACxhD,EAAG,IAAEC,GAAO9K,KACnB,OAAO6K,EAAM,GAAKC,EAAM,EAAIA,EAC1BD,EAAM,GAAKC,EAAM,EAAID,EACrB,EAEJ,WAAWtM,GACT,MAAMquC,EAAQ5sC,KAAK4sC,OAAS,GAC5B,GAAIruC,GAAS,GAAKA,EAAQquC,EAAMxuC,OAAQ,CACtC,MAAMigC,EAAOuO,EAAMruC,GACnB,OAAO8/B,EAAKuI,WACbvI,EAAKuI,SAAW4f,GAAkBxmD,KAAKmB,aAAc5C,EAAO8/B,IAE7D,OAAOr+B,KAAK4mC,WACZ5mC,KAAK4mC,SAAW2f,GAAmBvmD,KAAK7D,MAAMgF,aAAcnB,OAE9D,YACE,MAAMssD,EAActsD,KAAKjC,QAAQ6uC,MAC3B2f,EAAMxhD,EAAU/K,KAAKmnD,eACrBl5C,EAAM1F,KAAKgC,IAAIhC,KAAK0F,IAAIs+C,IACxBv/C,EAAMzE,KAAKgC,IAAIhC,KAAKyE,IAAIu/C,IACxBlC,EAAarqD,KAAKsqD,iBAClB9M,EAAU8O,EAAYnH,iBAAmB,EACzCzzC,EAAI24C,EAAaA,EAAWG,OAAOprD,MAAQo+C,EAAU,EACrDpuC,EAAIi7C,EAAaA,EAAWK,QAAQprD,OAASk+C,EAAU,EAC7D,OAAOx9C,KAAKsuC,eACRl/B,EAAInB,EAAMyD,EAAI1E,EAAM0E,EAAIzD,EAAMmB,EAAIpC,EAClCoC,EAAIpC,EAAM0E,EAAIzD,EAAMmB,EAAInB,EAAMyD,EAAI1E,EAExC,aACE,MAAMwqC,EAAUx3C,KAAKjC,QAAQy5C,QAC7B,MAAgB,SAAZA,IACOA,EAEJx3C,KAAKskC,0BAA0BlmC,OAAS,EAEjD,sBAAsB8rC,GACpB,MAAMtF,EAAO5kC,KAAK4kC,KACZzoC,EAAQ6D,KAAK7D,MACb4B,EAAUiC,KAAKjC,SACf,KAAC4zC,EAAI,SAAEkH,GAAY96C,EACnB2zC,EAASC,EAAKD,OACdpD,EAAetuC,KAAKsuC,eACpB1B,EAAQ5sC,KAAK4sC,MACb4f,EAAc5f,EAAMxuC,QAAUszC,EAAS,EAAI,GAC3C+a,EAAKpG,GAAkB1U,GACvBllB,EAAQ,GACRigC,EAAa/a,EAAK/iB,WAAW5uB,KAAKmB,cAClCwrD,EAAYD,EAAWlI,WAAakI,EAAW7mC,YAAc,EAC7D+mC,EAAgBD,EAAY,EAC5BE,EAAmB,SAASxoC,GAChC,OAAOD,GAAYjoB,EAAOkoB,EAAOsoC,IAEnC,IAAIG,EAAaxnD,EAAG6gD,EAAW4G,EAC3BC,EAAKC,EAAKC,EAAKC,EAAKC,EAAIC,EAAIC,EAAIC,EACpC,GAAiB,QAAb1U,EACFiU,EAAcD,EAAiB7sD,KAAKomB,QACpC6mC,EAAMjtD,KAAKomB,OAASqmC,EACpBU,EAAML,EAAcF,EACpBS,EAAKR,EAAiB3iB,EAAU/jB,KAAOymC,EACvCW,EAAKrjB,EAAU9jB,YACV,GAAiB,WAAbyyB,EACTiU,EAAcD,EAAiB7sD,KAAKmmB,KACpCknC,EAAKnjB,EAAU/jB,IACfonC,EAAKV,EAAiB3iB,EAAU9jB,QAAUwmC,EAC1CK,EAAMH,EAAcF,EACpBO,EAAMntD,KAAKmmB,IAAMsmC,OACZ,GAAiB,SAAb5T,EACTiU,EAAcD,EAAiB7sD,KAAKgE,OACpCgpD,EAAMhtD,KAAKgE,MAAQyoD,EACnBS,EAAMJ,EAAcF,EACpBQ,EAAKP,EAAiB3iB,EAAUnmC,MAAQ6oD,EACxCU,EAAKpjB,EAAUlmC,WACV,GAAiB,UAAb60C,EACTiU,EAAcD,EAAiB7sD,KAAK+D,MACpCqpD,EAAKljB,EAAUnmC,KACfupD,EAAKT,EAAiB3iB,EAAUlmC,OAAS4oD,EACzCI,EAAMF,EAAcF,EACpBM,EAAMltD,KAAK+D,KAAO0oD,OACb,GAAa,MAAT7nB,EAAc,CACvB,GAAiB,WAAbiU,EACFiU,EAAcD,GAAkB3iB,EAAU/jB,IAAM+jB,EAAU9jB,QAAU,EAAI,SACnE,GAAI5hB,EAASq0C,GAAW,CAC7B,MAAMgO,EAAiBnpD,OAAO2D,KAAKw3C,GAAU,GACvCv6C,EAAQu6C,EAASgO,GACvBiG,EAAcD,EAAiB7sD,KAAK7D,MAAM4lB,OAAO8kC,GAAgBla,iBAAiBruC,IAEpF+uD,EAAKnjB,EAAU/jB,IACfonC,EAAKrjB,EAAU9jB,OACf6mC,EAAMH,EAAcF,EACpBO,EAAMF,EAAMR,OACP,GAAa,MAAT7nB,EAAc,CACvB,GAAiB,WAAbiU,EACFiU,EAAcD,GAAkB3iB,EAAUnmC,KAAOmmC,EAAUlmC,OAAS,QAC/D,GAAIQ,EAASq0C,GAAW,CAC7B,MAAMgO,EAAiBnpD,OAAO2D,KAAKw3C,GAAU,GACvCv6C,EAAQu6C,EAASgO,GACvBiG,EAAcD,EAAiB7sD,KAAK7D,MAAM4lB,OAAO8kC,GAAgBla,iBAAiBruC,IAEpF0uD,EAAMF,EAAcF,EACpBM,EAAMF,EAAMP,EACZW,EAAKljB,EAAUnmC,KACfupD,EAAKpjB,EAAUlmC,MAEjB,MAAMwpD,EAAQ3oD,EAAe9G,EAAQ6uC,MAAMoW,cAAewJ,GACpDiB,EAAOllD,KAAKuC,IAAI,EAAGvC,KAAK67C,KAAKoI,EAAcgB,IACjD,IAAKloD,EAAI,EAAGA,EAAIknD,EAAalnD,GAAKmoD,EAAM,CACtC,MAAMC,EAAc/b,EAAK/iB,WAAW5uB,KAAKmB,WAAWmE,IAC9CqiB,EAAY+lC,EAAY/lC,UACxBgmC,EAAYD,EAAY3uC,MACxB+d,EAAa6U,EAAK7U,YAAc,GAChCC,EAAmB2wB,EAAY3wB,iBAC/B4nB,EAAY+I,EAAY/I,UACxBC,EAAY8I,EAAY9I,UACxBgJ,EAAiBF,EAAYE,gBAAkB,GAC/CC,EAAuBH,EAAYG,qBACzC1H,EAAYH,GAAoBhmD,KAAMsF,EAAGosC,QACvB31C,IAAdoqD,IAGJ4G,EAAmB3oC,GAAYjoB,EAAOgqD,EAAWx+B,GAC7C2mB,EACF0e,EAAME,EAAME,EAAKE,EAAKP,EAEtBE,EAAME,EAAME,EAAKE,EAAKR,EAExBtgC,EAAMhvB,KAAK,CACTuvD,MACAC,MACAC,MACAC,MACAC,KACAC,KACAC,KACAC,KACAnuD,MAAOuoB,EACP5I,MAAO4uC,EACP7wB,aACAC,mBACA4nB,YACAC,YACAgJ,iBACAC,0BAKJ,OAFA7tD,KAAK6nD,aAAe2E,EACpBxsD,KAAK8nD,aAAegF,EACbrgC,EAET,mBAAmByd,GACjB,MAAMtF,EAAO5kC,KAAK4kC,KACZ7mC,EAAUiC,KAAKjC,SACf,SAAC86C,EAAUjM,MAAO0f,GAAevuD,EACjCuwC,EAAetuC,KAAKsuC,eACpB1B,EAAQ5sC,KAAK4sC,OACb,MAAClpC,EAAK,WAAE4hD,EAAU,QAAE9H,EAAO,OAAEwH,GAAUsH,EACvCG,EAAKpG,GAAkBtoD,EAAQ4zC,MAC/Bmc,EAAiBrB,EAAKjP,EACtBuQ,EAAkB/I,GAAUxH,EAAUsQ,EACtC9oC,GAAYja,EAAU/K,KAAKmnD,eAC3B16B,EAAQ,GACd,IAAInnB,EAAGK,EAAM04B,EAAMngC,EAAOkM,EAAGC,EAAG6d,EAAW7D,EAAOzD,EAAME,EAAYktC,EAAWC,EAC3E9lC,EAAe,SACnB,GAAiB,QAAb0wB,EACFxuC,EAAIrK,KAAKomB,OAAS2nC,EAClB7lC,EAAYloB,KAAKkuD,+BACZ,GAAiB,WAAbrV,EACTxuC,EAAIrK,KAAKmmB,IAAM4nC,EACf7lC,EAAYloB,KAAKkuD,+BACZ,GAAiB,SAAbrV,EAAqB,CAC9B,MAAMznC,EAAMpR,KAAKmuD,wBAAwB1B,GACzCvkC,EAAY9W,EAAI8W,UAChB9d,EAAIgH,EAAIhH,OACH,GAAiB,UAAbyuC,EAAsB,CAC/B,MAAMznC,EAAMpR,KAAKmuD,wBAAwB1B,GACzCvkC,EAAY9W,EAAI8W,UAChB9d,EAAIgH,EAAIhH,OACH,GAAa,MAATw6B,EAAc,CACvB,GAAiB,WAAbiU,EACFxuC,GAAM6/B,EAAU/jB,IAAM+jB,EAAU9jB,QAAU,EAAK0nC,OAC1C,GAAItpD,EAASq0C,GAAW,CAC7B,MAAMgO,EAAiBnpD,OAAO2D,KAAKw3C,GAAU,GACvCv6C,EAAQu6C,EAASgO,GACvBx8C,EAAIrK,KAAK7D,MAAM4lB,OAAO8kC,GAAgBla,iBAAiBruC,GAASwvD,EAElE5lC,EAAYloB,KAAKkuD,+BACZ,GAAa,MAATtpB,EAAc,CACvB,GAAiB,WAAbiU,EACFzuC,GAAM8/B,EAAUnmC,KAAOmmC,EAAUlmC,OAAS,EAAK8pD,OAC1C,GAAItpD,EAASq0C,GAAW,CAC7B,MAAMgO,EAAiBnpD,OAAO2D,KAAKw3C,GAAU,GACvCv6C,EAAQu6C,EAASgO,GACvBz8C,EAAIpK,KAAK7D,MAAM4lB,OAAO8kC,GAAgBla,iBAAiBruC,GAEzD4pB,EAAYloB,KAAKmuD,wBAAwB1B,GAAIvkC,UAElC,MAAT0c,IACY,UAAVlhC,EACFykB,EAAe,MACI,QAAVzkB,IACTykB,EAAe,WAGnB,MAAMkiC,EAAarqD,KAAKsqD,iBACxB,IAAKhlD,EAAI,EAAGK,EAAOinC,EAAMxuC,OAAQkH,EAAIK,IAAQL,EAAG,CAC9C+4B,EAAOuO,EAAMtnC,GACbpH,EAAQmgC,EAAKngC,MACb,MAAMwvD,EAAcpB,EAAY19B,WAAW5uB,KAAKmB,WAAWmE,IAC3D+e,EAAQrkB,KAAK6sC,gBAAgBvnC,GAAKgnD,EAAYlH,YAC9CxkC,EAAO5gB,KAAKksD,wBAAwB5mD,GACpCwb,EAAaF,EAAKE,WAClBktC,EAAY1pD,EAAQpG,GAASA,EAAME,OAAS,EAC5C,MAAMgwD,EAAYJ,EAAY,EACxBjvC,EAAQ2uC,EAAY3uC,MACpBwI,EAAcmmC,EAAYxI,gBAC1B59B,EAAcomC,EAAYzI,gBAChC,IAoCIoJ,EApCAC,EAAgBpmC,EAqCpB,GApCIomB,GACFlkC,EAAIia,EACc,UAAd6D,IAEAomC,EADEhpD,IAAMK,EAAO,EACE3F,KAAKjC,QAAQsH,QAAoB,OAAV,QACzB,IAANC,EACQtF,KAAKjC,QAAQsH,QAAmB,QAAT,OAExB,UAKhB4oD,EAFa,QAAbpV,EACiB,SAAfyM,GAAsC,IAAbtgC,GACbgpC,EAAYltC,EAAaA,EAAa,EAC5B,WAAfwkC,GACK+E,EAAWK,QAAQprD,OAAS,EAAI8uD,EAAYttC,EAAaA,GAEzDupC,EAAWK,QAAQprD,OAASwhB,EAAa,EAGtC,SAAfwkC,GAAsC,IAAbtgC,EACdlE,EAAa,EACF,WAAfwkC,EACI+E,EAAWK,QAAQprD,OAAS,EAAI8uD,EAAYttC,EAE5CupC,EAAWK,QAAQprD,OAAS0uD,EAAYltC,EAGrDkkC,IACFiJ,IAAe,KAGjB5jD,EAAIga,EACJ4pC,GAAc,EAAID,GAAaltC,EAAa,GAG1C4sC,EAAYnI,kBAAmB,CACjC,MAAMgJ,EAAexkC,GAAU2jC,EAAYjI,iBACrCnmD,EAAS+qD,EAAWuB,QAAQtmD,GAC5BlG,EAAQirD,EAAWsB,OAAOrmD,GAChC,IAAI6gB,EAAM9b,EAAI4jD,EAAaM,EAAapoC,IACpCpiB,EAAOqG,EAAImkD,EAAaxqD,KAC5B,OAAQokB,GACR,IAAK,SACHhC,GAAO7mB,EAAS,EAChB,MACF,IAAK,SACH6mB,GAAO7mB,EACP,MAEF,OAAQ4oB,GACR,IAAK,SACHnkB,GAAQ3E,EAAQ,EAChB,MACF,IAAK,QACH2E,GAAQ3E,EACR,MAEFivD,EAAW,CACTtqD,OACAoiB,MACA/mB,MAAOA,EAAQmvD,EAAanvD,MAC5BE,OAAQA,EAASivD,EAAajvD,OAC9Byf,MAAO2uC,EAAYlI,eAGvB/4B,EAAMhvB,KAAK,CACTunB,WACA9mB,QACA0iB,OACA7B,QACAwI,cACAD,cACA2mC,aACA/lC,UAAWomC,EACXnmC,eACAH,YAAa,CAAC5d,EAAGC,GACjBgkD,aAGJ,OAAO5hC,EAET,0BACE,MAAM,SAACosB,EAAQ,MAAEjM,GAAS5sC,KAAKjC,QACzBinB,GAAYja,EAAU/K,KAAKmnD,eACjC,GAAIniC,EACF,MAAoB,QAAb6zB,EAAqB,OAAS,QAEvC,IAAIn1C,EAAQ,SAQZ,MAPoB,UAAhBkpC,EAAMlpC,MACRA,EAAQ,OACiB,QAAhBkpC,EAAMlpC,MACfA,EAAQ,QACiB,UAAhBkpC,EAAMlpC,QACfA,EAAQ,SAEHA,EAET,wBAAwB+oD,GACtB,MAAM,SAAC5T,EAAUjM,OAAO,WAAC0Y,EAAU,OAAEN,EAAM,QAAExH,IAAYx9C,KAAKjC,QACxDssD,EAAarqD,KAAKsqD,iBAClBwD,EAAiBrB,EAAKjP,EACtBgN,EAASH,EAAWG,OAAOprD,MACjC,IAAI8oB,EACA9d,EAoDJ,MAnDiB,SAAbyuC,EACEmM,GACF56C,EAAIpK,KAAKgE,MAAQw5C,EACE,SAAf8H,EACFp9B,EAAY,OACY,WAAfo9B,GACTp9B,EAAY,SACZ9d,GAAMogD,EAAS,IAEftiC,EAAY,QACZ9d,GAAKogD,KAGPpgD,EAAIpK,KAAKgE,MAAQ8pD,EACE,SAAfxI,EACFp9B,EAAY,QACY,WAAfo9B,GACTp9B,EAAY,SACZ9d,GAAMogD,EAAS,IAEftiC,EAAY,OACZ9d,EAAIpK,KAAK+D,OAGS,UAAb80C,EACLmM,GACF56C,EAAIpK,KAAK+D,KAAOy5C,EACG,SAAf8H,EACFp9B,EAAY,QACY,WAAfo9B,GACTp9B,EAAY,SACZ9d,GAAMogD,EAAS,IAEftiC,EAAY,OACZ9d,GAAKogD,KAGPpgD,EAAIpK,KAAK+D,KAAO+pD,EACG,SAAfxI,EACFp9B,EAAY,OACY,WAAfo9B,GACTp9B,EAAY,SACZ9d,GAAKogD,EAAS,IAEdtiC,EAAY,QACZ9d,EAAIpK,KAAKgE,QAIbkkB,EAAY,QAEP,CAACA,YAAW9d,KAErB,oBACE,GAAIpK,KAAKjC,QAAQ6uC,MAAMoY,OACrB,OAEF,MAAM7oD,EAAQ6D,KAAK7D,MACb08C,EAAW74C,KAAKjC,QAAQ86C,SAC9B,MAAiB,SAAbA,GAAoC,UAAbA,EAClB,CAAC1yB,IAAK,EAAGpiB,KAAM/D,KAAK+D,KAAMqiB,OAAQjqB,EAAMmD,OAAQ0E,MAAOhE,KAAKgE,OAClD,QAAb60C,GAAmC,WAAbA,EACnB,CAAC1yB,IAAKnmB,KAAKmmB,IAAKpiB,KAAM,EAAGqiB,OAAQpmB,KAAKomB,OAAQpiB,MAAO7H,EAAMiD,YADlE,EAIJ,iBACE,MAAM,IAAC6hB,EAAKljB,SAAS,gBAACsiB,GAAgB,KAAEtc,EAAI,IAAEoiB,EAAG,MAAE/mB,EAAK,OAAEE,GAAUU,KAChEqgB,IACFY,EAAI4C,OACJ5C,EAAIgH,UAAY5H,EAChBY,EAAIutC,SAASzqD,EAAMoiB,EAAK/mB,EAAOE,GAC/B2hB,EAAIgD,WAGR,qBAAqB3lB,GACnB,MAAMqzC,EAAO3xC,KAAKjC,QAAQ4zC,KAC1B,IAAK3xC,KAAKoqD,eAAiBzY,EAAK6F,QAC9B,OAAO,EAET,MAAM5K,EAAQ5sC,KAAK4sC,MACbruC,EAAQquC,EAAM6hB,UAAU3hD,GAAKA,EAAExO,QAAUA,GAC/C,GAAIC,GAAS,EAAG,CACd,MAAM6oB,EAAOuqB,EAAK/iB,WAAW5uB,KAAKmB,WAAW5C,IAC7C,OAAO6oB,EAAKO,UAEd,OAAO,EAET,SAASuiB,GACP,MAAMyH,EAAO3xC,KAAKjC,QAAQ4zC,KACpB1wB,EAAMjhB,KAAKihB,IACXwL,EAAQzsB,KAAKqnD,iBAAmBrnD,KAAKqnD,eAAiBrnD,KAAK0uD,sBAAsBxkB,IACvF,IAAI5kC,EAAGK,EACP,MAAMgpD,EAAW,CAACt8C,EAAIC,EAAI1Q,KACnBA,EAAMxC,OAAUwC,EAAMmd,QAG3BkC,EAAI4C,OACJ5C,EAAI0G,UAAY/lB,EAAMxC,MACtB6hB,EAAIyG,YAAc9lB,EAAMmd,MACxBkC,EAAI2tC,YAAYhtD,EAAMk7B,YAAc,IACpC7b,EAAI4tC,eAAiBjtD,EAAMm7B,iBAC3B9b,EAAIoE,YACJpE,EAAIuE,OAAOnT,EAAGjI,EAAGiI,EAAGhI,GACpB4W,EAAIwE,OAAOnT,EAAGlI,EAAGkI,EAAGjI,GACpB4W,EAAI6E,SACJ7E,EAAIgD,YAEN,GAAI0tB,EAAK6F,QACP,IAAKlyC,EAAI,EAAGK,EAAO8mB,EAAMruB,OAAQkH,EAAIK,IAAQL,EAAG,CAC9C,MAAM4C,EAAOukB,EAAMnnB,GACfqsC,EAAK8S,iBACPkK,EACE,CAACvkD,EAAGlC,EAAKklD,GAAI/iD,EAAGnC,EAAKmlD,IACrB,CAACjjD,EAAGlC,EAAKolD,GAAIjjD,EAAGnC,EAAKqlD,IACrBrlD,GAGAypC,EAAK+S,WACPiK,EACE,CAACvkD,EAAGlC,EAAK8kD,IAAK3iD,EAAGnC,EAAK+kD,KACtB,CAAC7iD,EAAGlC,EAAKglD,IAAK7iD,EAAGnC,EAAKilD,KACtB,CACEpuC,MAAO7W,EAAK08C,UACZxlD,MAAO8I,EAAKy8C,UACZ7nB,WAAY50B,EAAK0lD,eACjB7wB,iBAAkB70B,EAAK2lD,wBAOnC,aACE,MAAM,MAAC1xD,EAAK,IAAE8kB,EAAKljB,SAAS,KAAC4zC,IAAS3xC,KAChC0sD,EAAa/a,EAAK/iB,WAAW5uB,KAAKmB,cAClCwrD,EAAYhb,EAAK6S,WAAakI,EAAW7mC,YAAc,EAC7D,IAAK8mC,EACH,OAEF,MAAMmC,EAAgBnd,EAAK/iB,WAAW5uB,KAAKmB,WAAW,IAAIwmB,UACpDmlC,EAAc9sD,KAAK8nD,aACzB,IAAIsF,EAAIE,EAAID,EAAIE,EACZvtD,KAAKsuC,gBACP8e,EAAKhpC,GAAYjoB,EAAO6D,KAAK+D,KAAM4oD,GAAaA,EAAY,EAC5DW,EAAKlpC,GAAYjoB,EAAO6D,KAAKgE,MAAO8qD,GAAiBA,EAAgB,EACrEzB,EAAKE,EAAKT,IAEVO,EAAKjpC,GAAYjoB,EAAO6D,KAAKmmB,IAAKwmC,GAAaA,EAAY,EAC3DY,EAAKnpC,GAAYjoB,EAAO6D,KAAKomB,OAAQ0oC,GAAiBA,EAAgB,EACtE1B,EAAKE,EAAKR,GAEZ7rC,EAAI4C,OACJ5C,EAAI0G,UAAY+kC,EAAW7mC,YAC3B5E,EAAIyG,YAAcglC,EAAWpsC,YAC7BW,EAAIoE,YACJpE,EAAIuE,OAAO4nC,EAAIC,GACfpsC,EAAIwE,OAAO6nC,EAAIC,GACftsC,EAAI6E,SACJ7E,EAAIgD,UAEN,WAAWimB,GACT,MAAMoiB,EAActsD,KAAKjC,QAAQ6uC,MACjC,IAAK0f,EAAY9U,QACf,OAEF,MAAMv2B,EAAMjhB,KAAKihB,IACXgF,EAAOjmB,KAAK+uD,oBACd9oC,GACFI,GAASpF,EAAKgF,GAEhB,MAAMwG,EAAQzsB,KAAKsnD,cAAgBtnD,KAAKsnD,YAActnD,KAAKgvD,mBAAmB9kB,IAC9E,IAAI5kC,EAAGK,EACP,IAAKL,EAAI,EAAGK,EAAO8mB,EAAMruB,OAAQkH,EAAIK,IAAQL,EAAG,CAC9C,MAAM4C,EAAOukB,EAAMnnB,GACbumD,EAAW3jD,EAAK0Y,KAChB1iB,EAAQgK,EAAKhK,MACfgK,EAAKmmD,WACPptC,EAAIgH,UAAY/f,EAAKmmD,SAAStvC,MAC9BkC,EAAIutC,SAAStmD,EAAKmmD,SAAStqD,KAAMmE,EAAKmmD,SAASloC,IAAKje,EAAKmmD,SAASjvD,MAAO8I,EAAKmmD,SAAS/uD,SAEzF,IAAI+K,EAAInC,EAAK+lD,WACb/mC,GAAWjG,EAAK/iB,EAAO,EAAGmM,EAAGwhD,EAAU3jD,GAErC+d,GACFM,GAAWtF,GAGf,YACE,MAAM,IAACA,EAAKljB,SAAS,SAAC86C,EAAQ,MAAEgM,EAAK,QAAEx/C,IAAYrF,KACnD,IAAK6kD,EAAMrN,QACT,OAEF,MAAM52B,EAAOoJ,GAAO66B,EAAMjkC,MACpB48B,EAAUzzB,GAAU86B,EAAMrH,SAC1B95C,EAAQmhD,EAAMnhD,MACpB,IAAIguC,EAAS9wB,EAAKE,WAAa,EACd,WAAb+3B,GAAsC,WAAbA,GAAyBr0C,EAASq0C,IAC7DnH,GAAU8L,EAAQp3B,OACd9hB,EAAQugD,EAAM19B,QAChBuqB,GAAU9wB,EAAKE,YAAc+jC,EAAM19B,KAAK/oB,OAAS,KAGnDszC,GAAU8L,EAAQr3B,IAEpB,MAAM,OAACwgC,EAAM,OAAEC,EAAM,SAAE/+B,EAAQ,SAAE7C,GAAY0hC,GAAU1mD,KAAM0xC,EAAQmH,EAAUn1C,GAC/EwjB,GAAWjG,EAAK4jC,EAAM19B,KAAM,EAAG,EAAGvG,EAAM,CACtC7B,MAAO8lC,EAAM9lC,MACb8I,WACA7C,WACAkD,UAAWu+B,GAAW/iD,EAAOm1C,EAAUxzC,GACvC8iB,aAAc,SACdH,YAAa,CAAC2+B,EAAQC,KAG1B,KAAK1c,GACElqC,KAAKoqD,eAGVpqD,KAAKivD,iBACLjvD,KAAKkvD,SAAShlB,GACdlqC,KAAKwkD,aACLxkD,KAAKmvD,YACLnvD,KAAKovD,WAAWllB,IAElB,UACE,MAAM9iB,EAAOpnB,KAAKjC,QACZsxD,EAAKjoC,EAAKwlB,OAASxlB,EAAKwlB,MAAM+Q,GAAK,EACnC2R,EAAKzqD,EAAeuiB,EAAKuqB,MAAQvqB,EAAKuqB,KAAKgM,GAAI,GACrD,OAAK39C,KAAKoqD,cAAgBpqD,KAAKk+B,OAAS,GAAMp7B,UAAUo7B,KAQjD,CAAC,CACNyf,EAAG2R,EACHpxB,KAAOgM,IACLlqC,KAAKivD,iBACLjvD,KAAKkvD,SAAShlB,GACdlqC,KAAKmvD,cAEN,CACDxR,EAAG2R,EAAK,EACRpxB,KAAM,KACJl+B,KAAKwkD,eAEN,CACD7G,EAAG0R,EACHnxB,KAAOgM,IACLlqC,KAAKovD,WAAWllB,MAtBX,CAAC,CACNyT,EAAG0R,EACHnxB,KAAOgM,IACLlqC,KAAKk+B,KAAKgM,MAuBlB,wBAAwBlrC,GACtB,MAAMkpD,EAAQloD,KAAK7D,MAAM28C,+BACnByW,EAASvvD,KAAK4kC,KAAO,SACrB/6B,EAAS,GACf,IAAIvE,EAAGK,EACP,IAAKL,EAAI,EAAGK,EAAOuiD,EAAM9pD,OAAQkH,EAAIK,IAAQL,EAAG,CAC9C,MAAMwrB,EAAOo3B,EAAM5iD,GACfwrB,EAAKy+B,KAAYvvD,KAAK+B,IAAQ/C,GAAQ8xB,EAAK9xB,OAASA,GACtD6K,EAAOpM,KAAKqzB,GAGhB,OAAOjnB,EAET,wBAAwBtL,GACtB,MAAM6oB,EAAOpnB,KAAKjC,QAAQ6uC,MAAMhe,WAAW5uB,KAAKmB,WAAW5C,IAC3D,OAAOyrB,GAAO5C,EAAKxG,MAErB,aACE,MAAM4uC,EAAWxvD,KAAKksD,wBAAwB,GAAGprC,WACjD,OAAQ9gB,KAAKsuC,eAAiBtuC,KAAKZ,MAAQY,KAAKV,QAAUkwD,GAI9D,MAAM,GACJ,YAAYxwD,EAAMghB,EAAOyN,GACvBztB,KAAKhB,KAAOA,EACZgB,KAAKggB,MAAQA,EACbhgB,KAAKytB,SAAWA,EAChBztB,KAAKysB,MAAQ/uB,OAAOwI,OAAO,MAE7B,UAAUlH,GACR,OAAOtB,OAAOoF,UAAU2sD,cAAczsD,KAAKhD,KAAKhB,KAAK8D,UAAW9D,EAAK8D,WAEvE,SAASoF,GACP,MAAMsW,EAAQ9gB,OAAOswB,eAAe9lB,GACpC,IAAIwnD,EACAC,GAAkBnxC,KACpBkxC,EAAc1vD,KAAKC,SAASue,IAE9B,MAAMiO,EAAQzsB,KAAKysB,MACb1qB,EAAKmG,EAAKnG,GACVie,EAAQhgB,KAAKggB,MAAQ,IAAMje,EACjC,IAAKA,EACH,MAAM,IAAId,MAAM,2BAA6BiH,GAE/C,OAAInG,KAAM0qB,IAGVA,EAAM1qB,GAAMmG,EACZ0nD,GAAiB1nD,EAAM8X,EAAO0vC,GAC1B1vD,KAAKytB,UACP5K,GAAS4K,SAASvlB,EAAKnG,GAAImG,EAAKyX,YALzBK,EASX,IAAIje,GACF,OAAO/B,KAAKysB,MAAM1qB,GAEpB,WAAWmG,GACT,MAAMukB,EAAQzsB,KAAKysB,MACb1qB,EAAKmG,EAAKnG,GACVie,EAAQhgB,KAAKggB,MACfje,KAAM0qB,UACDA,EAAM1qB,GAEXie,GAASje,KAAM8gB,GAAS7C,YACnB6C,GAAS7C,GAAOje,GACnB/B,KAAKytB,iBACA9N,GAAU5d,KAKzB,SAAS6tD,GAAiB1nD,EAAM8X,EAAO0vC,GACrC,MAAMG,EAAelpD,EAAMjJ,OAAOwI,OAAO,MAAO,CAC9CwpD,EAAc7sC,GAASgW,IAAI62B,GAAe,GAC1C7sC,GAASgW,IAAI7Y,GACb9X,EAAK2a,WAEPA,GAAS6J,IAAI1M,EAAO6vC,GAChB3nD,EAAK+5C,eACP6N,GAAc9vC,EAAO9X,EAAK+5C,eAExB/5C,EAAKwnB,aACP7M,GAASX,SAASlC,EAAO9X,EAAKwnB,aAGlC,SAASogC,GAAc9vC,EAAO+vC,GAC5BryD,OAAO2D,KAAK0uD,GAAQ9jC,QAAQrhB,IAC1B,MAAMolD,EAAgBplD,EAASkV,MAAM,KAC/BmwC,EAAaD,EAAchmD,MAC3BkmD,EAAc,CAAClwC,GAAOqsB,OAAO2jB,GAAengC,KAAK,KACjDsgC,EAAQJ,EAAOnlD,GAAUkV,MAAM,KAC/BuC,EAAa8tC,EAAMnmD,MACnBoY,EAAc+tC,EAAMtgC,KAAK,KAC/BhN,GAAS6iC,MAAMwK,EAAaD,EAAY7tC,EAAaC,KAGzD,SAASstC,GAAkBnxC,GACzB,MAAO,OAAQA,GAAS,aAAcA,EAGxC,MAAM,GACJ,cACExe,KAAKowD,YAAc,IAAI,GAAc,GAAmB,YAAY,GACpEpwD,KAAK0gB,SAAW,IAAI,GAAc,GAAS,YAC3C1gB,KAAKP,QAAU,IAAI,GAAc/B,OAAQ,WACzCsC,KAAK+hB,OAAS,IAAI,GAAc,GAAO,UACvC/hB,KAAKqwD,iBAAmB,CAACrwD,KAAKowD,YAAapwD,KAAK+hB,OAAQ/hB,KAAK0gB,UAE/D,OAAO7d,GACL7C,KAAKswD,MAAM,WAAYztD,GAEzB,UAAUA,GACR7C,KAAKswD,MAAM,aAAcztD,GAE3B,kBAAkBA,GAChB7C,KAAKswD,MAAM,WAAYztD,EAAM7C,KAAKowD,aAEpC,eAAevtD,GACb7C,KAAKswD,MAAM,WAAYztD,EAAM7C,KAAK0gB,UAEpC,cAAc7d,GACZ7C,KAAKswD,MAAM,WAAYztD,EAAM7C,KAAKP,SAEpC,aAAaoD,GACX7C,KAAKswD,MAAM,WAAYztD,EAAM7C,KAAK+hB,QAEpC,cAAchgB,GACZ,OAAO/B,KAAKuwD,KAAKxuD,EAAI/B,KAAKowD,YAAa,cAEzC,WAAWruD,GACT,OAAO/B,KAAKuwD,KAAKxuD,EAAI/B,KAAK0gB,SAAU,WAEtC,UAAU3e,GACR,OAAO/B,KAAKuwD,KAAKxuD,EAAI/B,KAAKP,QAAS,UAErC,SAASsC,GACP,OAAO/B,KAAKuwD,KAAKxuD,EAAI/B,KAAK+hB,OAAQ,SAEpC,qBAAqBlf,GACnB7C,KAAKswD,MAAM,aAAcztD,EAAM7C,KAAKowD,aAEtC,kBAAkBvtD,GAChB7C,KAAKswD,MAAM,aAAcztD,EAAM7C,KAAK0gB,UAEtC,iBAAiB7d,GACf7C,KAAKswD,MAAM,aAAcztD,EAAM7C,KAAKP,SAEtC,gBAAgBoD,GACd7C,KAAKswD,MAAM,aAAcztD,EAAM7C,KAAK+hB,QAEtC,MAAMmK,EAAQrpB,EAAM2tD,GAClB,IAAI3tD,GAAMopB,QAAQwkC,IAChB,MAAMC,EAAMF,GAAiBxwD,KAAK2wD,oBAAoBF,GAClDD,GAAiBE,EAAIE,UAAUH,IAASC,IAAQ1wD,KAAKP,SAAWgxD,EAAI1uD,GACtE/B,KAAK6wD,MAAM3kC,EAAQwkC,EAAKD,GAExBtrD,EAAKsrD,EAAKvoD,IACR,MAAM4oD,EAAUN,GAAiBxwD,KAAK2wD,oBAAoBzoD,GAC1DlI,KAAK6wD,MAAM3kC,EAAQ4kC,EAAS5oD,OAKpC,MAAMgkB,EAAQ6kC,EAAUC,GACtB,MAAMC,EAAczpD,EAAY0kB,GAChC5pB,EAAS0uD,EAAU,SAAWC,GAAc,GAAID,GAChDD,EAAS7kC,GAAQ8kC,GACjB1uD,EAAS0uD,EAAU,QAAUC,GAAc,GAAID,GAEjD,oBAAoBhyD,GAClB,IAAK,IAAIsG,EAAI,EAAGA,EAAItF,KAAKqwD,iBAAiBjyD,OAAQkH,IAAK,CACrD,MAAMorD,EAAM1wD,KAAKqwD,iBAAiB/qD,GAClC,GAAIorD,EAAIE,UAAU5xD,GAChB,OAAO0xD,EAGX,OAAO1wD,KAAKP,QAEd,KAAKsC,EAAIyuD,EAAexxD,GACtB,MAAMkJ,EAAOsoD,EAAc33B,IAAI92B,GAC/B,QAAahG,IAATmM,EACF,MAAM,IAAIjH,MAAM,IAAMc,EAAK,yBAA2B/C,EAAO,KAE/D,OAAOkJ,GAGX,IAAI,GAAW,IAAI,GAEnB,MAAM,GACJ,cACElI,KAAKkxD,MAAQ,GAEf,OAAO/0D,EAAOg1D,EAAMtuD,EAAMotB,GACX,eAATkhC,IACFnxD,KAAKkxD,MAAQlxD,KAAKoxD,mBAAmBj1D,GAAO,GAC5C6D,KAAKs+B,QAAQt+B,KAAKkxD,MAAO/0D,EAAO,YAElC,MAAMuzB,EAAcO,EAASjwB,KAAKmgB,aAAahkB,GAAO8zB,OAAOA,GAAUjwB,KAAKmgB,aAAahkB,GACnF0N,EAAS7J,KAAKs+B,QAAQ5O,EAAavzB,EAAOg1D,EAAMtuD,GAKtD,MAJa,iBAATsuD,IACFnxD,KAAKs+B,QAAQ5O,EAAavzB,EAAO,QACjC6D,KAAKs+B,QAAQt+B,KAAKkxD,MAAO/0D,EAAO,cAE3B0N,EAET,QAAQ6lB,EAAavzB,EAAOg1D,EAAMtuD,GAChCA,EAAOA,GAAQ,GACf,IAAK,MAAMwuD,KAAc3hC,EAAa,CACpC,MAAM4hC,EAASD,EAAWC,OACpBplC,EAASolC,EAAOH,GAChBhW,EAAS,CAACh/C,EAAO0G,EAAMwuD,EAAWtzD,SACxC,IAAyC,IAArCuE,EAAS4pB,EAAQivB,EAAQmW,IAAqBzuD,EAAK0uD,WACrD,OAAO,EAGX,OAAO,EAET,aACOltD,EAAcrE,KAAKksC,UACtBlsC,KAAKwxD,UAAYxxD,KAAKksC,OACtBlsC,KAAKksC,YAASnwC,GAGlB,aAAaI,GACX,GAAI6D,KAAKksC,OACP,OAAOlsC,KAAKksC,OAEd,MAAMxc,EAAc1vB,KAAKksC,OAASlsC,KAAKoxD,mBAAmBj1D,GAE1D,OADA6D,KAAKyxD,oBAAoBt1D,GAClBuzB,EAET,mBAAmBvzB,EAAO+lC,GACxB,MAAMhB,EAAS/kC,GAASA,EAAM+kC,OACxBnjC,EAAU8G,EAAeq8B,EAAOnjC,SAAWmjC,EAAOnjC,QAAQ0B,QAAS,IACnEA,EAAUiyD,GAAWxwB,GAC3B,OAAmB,IAAZnjC,GAAsBmkC,EAAWyvB,GAAkBx1D,EAAOsD,EAAS1B,EAASmkC,GAAhD,GAErC,oBAAoB/lC,GAClB,MAAMy1D,EAAsB5xD,KAAKwxD,WAAa,GACxC9hC,EAAc1vB,KAAKksC,OACnBqY,EAAO,CAACx8C,EAAGC,IAAMD,EAAEkoB,OAAO7lB,IAAMpC,EAAE6pD,KAAKxnD,GAAKD,EAAEknD,OAAOvvD,KAAOsI,EAAEinD,OAAOvvD,KAC3E/B,KAAKs+B,QAAQimB,EAAKqN,EAAqBliC,GAAcvzB,EAAO,QAC5D6D,KAAKs+B,QAAQimB,EAAK70B,EAAakiC,GAAsBz1D,EAAO,UAGhE,SAASu1D,GAAWxwB,GAClB,MAAMzhC,EAAU,GACV4B,EAAO3D,OAAO2D,KAAK,GAAS5B,QAAQgtB,OAC1C,IAAK,IAAInnB,EAAI,EAAGA,EAAIjE,EAAKjD,OAAQkH,IAC/B7F,EAAQhC,KAAK,GAASq0D,UAAUzwD,EAAKiE,KAEvC,MAAMsd,EAAQse,EAAOzhC,SAAW,GAChC,IAAK,IAAI6F,EAAI,EAAGA,EAAIsd,EAAMxkB,OAAQkH,IAAK,CACrC,MAAMgsD,EAAS1uC,EAAMtd,IACY,IAA7B7F,EAAQ8G,QAAQ+qD,IAClB7xD,EAAQhC,KAAK6zD,GAGjB,OAAO7xD,EAET,SAASsyD,GAAQh0D,EAASmkC,GACxB,OAAKA,IAAmB,IAAZnkC,GAGI,IAAZA,EACK,GAEFA,EALE,KAOX,SAAS4zD,GAAkBx1D,EAAOsD,EAAS1B,EAASmkC,GAClD,MAAMr4B,EAAS,GACT/N,EAAUK,EAAMgF,aACtB,IAAK,IAAImE,EAAI,EAAGA,EAAI7F,EAAQrB,OAAQkH,IAAK,CACvC,MAAMgsD,EAAS7xD,EAAQ6F,GACjBvD,EAAKuvD,EAAOvvD,GACZqlB,EAAO2qC,GAAQh0D,EAAQgE,GAAKmgC,GACrB,OAAT9a,GAGJvd,EAAOpM,KAAK,CACV6zD,SACAvzD,QAASi0D,GAAW71D,EAAM+kC,OAAQowB,EAAQlqC,EAAMtrB,KAGpD,OAAO+N,EAET,SAASmoD,GAAW9wB,EAAQowB,EAAQlqC,EAAMtrB,GACxC,MAAMuF,EAAO6/B,EAAO+wB,gBAAgBX,GAC9BxkC,EAASoU,EAAOwH,gBAAgBthB,EAAM/lB,GAC5C,OAAO6/B,EAAOyH,eAAe7b,EAAQhxB,EAAS,CAAC,IAAK,CAACmzB,YAAY,EAAOC,WAAW,EAAOH,SAAS,IAGrG,SAASmjC,GAAalzD,EAAMjB,GAC1B,MAAMo0D,EAAkBtvC,GAAS/lB,SAASkC,IAAS,GAC7CozD,GAAkBr0D,EAAQjB,UAAY,IAAIkC,IAAS,GACzD,OAAOozD,EAAehxC,WAAarjB,EAAQqjB,WAAa+wC,EAAgB/wC,WAAa,IAEvF,SAASixC,GAA0BtwD,EAAIqf,GACrC,IAAIwjB,EAAO7iC,EAMX,MALW,YAAPA,EACF6iC,EAAOxjB,EACS,YAAPrf,IACT6iC,EAAqB,MAAdxjB,EAAoB,IAAM,KAE5BwjB,EAET,SAAS0tB,GAA0B1tB,EAAMxjB,GACvC,OAAOwjB,IAASxjB,EAAY,UAAY,UAE1C,SAASmxC,GAAiB1Z,GACxB,MAAiB,QAAbA,GAAmC,WAAbA,EACjB,IAEQ,SAAbA,GAAoC,UAAbA,EAClB,SADT,EAIF,SAAS2Z,GAAczwD,EAAI0wD,GACzB,MAAW,MAAP1wD,GAAqB,MAAPA,EACTA,EAEF0wD,EAAa7tB,MAAQ2tB,GAAiBE,EAAa5Z,WAAa92C,EAAG2F,OAAO,GAAGmW,cAEtF,SAAS60C,GAAiBxxB,EAAQnjC,GAChC,MAAM40D,EAAgBhzC,GAAUuhB,EAAOliC,OAAS,CAAC+iB,OAAQ,IACnD6wC,EAAe70D,EAAQgkB,QAAU,GACjC8wC,EAAiBX,GAAahxB,EAAOliC,KAAMjB,GAC3C+0D,EAAWp1D,OAAOwI,OAAO,MACzB6b,EAASrkB,OAAOwI,OAAO,MA+B7B,OA9BAxI,OAAO2D,KAAKuxD,GAAc3mC,QAAQlqB,IAChC,MAAMgxD,EAAYH,EAAa7wD,GAC/B,IAAKyC,EAASuuD,GACZ,OAAO7oC,QAAQ8oC,MAAM,0CAA0CjxD,GAEjE,GAAIgxD,EAAUvkC,OACZ,OAAOtE,QAAQC,KAAK,kDAAkDpoB,GAExE,MAAM6iC,EAAO4tB,GAAczwD,EAAIgxD,GACzBE,EAAYX,GAA0B1tB,EAAMiuB,GAC5CK,EAAsBP,EAAc5wC,QAAU,GACpD+wC,EAASluB,GAAQkuB,EAASluB,IAAS7iC,EACnCggB,EAAOhgB,GAAM+E,EAAQpJ,OAAOwI,OAAO,MAAO,CAAC,CAAC0+B,QAAOmuB,EAAWG,EAAoBtuB,GAAOsuB,EAAoBD,OAE/G/xB,EAAOxkC,KAAKI,SAASmvB,QAAQ1uB,IAC3B,MAAMyB,EAAOzB,EAAQyB,MAAQkiC,EAAOliC,KAC9BoiB,EAAY7jB,EAAQ6jB,WAAa8wC,GAAalzD,EAAMjB,GACpDo0D,EAAkBxyC,GAAU3gB,IAAS,GACrCk0D,EAAsBf,EAAgBpwC,QAAU,GACtDrkB,OAAO2D,KAAK6xD,GAAqBjnC,QAAQknC,IACvC,MAAMvuB,EAAOytB,GAA0Bc,EAAW/xC,GAC5Crf,EAAKxE,EAAQqnC,EAAO,WAAakuB,EAASluB,IAASA,EACzD7iB,EAAOhgB,GAAMggB,EAAOhgB,IAAOrE,OAAOwI,OAAO,MACzCY,EAAQib,EAAOhgB,GAAK,CAAC,CAAC6iC,QAAOguB,EAAa7wD,GAAKmxD,EAAoBC,SAGvEz1D,OAAO2D,KAAK0gB,GAAQkK,QAAQ3lB,IAC1B,MAAMwb,EAAQC,EAAOzb,GACrBQ,EAAQgb,EAAO,CAACe,GAASd,OAAOD,EAAM9iB,MAAO6jB,GAASf,UAEjDC,EAET,SAASqxC,GAAYlyB,GACnB,MAAMnjC,EAAUmjC,EAAOnjC,UAAYmjC,EAAOnjC,QAAU,IACpDA,EAAQ0B,QAAUoF,EAAe9G,EAAQ0B,QAAS,IAClD1B,EAAQgkB,OAAS2wC,GAAiBxxB,EAAQnjC,GAE5C,SAASs1D,GAAS32D,GAIhB,OAHAA,EAAOA,GAAQ,GACfA,EAAKI,SAAWJ,EAAKI,UAAY,GACjCJ,EAAKG,OAASH,EAAKG,QAAU,GACtBH,EAET,SAAS42D,GAAWpyB,GAIlB,OAHAA,EAASA,GAAU,GACnBA,EAAOxkC,KAAO22D,GAASnyB,EAAOxkC,MAC9B02D,GAAYlyB,GACLA,EAET,MAAMqyB,GAAW,IAAIj7B,IACfk7B,GAAa,IAAI7mC,IACvB,SAAS8mC,GAAWh7B,EAAUi7B,GAC5B,IAAIryD,EAAOkyD,GAAS16B,IAAIJ,GAMxB,OALKp3B,IACHA,EAAOqyD,IACPH,GAAS7mC,IAAI+L,EAAUp3B,GACvBmyD,GAAW1oC,IAAIzpB,IAEVA,EAET,MAAMsyD,GAAa,CAACjnC,EAAKplB,EAAKhB,KAC5B,MAAM8gB,EAAO/f,EAAiBC,EAAKhB,QACtBvK,IAATqrB,GACFsF,EAAI5B,IAAI1D,IAGZ,MAAM,GACJ,YAAY8Z,GACVlhC,KAAK4zD,QAAUN,GAAWpyB,GAC1BlhC,KAAK6zD,YAAc,IAAIv7B,IACvBt4B,KAAK8zD,eAAiB,IAAIx7B,IAE5B,eACE,OAAOt4B,KAAK4zD,QAAQpzC,SAEtB,WACE,OAAOxgB,KAAK4zD,QAAQ50D,KAEtB,SAASA,GACPgB,KAAK4zD,QAAQ50D,KAAOA,EAEtB,WACE,OAAOgB,KAAK4zD,QAAQl3D,KAEtB,SAASA,GACPsD,KAAK4zD,QAAQl3D,KAAO22D,GAAS32D,GAE/B,cACE,OAAOsD,KAAK4zD,QAAQ71D,QAEtB,YAAYA,GACViC,KAAK4zD,QAAQ71D,QAAUA,EAEzB,cACE,OAAOiC,KAAK4zD,QAAQn0D,QAEtB,SACE,MAAMyhC,EAASlhC,KAAK4zD,QACpB5zD,KAAK+zD,aACLX,GAAYlyB,GAEd,aACElhC,KAAK6zD,YAAYG,QACjBh0D,KAAK8zD,eAAeE,QAEtB,iBAAiBC,GACf,OAAOR,GAAWQ,EAChB,IAAM,CAAC,CACL,YAAYA,EACZ,MAGN,0BAA0BA,EAAappB,GACrC,OAAO4oB,GAAW,GAAGQ,gBAA0BppB,IAC7C,IAAM,CACJ,CACE,YAAYopB,iBAA2BppB,IACvC,eAAeA,GAEjB,CACE,YAAYopB,EACZ,MAIR,wBAAwBA,EAAa1pB,GACnC,OAAOkpB,GAAW,GAAGQ,KAAe1pB,IAClC,IAAM,CAAC,CACL,YAAY0pB,cAAwB1pB,IACpC,YAAY0pB,EACZ,YAAY1pB,EACZ,MAGN,gBAAgB+mB,GACd,MAAMvvD,EAAKuvD,EAAOvvD,GACZ/C,EAAOgB,KAAKhB,KAClB,OAAOy0D,GAAW,GAAGz0D,YAAe+C,IAClC,IAAM,CAAC,CACL,WAAWA,KACRuvD,EAAO4C,wBAA0B,MAG1C,cAAcC,EAAWC,GACvB,MAAMP,EAAc7zD,KAAK6zD,YACzB,IAAIlwC,EAAQkwC,EAAYh7B,IAAIs7B,GAK5B,OAJKxwC,IAASywC,IACZzwC,EAAQ,IAAI2U,IACZu7B,EAAYnnC,IAAIynC,EAAWxwC,IAEtBA,EAET,gBAAgBwwC,EAAWE,EAAUD,GACnC,MAAM,QAACr2D,EAAO,KAAEiB,GAAQgB,KAClB2jB,EAAQ3jB,KAAKs0D,cAAcH,EAAWC,GACtCzuB,EAAShiB,EAAMkV,IAAIw7B,GACzB,GAAI1uB,EACF,OAAOA,EAET,MAAM7Y,EAAS,IAAIH,IACnB0nC,EAASpoC,QAAQ5qB,IACX8yD,IACFrnC,EAAOhC,IAAIqpC,GACX9yD,EAAK4qB,QAAQ3lB,GAAOqtD,GAAW7mC,EAAQqnC,EAAW7tD,KAEpDjF,EAAK4qB,QAAQ3lB,GAAOqtD,GAAW7mC,EAAQ/uB,EAASuI,IAChDjF,EAAK4qB,QAAQ3lB,GAAOqtD,GAAW7mC,EAAQnN,GAAU3gB,IAAS,GAAIsH,IAC9DjF,EAAK4qB,QAAQ3lB,GAAOqtD,GAAW7mC,EAAQjK,GAAUvc,IACjDjF,EAAK4qB,QAAQ3lB,GAAOqtD,GAAW7mC,EAAQ,GAAaxmB,MAEtD,MAAMqE,EAAQjL,MAAMktB,KAAKE,GAOzB,OANqB,IAAjBniB,EAAMvM,QACRuM,EAAMlN,KAAKC,OAAOwI,OAAO,OAEvBstD,GAAWrrD,IAAIksD,IACjB1wC,EAAM+I,IAAI2nC,EAAU1pD,GAEfA,EAET,oBACE,MAAM,QAAC5M,EAAO,KAAEiB,GAAQgB,KACxB,MAAO,CACLjC,EACA4hB,GAAU3gB,IAAS,GACnB6jB,GAAS/lB,SAASkC,IAAS,GAC3B,CAACA,QACD6jB,GACA,IAGJ,oBAAoBiK,EAAQ4d,EAAO5uC,EAASixB,EAAW,CAAC,KACtD,MAAMljB,EAAS,CAAC83B,SAAS,IACnB,SAACzR,EAAQ,YAAEqkC,GAAeC,GAAYx0D,KAAK8zD,eAAgBhnC,EAAQC,GACzE,IAAIhvB,EAAUmyB,EACd,GAAIukC,GAAYvkC,EAAUwa,GAAQ,CAChC7gC,EAAO83B,SAAU,EACjB7lC,EAAU+L,EAAW/L,GAAWA,IAAYA,EAC5C,MAAM44D,EAAc10D,KAAK2oC,eAAe7b,EAAQhxB,EAASy4D,GACzDx2D,EAAUqwB,GAAe8B,EAAUp0B,EAAS44D,GAE9C,IAAK,MAAM9qC,KAAQ8gB,EACjB7gC,EAAO+f,GAAQ7rB,EAAQ6rB,GAEzB,OAAO/f,EAET,eAAeijB,EAAQhxB,EAASixB,EAAW,CAAC,IAAKwB,GAC/C,MAAM,SAAC2B,GAAYskC,GAAYx0D,KAAK8zD,eAAgBhnC,EAAQC,GAC5D,OAAOvoB,EAAS1I,GACZsyB,GAAe8B,EAAUp0B,OAASC,EAAWwyB,GAC7C2B,GAGR,SAASskC,GAAYG,EAAe7nC,EAAQC,GAC1C,IAAIpJ,EAAQgxC,EAAc97B,IAAI/L,GACzBnJ,IACHA,EAAQ,IAAI2U,IACZq8B,EAAcjoC,IAAII,EAAQnJ,IAE5B,MAAM8U,EAAW1L,EAAS8C,OAC1B,IAAI8V,EAAShiB,EAAMkV,IAAIJ,GACvB,IAAKkN,EAAQ,CACX,MAAMzV,EAAWrD,GAAgBC,EAAQC,GACzC4Y,EAAS,CACPzV,WACAqkC,YAAaxnC,EAASkD,OAAO7kB,IAAMA,EAAEyS,cAAcrgB,SAAS,WAE9DmmB,EAAM+I,IAAI+L,EAAUkN,GAEtB,OAAOA,EAET,MAAMivB,GAAct2D,GAASkG,EAASlG,IACjCZ,OAAO4jC,oBAAoBhjC,GAAOugC,OAAO,CAACC,EAAKx4B,IAAQw4B,GAAOj3B,EAAWvJ,EAAMgI,KAAO,GAC3F,SAASmuD,GAAYpmC,EAAOqc,GAC1B,MAAM,aAACtb,EAAY,YAAEC,GAAelP,GAAakO,GACjD,IAAK,MAAMzE,KAAQ8gB,EAAO,CACxB,MAAMzb,EAAaG,EAAaxF,GAC1BsF,EAAYG,EAAYzF,GACxBtrB,GAAS4wB,GAAaD,IAAeZ,EAAMzE,GACjD,GAAKqF,IAAepnB,EAAWvJ,IAAUs2D,GAAYt2D,KAC/C4wB,GAAa5qB,EAAQhG,GACzB,OAAO,EAGX,OAAO,EAGT,IAAIu2D,GAAU,QAEd,MAAMC,GAAkB,CAAC,MAAO,SAAU,OAAQ,QAAS,aAC3D,SAASC,GAAqBlc,EAAUjU,GACtC,MAAoB,QAAbiU,GAAmC,WAAbA,IAAiE,IAAvCic,GAAgBvuD,QAAQsyC,IAA6B,MAATjU,EAErG,SAASowB,GAAcC,EAAIC,GACzB,OAAO,SAASntD,EAAGC,GACjB,OAAOD,EAAEktD,KAAQjtD,EAAEitD,GACfltD,EAAEmtD,GAAMltD,EAAEktD,GACVntD,EAAEktD,GAAMjtD,EAAEitD,IAGlB,SAASE,GAAqBr5D,GAC5B,MAAMK,EAAQL,EAAQK,MAChBi5D,EAAmBj5D,EAAM4B,QAAQqiB,UACvCjkB,EAAM2tD,cAAc,eACpBxnD,EAAS8yD,GAAoBA,EAAiBC,WAAY,CAACv5D,GAAUK,GAEvE,SAASm5D,GAAoBx5D,GAC3B,MAAMK,EAAQL,EAAQK,MAChBi5D,EAAmBj5D,EAAM4B,QAAQqiB,UACvC9d,EAAS8yD,GAAoBA,EAAiBG,WAAY,CAACz5D,GAAUK,GAEvE,SAASq5D,GAAUttD,GASjB,OARIisB,MAAqC,kBAATjsB,EAC9BA,EAAOksB,SAASqhC,eAAevtD,GACtBA,GAAQA,EAAK9J,SACtB8J,EAAOA,EAAK,IAEVA,GAAQA,EAAKlH,SACfkH,EAAOA,EAAKlH,QAEPkH,EAET,MAAMwtD,GAAY,GACZC,GAAYrvD,IAChB,MAAMtF,EAASw0D,GAAUlvD,GACzB,OAAO5I,OAAOuiB,OAAOy1C,IAAWzlC,OAAQvf,GAAMA,EAAE1P,SAAWA,GAAQgJ,OAErE,SAAS4rD,GAAgBtuD,EAAK1D,EAAO8nC,GACnC,MAAMrqC,EAAO3D,OAAO2D,KAAKiG,GACzB,IAAK,MAAMhB,KAAOjF,EAAM,CACtB,MAAMw0D,GAAUvvD,EAChB,GAAIuvD,GAAUjyD,EAAO,CACnB,MAAMtF,EAAQgJ,EAAIhB,UACXgB,EAAIhB,IACPolC,EAAO,GAAKmqB,EAASjyD,KACvB0D,EAAIuuD,EAASnqB,GAAQptC,KAK7B,SAASw3D,GAAmBztD,EAAG0tD,EAAWC,EAAaC,GACrD,OAAKD,GAA0B,aAAX3tD,EAAErJ,KAGlBi3D,EACKF,EAEF1tD,EALE,KAOX,MAAM,GACJ,YAAYH,EAAMguD,GAChB,MAAMh1B,EAASlhC,KAAKkhC,OAAS,IAAI,GAAOg1B,GAClCC,EAAgBX,GAAUttD,GAC1BkuD,EAAgBT,GAASQ,GAC/B,GAAIC,EACF,MAAM,IAAIn1D,MACR,4CAA+Cm1D,EAAcr0D,GAA7D,wDAIJ,MAAMhE,EAAUmjC,EAAOyH,eAAezH,EAAOm1B,oBAAqBr2D,KAAKmB,cACvEnB,KAAKwgB,SAAW,IAAK0gB,EAAO1gB,UAAYshC,GAAgBqU,IACxDn2D,KAAKwgB,SAAS81C,aAAap1B,GAC3B,MAAMplC,EAAUkE,KAAKwgB,SAAS+1C,eAAeJ,EAAep4D,EAAQk5B,aAC9Dj2B,EAASlF,GAAWA,EAAQkF,OAC5B1B,EAAS0B,GAAUA,EAAO1B,OAC1BF,EAAQ4B,GAAUA,EAAO5B,MAC/BY,KAAK+B,GAAKqC,IACVpE,KAAKihB,IAAMnlB,EACXkE,KAAKgB,OAASA,EACdhB,KAAKZ,MAAQA,EACbY,KAAKV,OAASA,EACdU,KAAKw2D,SAAWz4D,EAChBiC,KAAKy2D,aAAez2D,KAAKi3B,YACzBj3B,KAAK09C,QAAU,GACf19C,KAAK02D,UAAY,GACjB12D,KAAK0kC,aAAU3oC,EACfiE,KAAK26C,MAAQ,GACb36C,KAAKskB,6BAA0BvoB,EAC/BiE,KAAKkqC,eAAYnuC,EACjBiE,KAAKm+B,QAAU,GACfn+B,KAAK22D,gBAAa56D,EAClBiE,KAAK42D,WAAa,GAClB52D,KAAK62D,0BAAuB96D,EAC5BiE,KAAK82D,gBAAkB,GACvB92D,KAAK+hB,OAAS,GACd/hB,KAAK+2D,SAAW,IAAI,GACpB/2D,KAAKyhD,SAAW,GAChBzhD,KAAKg3D,eAAiB,GACtBh3D,KAAKi3D,UAAW,EAChBj3D,KAAKgrC,yBAAsBjvC,EAC3BiE,KAAK4mC,cAAW7qC,EAChBiE,KAAKk3D,UAAY9zD,EAASke,GAAQthB,KAAK5D,OAAOklB,GAAOvjB,EAAQo5D,aAAe,GAC5En3D,KAAK6rC,aAAe,GACpB6pB,GAAU11D,KAAK+B,IAAM/B,KAChBlE,GAAYkF,GAIjBi+B,GAASm4B,OAAOp3D,KAAM,WAAYm1D,IAClCl2B,GAASm4B,OAAOp3D,KAAM,WAAYs1D,IAClCt1D,KAAKq3D,cACDr3D,KAAKi3D,UACPj3D,KAAK5D,UAPL8tB,QAAQ8oC,MAAM,qEAUlB,kBACE,MAAOj1D,SAAS,YAACk5B,EAAW,oBAAExV,GAAoB,MAAEriB,EAAK,OAAEE,EAAM,aAAEm3D,GAAgBz2D,KACnF,OAAKqE,EAAc4yB,GAGfxV,GAAuBg1C,EAClBA,EAEFn3D,EAASF,EAAQE,EAAS,KALxB23B,EAOX,WACE,OAAOj3B,KAAKkhC,OAAOxkC,KAErB,SAASA,GACPsD,KAAKkhC,OAAOxkC,KAAOA,EAErB,cACE,OAAOsD,KAAKw2D,SAEd,YAAYz4D,GACViC,KAAKkhC,OAAOnjC,QAAUA,EAExB,cASE,OARAiC,KAAK8pD,cAAc,cACf9pD,KAAKjC,QAAQ8jB,WACf7hB,KAAK6gC,SAELzJ,GAAYp3B,KAAMA,KAAKjC,QAAQwiB,kBAEjCvgB,KAAKs3D,aACLt3D,KAAK8pD,cAAc,aACZ9pD,KAET,QAEE,OADAwkB,GAAYxkB,KAAKgB,OAAQhB,KAAKihB,KACvBjhB,KAET,OAEE,OADAi/B,GAASxD,KAAKz7B,MACPA,KAET,OAAOZ,EAAOE,GACP2/B,GAAShB,QAAQj+B,MAGpBA,KAAKu3D,kBAAoB,CAACn4D,QAAOE,UAFjCU,KAAKw3D,QAAQp4D,EAAOE,GAKxB,QAAQF,EAAOE,GACb,MAAMvB,EAAUiC,KAAKjC,QACfiD,EAAShB,KAAKgB,OACdi2B,EAAcl5B,EAAQ0jB,qBAAuBzhB,KAAKi3B,YAClDwgC,EAAUz3D,KAAKwgB,SAASsW,eAAe91B,EAAQ5B,EAAOE,EAAQ23B,GAC9DygC,EAAW35D,EAAQwiB,kBAAoBvgB,KAAKwgB,SAASC,sBACrDa,EAAOthB,KAAKZ,MAAQ,SAAW,SACrCY,KAAKZ,MAAQq4D,EAAQr4D,MACrBY,KAAKV,OAASm4D,EAAQn4D,OACtBU,KAAKy2D,aAAez2D,KAAKi3B,YACpBG,GAAYp3B,KAAM03D,GAAU,KAGjC13D,KAAK8pD,cAAc,SAAU,CAAC7hD,KAAMwvD,IACpCn1D,EAASvE,EAAQ45D,SAAU,CAAC33D,KAAMy3D,GAAUz3D,MACxCA,KAAKi3D,UACHj3D,KAAKk3D,UAAU51C,IACjBthB,KAAK0B,UAIX,sBACE,MAAM3D,EAAUiC,KAAKjC,QACf65D,EAAgB75D,EAAQgkB,QAAU,GACxC5c,EAAKyyD,EAAe,CAACC,EAAatI,KAChCsI,EAAY91D,GAAKwtD,IAGrB,sBACE,MAAMxxD,EAAUiC,KAAKjC,QACf+5D,EAAY/5D,EAAQgkB,OACpBA,EAAS/hB,KAAK+hB,OACdg2C,EAAUr6D,OAAO2D,KAAK0gB,GAAQ8c,OAAO,CAACv3B,EAAKvF,KAC/CuF,EAAIvF,IAAM,EACHuF,GACN,IACH,IAAImlB,EAAQ,GACRqrC,IACFrrC,EAAQA,EAAM4f,OACZ3uC,OAAO2D,KAAKy2D,GAAW36D,IAAK4E,IAC1B,MAAM0wD,EAAeqF,EAAU/1D,GACzB6iC,EAAO4tB,GAAczwD,EAAI0wD,GACzBuF,EAAoB,MAATpzB,EACX0J,EAAwB,MAAT1J,EACrB,MAAO,CACL7mC,QAAS00D,EACTwF,UAAWD,EAAW,YAAc1pB,EAAe,SAAW,OAC9D4pB,MAAOF,EAAW,eAAiB1pB,EAAe,WAAa,cAKvEnpC,EAAKsnB,EAAQvkB,IACX,MAAMuqD,EAAevqD,EAAKnK,QACpBgE,EAAK0wD,EAAa1wD,GAClB6iC,EAAO4tB,GAAczwD,EAAI0wD,GACzB0F,EAAYtzD,EAAe4tD,EAAazzD,KAAMkJ,EAAKgwD,YAC3Bn8D,IAA1B02D,EAAa5Z,UAA0Bkc,GAAqBtC,EAAa5Z,SAAUjU,KAAUmwB,GAAqB7sD,EAAK+vD,aACzHxF,EAAa5Z,SAAW3wC,EAAK+vD,WAE/BF,EAAQh2D,IAAM,EACd,IAAI+f,EAAQ,KACZ,GAAI/f,KAAMggB,GAAUA,EAAOhgB,GAAI/C,OAASm5D,EACtCr2C,EAAQC,EAAOhgB,OACV,CACL,MAAMq2D,EAAa,GAASC,SAASF,GACrCr2C,EAAQ,IAAIs2C,EAAW,CACrBr2D,KACA/C,KAAMm5D,EACNl3C,IAAKjhB,KAAKihB,IACV9kB,MAAO6D,OAET+hB,EAAOD,EAAM/f,IAAM+f,EAErBA,EAAMw2C,KAAK7F,EAAc10D,KAE3BoH,EAAK4yD,EAAS,CAACQ,EAAYx2D,KACpBw2D,UACIx2C,EAAOhgB,KAGlBoD,EAAK4c,EAASD,IACZi5B,GAAQ3Z,UAAUphC,KAAM8hB,EAAOA,EAAM/jB,SACrCg9C,GAAQyd,OAAOx4D,KAAM8hB,KAGzB,kBACE,MAAM8gB,EAAW5iC,KAAK02D,UAChBnrB,EAAUvrC,KAAKtD,KAAKI,SAASsB,OAC7BktC,EAAU1I,EAASxkC,OAEzB,GADAwkC,EAAS74B,KAAK,CAAChC,EAAGC,IAAMD,EAAExJ,MAAQyJ,EAAEzJ,OAChC+sC,EAAUC,EAAS,CACrB,IAAK,IAAIjmC,EAAIimC,EAASjmC,EAAIgmC,IAAWhmC,EACnCtF,KAAKy4D,oBAAoBnzD,GAE3Bs9B,EAASze,OAAOonB,EAASD,EAAUC,GAErCvrC,KAAK82D,gBAAkBl0B,EAAS7/B,MAAM,GAAGgH,KAAKirD,GAAc,QAAS,UAEvE,8BACE,MAAO0B,UAAW9zB,EAAUlmC,MAAM,SAACI,IAAakD,KAC5C4iC,EAASxkC,OAAStB,EAASsB,eACtB4B,KAAK0kC,QAEd9B,EAAS3W,QAAQ,CAAC6E,EAAMvyB,KACmC,IAArDzB,EAASmzB,OAAO7lB,GAAKA,IAAM0mB,EAAKukB,UAAUj3C,QAC5C4B,KAAKy4D,oBAAoBl6D,KAI/B,2BACE,MAAMm6D,EAAiB,GACjB57D,EAAWkD,KAAKtD,KAAKI,SAC3B,IAAIwI,EAAGK,EAEP,IADA3F,KAAK24D,8BACArzD,EAAI,EAAGK,EAAO7I,EAASsB,OAAQkH,EAAIK,EAAML,IAAK,CACjD,MAAM/H,EAAUT,EAASwI,GACzB,IAAIwrB,EAAO9wB,KAAK+nC,eAAeziC,GAC/B,MAAMtG,EAAOzB,EAAQyB,MAAQgB,KAAKkhC,OAAOliC,KAWzC,GAVI8xB,EAAK9xB,MAAQ8xB,EAAK9xB,OAASA,IAC7BgB,KAAKy4D,oBAAoBnzD,GACzBwrB,EAAO9wB,KAAK+nC,eAAeziC,IAE7BwrB,EAAK9xB,KAAOA,EACZ8xB,EAAK1P,UAAY7jB,EAAQ6jB,WAAa8wC,GAAalzD,EAAMgB,KAAKjC,SAC9D+yB,EAAK8nC,MAAQr7D,EAAQq7D,OAAS,EAC9B9nC,EAAKvyB,MAAQ+G,EACbwrB,EAAK5yB,MAAQ,GAAKX,EAAQW,MAC1B4yB,EAAKkQ,QAAUhhC,KAAKkzC,iBAAiB5tC,GACjCwrB,EAAK0T,WACP1T,EAAK0T,WAAWq0B,YAAYvzD,GAC5BwrB,EAAK0T,WAAWuC,iBACX,CACL,MAAM+xB,EAAkB,GAASC,cAAc/5D,IACzC,mBAACmpC,EAAkB,gBAAEmC,GAAmBznB,GAAS/lB,SAASkC,GAChEtB,OAAOC,OAAOm7D,EAAgBh2D,UAAW,CACvCwnC,gBAAiB,GAAS0uB,WAAW1uB,GACrCnC,mBAAoBA,GAAsB,GAAS6wB,WAAW7wB,KAEhErX,EAAK0T,WAAa,IAAIs0B,EAAgB94D,KAAMsF,GAC5CozD,EAAej7D,KAAKqzB,EAAK0T,aAI7B,OADAxkC,KAAKi5D,kBACEP,EAET,iBACEvzD,EAAKnF,KAAKtD,KAAKI,SAAU,CAACS,EAASuI,KACjC9F,KAAK+nC,eAAejiC,GAAc0+B,WAAWgL,SAC5CxvC,MAEL,QACEA,KAAKk5D,iBACLl5D,KAAK8pD,cAAc,SAErB,OAAOxoC,GACL,MAAM4f,EAASlhC,KAAKkhC,OACpBA,EAAO9kC,SACP,MAAM2B,EAAUiC,KAAKw2D,SAAWt1B,EAAOyH,eAAezH,EAAOm1B,oBAAqBr2D,KAAKmB,cACjFg4D,EAAgBn5D,KAAKgrC,qBAAuBjtC,EAAQqiB,UAK1D,GAJApgB,KAAKo5D,gBACLp5D,KAAKq5D,sBACLr5D,KAAKs5D,uBACLt5D,KAAK+2D,SAASwC,cACuD,IAAjEv5D,KAAK8pD,cAAc,eAAgB,CAACxoC,OAAMiwC,YAAY,IACxD,OAEF,MAAMmH,EAAiB14D,KAAKw5D,2BAC5Bx5D,KAAK8pD,cAAc,wBACnB,IAAIjM,EAAa,EACjB,IAAK,IAAIv4C,EAAI,EAAGK,EAAO3F,KAAKtD,KAAKI,SAASsB,OAAQkH,EAAIK,EAAML,IAAK,CAC/D,MAAM,WAACk/B,GAAcxkC,KAAK+nC,eAAeziC,GACnCkqC,GAAS2pB,IAAyD,IAAxCT,EAAenyD,QAAQi+B,GACvDA,EAAWi1B,sBAAsBjqB,GACjCqO,EAAat1C,KAAKuC,KAAK05B,EAAWyF,iBAAkB4T,GAEtDA,EAAa79C,KAAK05D,YAAc37D,EAAQu9C,OAAOmC,YAAcI,EAAa,EAC1E79C,KAAK25D,cAAc9b,GACdsb,GACHh0D,EAAKuzD,EAAiBl0B,IACpBA,EAAWgL,UAGfxvC,KAAK45D,gBAAgBt4C,GACrBthB,KAAK8pD,cAAc,cAAe,CAACxoC,SACnCthB,KAAK09C,QAAQ3zC,KAAKirD,GAAc,IAAK,SACrC,MAAM,QAAC72B,EAAO,WAAEw4B,GAAc32D,KAC1B22D,EACF32D,KAAK65D,cAAclD,GAAY,GACtBx4B,EAAQ//B,QACjB4B,KAAK85D,mBAAmB37B,EAASA,GAAS,GAE5Cn+B,KAAK0B,SAEP,gBACEyD,EAAKnF,KAAK+hB,OAASD,IACjBi5B,GAAQgf,UAAU/5D,KAAM8hB,KAE1B9hB,KAAKg6D,sBACLh6D,KAAKi6D,sBAEP,sBACE,MAAMl8D,EAAUiC,KAAKjC,QACfm8D,EAAiB,IAAIvtC,IAAIjvB,OAAO2D,KAAKrB,KAAK42D,aAC1CuD,EAAY,IAAIxtC,IAAI5uB,EAAQ4iB,QAC7B7Y,EAAUoyD,EAAgBC,MAAgBn6D,KAAK62D,uBAAyB94D,EAAQ8jB,aACnF7hB,KAAKo6D,eACLp6D,KAAKs3D,cAGT,uBACE,MAAM,eAACN,GAAkBh3D,KACnBq6D,EAAUr6D,KAAKs6D,0BAA4B,GACjD,IAAK,MAAM,OAACpuC,EAAM,MAAEtoB,EAAK,MAAEmtB,KAAUspC,EAAS,CAC5C,MAAM3uB,EAAkB,oBAAXxf,GAAgC6E,EAAQA,EACrD6kC,GAAgBoB,EAAgBpzD,EAAO8nC,IAG3C,yBACE,MAAMG,EAAe7rC,KAAK6rC,aAC1B,IAAKA,IAAiBA,EAAaztC,OACjC,OAEF4B,KAAK6rC,aAAe,GACpB,MAAM0uB,EAAev6D,KAAKtD,KAAKI,SAASsB,OAClCo8D,EAAWpzD,GAAQ,IAAIulB,IAC3Bkf,EACG5b,OAAOvf,GAAKA,EAAE,KAAOtJ,GACrBjK,IAAI,CAACuT,EAAGpL,IAAMA,EAAI,IAAMoL,EAAEyT,OAAO,GAAG0L,KAAK,OAExC4qC,EAAYD,EAAQ,GAC1B,IAAK,IAAIl1D,EAAI,EAAGA,EAAIi1D,EAAcj1D,IAChC,IAAKwC,EAAU2yD,EAAWD,EAAQl1D,IAChC,OAGJ,OAAO5F,MAAMktB,KAAK6tC,GACft9D,IAAIuT,GAAKA,EAAEoP,MAAM,MACjB3iB,IAAI4K,IAAK,CAAEmkB,OAAQnkB,EAAE,GAAInE,OAAQmE,EAAE,GAAIgpB,OAAQhpB,EAAE,MAEtD,cAAc81C,GACZ,IAA+D,IAA3D79C,KAAK8pD,cAAc,eAAgB,CAACyH,YAAY,IAClD,OAEFxW,GAAQ3+C,OAAO4D,KAAMA,KAAKZ,MAAOY,KAAKV,OAAQu+C,GAC9C,MAAM53B,EAAOjmB,KAAKkqC,UACZwwB,EAASz0C,EAAK7mB,OAAS,GAAK6mB,EAAK3mB,QAAU,EACjDU,KAAK09C,QAAU,GACfv4C,EAAKnF,KAAK26C,MAAQhlB,IACZ+kC,GAA2B,cAAjB/kC,EAAIkjB,WAGdljB,EAAIyL,WACNzL,EAAIyL,YAENphC,KAAK09C,QAAQjgD,QAAQk4B,EAAI+nB,aACxB19C,MACHA,KAAK09C,QAAQzxB,QAAQ,CAAC/jB,EAAM3J,KAC1B2J,EAAKyyD,KAAOp8D,IAEdyB,KAAK8pD,cAAc,eAErB,gBAAgBxoC,GACd,IAA6E,IAAzEthB,KAAK8pD,cAAc,uBAAwB,CAACxoC,OAAMiwC,YAAY,IAAlE,CAGA,IAAK,IAAIjsD,EAAI,EAAGK,EAAO3F,KAAKtD,KAAKI,SAASsB,OAAQkH,EAAIK,IAAQL,EAC5DtF,KAAK+nC,eAAeziC,GAAGk/B,WAAWpD,YAEpC,IAAK,IAAI97B,EAAI,EAAGK,EAAO3F,KAAKtD,KAAKI,SAASsB,OAAQkH,EAAIK,IAAQL,EAC5DtF,KAAK46D,eAAet1D,EAAGuC,EAAWyZ,GAAQA,EAAK,CAACxb,aAAcR,IAAMgc,GAEtEthB,KAAK8pD,cAAc,sBAAuB,CAACxoC,UAE7C,eAAe/iB,EAAO+iB,GACpB,MAAMwP,EAAO9wB,KAAK+nC,eAAexpC,GAC3BsE,EAAO,CAACiuB,OAAMvyB,QAAO+iB,OAAMiwC,YAAY,IACW,IAApDvxD,KAAK8pD,cAAc,sBAAuBjnD,KAG9CiuB,EAAK0T,WAAW5G,QAAQtc,GACxBze,EAAK0uD,YAAa,EAClBvxD,KAAK8pD,cAAc,qBAAsBjnD,IAE3C,UACiE,IAA3D7C,KAAK8pD,cAAc,eAAgB,CAACyH,YAAY,MAGhDtyB,GAAS92B,IAAInI,MACXA,KAAKi3D,WAAah4B,GAAShB,QAAQj+B,OACrCi/B,GAASr7B,MAAM5D,OAGjBA,KAAKk+B,OACLi3B,GAAqB,CAACh5D,MAAO6D,SAGjC,OACE,IAAIsF,EACJ,GAAItF,KAAKu3D,kBAAmB,CAC1B,MAAM,MAACn4D,EAAK,OAAEE,GAAUU,KAAKu3D,kBAC7Bv3D,KAAKw3D,QAAQp4D,EAAOE,GACpBU,KAAKu3D,kBAAoB,KAG3B,GADAv3D,KAAKg0D,QACDh0D,KAAKZ,OAAS,GAAKY,KAAKV,QAAU,EACpC,OAEF,IAA6D,IAAzDU,KAAK8pD,cAAc,aAAc,CAACyH,YAAY,IAChD,OAEF,MAAMsJ,EAAS76D,KAAK09C,QACpB,IAAKp4C,EAAI,EAAGA,EAAIu1D,EAAOz8D,QAAUy8D,EAAOv1D,GAAGq4C,GAAK,IAAKr4C,EACnDu1D,EAAOv1D,GAAG44B,KAAKl+B,KAAKkqC,WAGtB,IADAlqC,KAAK86D,gBACEx1D,EAAIu1D,EAAOz8D,SAAUkH,EAC1Bu1D,EAAOv1D,GAAG44B,KAAKl+B,KAAKkqC,WAEtBlqC,KAAK8pD,cAAc,aAErB,uBAAuBnnB,GACrB,MAAMC,EAAW5iC,KAAK82D,gBAChBjtD,EAAS,GACf,IAAIvE,EAAGK,EACP,IAAKL,EAAI,EAAGK,EAAOi9B,EAASxkC,OAAQkH,EAAIK,IAAQL,EAAG,CACjD,MAAMwrB,EAAO8R,EAASt9B,GACjBq9B,IAAiB7R,EAAKkQ,SACzBn3B,EAAOpM,KAAKqzB,GAGhB,OAAOjnB,EAET,+BACE,OAAO7J,KAAK6iC,wBAAuB,GAErC,gBACE,IAAqE,IAAjE7iC,KAAK8pD,cAAc,qBAAsB,CAACyH,YAAY,IACxD,OAEF,MAAM3uB,EAAW5iC,KAAK84C,+BACtB,IAAK,IAAIxzC,EAAIs9B,EAASxkC,OAAS,EAAGkH,GAAK,IAAKA,EAC1CtF,KAAK+6D,aAAan4B,EAASt9B,IAE7BtF,KAAK8pD,cAAc,qBAErB,aAAah5B,GACX,MAAM7P,EAAMjhB,KAAKihB,IACXqF,EAAOwK,EAAKkZ,MACZgxB,GAAW10C,EAAKmc,SAChBxc,EAAOjmB,KAAKkqC,UACZrnC,EAAO,CACXiuB,OACAvyB,MAAOuyB,EAAKvyB,MACZgzD,YAAY,IAEwC,IAAlDvxD,KAAK8pD,cAAc,oBAAqBjnD,KAGxCm4D,GACF30C,GAASpF,EAAK,CACZld,MAAoB,IAAduiB,EAAKviB,KAAiB,EAAIkiB,EAAKliB,KAAOuiB,EAAKviB,KACjDC,OAAsB,IAAfsiB,EAAKtiB,MAAkBhE,KAAKZ,MAAQ6mB,EAAKjiB,MAAQsiB,EAAKtiB,MAC7DmiB,KAAkB,IAAbG,EAAKH,IAAgB,EAAIF,EAAKE,IAAMG,EAAKH,IAC9CC,QAAwB,IAAhBE,EAAKF,OAAmBpmB,KAAKV,OAAS2mB,EAAKG,OAASE,EAAKF,SAGrE0K,EAAK0T,WAAWtG,OACZ88B,GACFz0C,GAAWtF,GAEbpe,EAAK0uD,YAAa,EAClBvxD,KAAK8pD,cAAc,mBAAoBjnD,IAEzC,cAAcmjB,GACZ,OAAOD,GAAeC,EAAOhmB,KAAKkqC,UAAWlqC,KAAK05D,aAEpD,0BAA0BrxD,EAAGiZ,EAAMvjB,EAASs7C,GAC1C,MAAMntB,EAASkuB,GAAYC,MAAM/4B,GACjC,MAAsB,oBAAX4K,EACFA,EAAOlsB,KAAMqI,EAAGtK,EAASs7C,GAE3B,GAET,eAAevzC,GACb,MAAMvI,EAAUyC,KAAKtD,KAAKI,SAASgJ,GAC7B88B,EAAW5iC,KAAK02D,UACtB,IAAI5lC,EAAO8R,EAAS3S,OAAO7lB,GAAKA,GAAKA,EAAEirC,WAAa93C,GAASyM,MAkB7D,OAjBK8mB,IACHA,EAAO,CACL9xB,KAAM,KACNtC,KAAM,GACNa,QAAS,KACTinC,WAAY,KACZuB,OAAQ,KACRqB,QAAS,KACTE,QAAS,KACTsxB,MAAOr7D,GAAWA,EAAQq7D,OAAS,EACnCr6D,MAAOuH,EACPuvC,SAAU93C,EACVioC,QAAS,GACTqD,SAAS,GAEXjG,EAASnlC,KAAKqzB,IAETA,EAET,aACE,OAAO9wB,KAAK4mC,WAAa5mC,KAAK4mC,SAAW7b,GAAc,KAAM,CAAC5uB,MAAO6D,KAAMhB,KAAM,WAEnF,yBACE,OAAOgB,KAAK84C,+BAA+B16C,OAE7C,iBAAiB0H,GACf,MAAMvI,EAAUyC,KAAKtD,KAAKI,SAASgJ,GACnC,IAAKvI,EACH,OAAO,EAET,MAAMuzB,EAAO9wB,KAAK+nC,eAAejiC,GACjC,MAA8B,mBAAhBgrB,EAAKiV,QAAwBjV,EAAKiV,QAAUxoC,EAAQwoC,OAEpE,qBAAqBjgC,EAAck7B,GACjC,MAAMlQ,EAAO9wB,KAAK+nC,eAAejiC,GACjCgrB,EAAKiV,QAAU/E,EAEjB,qBAAqBziC,GACnByB,KAAKg3D,eAAez4D,IAAUyB,KAAKg3D,eAAez4D,GAEpD,kBAAkBA,GAChB,OAAQyB,KAAKg3D,eAAez4D,GAE9B,kBAAkBuH,EAAcu/B,EAAWrE,GACzC,MAAM1f,EAAO0f,EAAU,OAAS,OAC1BlQ,EAAO9wB,KAAK+nC,eAAejiC,GAC3Bu3B,EAAQvM,EAAK0T,WAAWyG,wBAAmBlvC,EAAWulB,GACxD1Z,EAAQy9B,IACVvU,EAAKp0B,KAAK2oC,GAAWU,QAAU/E,EAC/BhhC,KAAK5D,WAEL4D,KAAKi7D,qBAAqBn1D,EAAck7B,GACxC3D,EAAMjhC,OAAO00B,EAAM,CAACkQ,YACpBhhC,KAAK5D,OAAQ6kB,GAAQA,EAAInb,eAAiBA,EAAewb,OAAOvlB,IAGpE,KAAK+J,EAAcu/B,GACjBrlC,KAAKk7D,kBAAkBp1D,EAAcu/B,GAAW,GAElD,KAAKv/B,EAAcu/B,GACjBrlC,KAAKk7D,kBAAkBp1D,EAAcu/B,GAAW,GAElD,oBAAoBv/B,GAClB,MAAMgrB,EAAO9wB,KAAK02D,UAAU5wD,GACxBgrB,GAAQA,EAAK0T,YACf1T,EAAK0T,WAAW22B,kBAEXn7D,KAAK02D,UAAU5wD,GAExB,QACE,IAAIR,EAAGK,EAGP,IAFA3F,KAAKy7B,OACLwD,GAASm8B,OAAOp7D,MACXsF,EAAI,EAAGK,EAAO3F,KAAKtD,KAAKI,SAASsB,OAAQkH,EAAIK,IAAQL,EACxDtF,KAAKy4D,oBAAoBnzD,GAG7B,UACEtF,KAAK8pD,cAAc,iBACnB,MAAM,OAAC9oD,EAAM,IAAEigB,GAAOjhB,KACtBA,KAAKq7D,QACLr7D,KAAKkhC,OAAO6yB,aACR/yD,IACFhB,KAAKo6D,eACL51C,GAAYxjB,EAAQigB,GACpBjhB,KAAKwgB,SAAS86C,eAAer6C,GAC7BjhB,KAAKgB,OAAS,KACdhB,KAAKihB,IAAM,MAEbjhB,KAAK8pD,cAAc,kBACZ4L,GAAU11D,KAAK+B,IACtB/B,KAAK8pD,cAAc,gBAErB,iBAAiBjnD,GACf,OAAO7C,KAAKgB,OAAOu6D,aAAa14D,GAElC,aACE7C,KAAKw7D,iBACDx7D,KAAKjC,QAAQ8jB,WACf7hB,KAAKy7D,uBAELz7D,KAAKi3D,UAAW,EAGpB,iBACE,MAAMnrC,EAAY9rB,KAAK42D,WACjBp2C,EAAWxgB,KAAKwgB,SAChBk7C,EAAO,CAAC18D,EAAM4sB,KAClBpL,EAASqX,iBAAiB73B,KAAMhB,EAAM4sB,GACtCE,EAAU9sB,GAAQ4sB,GAEdA,EAAW,CAACvjB,EAAG+B,EAAGC,KACtBhC,EAAEotB,QAAUrrB,EACZ/B,EAAEqtB,QAAUrrB,EACZrK,KAAK65D,cAAcxxD,IAErBlD,EAAKnF,KAAKjC,QAAQ4iB,OAAS3hB,GAAS08D,EAAK18D,EAAM4sB,IAEjD,uBACO5rB,KAAK62D,uBACR72D,KAAK62D,qBAAuB,IAE9B,MAAM/qC,EAAY9rB,KAAK62D,qBACjBr2C,EAAWxgB,KAAKwgB,SAChBk7C,EAAO,CAAC18D,EAAM4sB,KAClBpL,EAASqX,iBAAiB73B,KAAMhB,EAAM4sB,GACtCE,EAAU9sB,GAAQ4sB,GAEd+vC,EAAU,CAAC38D,EAAM4sB,KACjBE,EAAU9sB,KACZwhB,EAASsX,oBAAoB93B,KAAMhB,EAAM4sB,UAClCE,EAAU9sB,KAGf4sB,EAAW,CAACxsB,EAAOE,KACnBU,KAAKgB,QACPhB,KAAK6gC,OAAOzhC,EAAOE,IAGvB,IAAIs8D,EACJ,MAAM3E,EAAW,KACf0E,EAAQ,SAAU1E,GAClBj3D,KAAKi3D,UAAW,EAChBj3D,KAAK6gC,SACL66B,EAAK,SAAU9vC,GACf8vC,EAAK,SAAUE,IAEjBA,EAAW,KACT57D,KAAKi3D,UAAW,EAChB0E,EAAQ,SAAU/vC,GAClB5rB,KAAKq7D,QACLr7D,KAAKw3D,QAAQ,EAAG,GAChBkE,EAAK,SAAUzE,IAEbz2C,EAASq7C,WAAW77D,KAAKgB,QAC3Bi2D,IAEA2E,IAGJ,eACEz2D,EAAKnF,KAAK42D,WAAY,CAAChrC,EAAU5sB,KAC/BgB,KAAKwgB,SAASsX,oBAAoB93B,KAAMhB,EAAM4sB,KAEhD5rB,KAAK42D,WAAa,GAClBzxD,EAAKnF,KAAK62D,qBAAsB,CAACjrC,EAAU5sB,KACzCgB,KAAKwgB,SAASsX,oBAAoB93B,KAAMhB,EAAM4sB,KAEhD5rB,KAAK62D,0BAAuB96D,EAE9B,iBAAiB0wB,EAAOnL,EAAM8hC,GAC5B,MAAM7zB,EAAS6zB,EAAU,MAAQ,SACjC,IAAItyB,EAAM5oB,EAAM5C,EAAGK,EAKnB,IAJa,YAAT2b,IACFwP,EAAO9wB,KAAK+nC,eAAetb,EAAM,GAAG3mB,cACpCgrB,EAAK0T,WAAW,IAAMjV,EAAS,wBAE5BjqB,EAAI,EAAGK,EAAO8mB,EAAMruB,OAAQkH,EAAIK,IAAQL,EAAG,CAC9C4C,EAAOukB,EAAMnnB,GACb,MAAMk/B,EAAat8B,GAAQlI,KAAK+nC,eAAe7/B,EAAKpC,cAAc0+B,WAC9DA,GACFA,EAAWjV,EAAS,cAAcrnB,EAAK4sB,QAAS5sB,EAAKpC,aAAcoC,EAAK3J,QAI9E,oBACE,OAAOyB,KAAKm+B,SAAW,GAEzB,kBAAkB29B,GAChB,MAAMC,EAAa/7D,KAAKm+B,SAAW,GAC7ByC,EAASk7B,EAAe3+D,IAAI,EAAE2I,eAAcvH,YAChD,MAAMuyB,EAAO9wB,KAAK+nC,eAAejiC,GACjC,IAAKgrB,EACH,MAAM,IAAI7vB,MAAM,6BAA+B6E,GAEjD,MAAO,CACLA,eACAgvB,QAAShE,EAAKp0B,KAAK6B,GACnBA,WAGEk4C,GAAWjxC,EAAeo7B,EAAQm7B,GACpCtlB,IACFz2C,KAAKm+B,QAAUyC,EACf5gC,KAAK22D,WAAa,KAClB32D,KAAK85D,mBAAmBl5B,EAAQm7B,IAGpC,cAAc5K,EAAMtuD,EAAMotB,GACxB,OAAOjwB,KAAK+2D,SAASiF,OAAOh8D,KAAMmxD,EAAMtuD,EAAMotB,GAEhD,mBAAmB2Q,EAAQm7B,EAAYE,GACrC,MAAMC,EAAel8D,KAAKjC,QAAQgjB,MAC5BwjC,EAAO,CAACx8C,EAAGC,IAAMD,EAAEkoB,OAAO7lB,IAAMpC,EAAE6pD,KAAKxnD,GAAKD,EAAEtE,eAAiBuE,EAAEvE,cAAgBsE,EAAE7L,QAAU8L,EAAE9L,QAC/F49D,EAAc5X,EAAKwX,EAAYn7B,GAC/Bw7B,EAAYH,EAASr7B,EAAS2jB,EAAK3jB,EAAQm7B,GAC7CI,EAAY/9D,QACd4B,KAAKq8D,iBAAiBF,EAAaD,EAAa56C,MAAM,GAEpD86C,EAAUh+D,QAAU89D,EAAa56C,MACnCthB,KAAKq8D,iBAAiBD,EAAWF,EAAa56C,MAAM,GAGxD,cAAcjZ,EAAG4zD,GACf,MAAMp5D,EAAO,CACX67B,MAAOr2B,EACP4zD,SACA1K,YAAY,EACZyE,YAAah2D,KAAKs5C,cAAcjxC,IAE5Bi0D,EAAehL,IAAYA,EAAOvzD,QAAQ4iB,QAAU3gB,KAAKjC,QAAQ4iB,QAAQnjB,SAAS6K,EAAEs3C,OAAO3gD,MACjG,IAA6D,IAAzDgB,KAAK8pD,cAAc,cAAejnD,EAAMy5D,GAC1C,OAEF,MAAM7lB,EAAUz2C,KAAKu8D,aAAal0D,EAAG4zD,EAAQp5D,EAAKmzD,aAMlD,OALAnzD,EAAK0uD,YAAa,EAClBvxD,KAAK8pD,cAAc,aAAcjnD,EAAMy5D,IACnC7lB,GAAW5zC,EAAK4zC,UAClBz2C,KAAK0B,SAEA1B,KAET,aAAaqI,EAAG4zD,EAAQjG,GACtB,MAAO73B,QAAS49B,EAAa,GAAE,QAAEh+D,GAAWiC,KACtCq5C,EAAmB4iB,EACnBr7B,EAAS5gC,KAAKw8D,mBAAmBn0D,EAAG0zD,EAAY/F,EAAa3c,GAC7D4c,EAAU7tD,EAAcC,GACxB0tD,EAAYD,GAAmBztD,EAAGrI,KAAK22D,WAAYX,EAAaC,GAClED,IACFh2D,KAAK22D,WAAa,KAClBr0D,EAASvE,EAAQ2jB,QAAS,CAACrZ,EAAGu4B,EAAQ5gC,MAAOA,MACzCi2D,GACF3zD,EAASvE,EAAQ4jB,QAAS,CAACtZ,EAAGu4B,EAAQ5gC,MAAOA,OAGjD,MAAMy2C,GAAWjxC,EAAeo7B,EAAQm7B,GAMxC,OALItlB,GAAWwlB,KACbj8D,KAAKm+B,QAAUyC,EACf5gC,KAAK85D,mBAAmBl5B,EAAQm7B,EAAYE,IAE9Cj8D,KAAK22D,WAAaZ,EACXtf,EAET,mBAAmBpuC,EAAG0zD,EAAY/F,EAAa3c,GAC7C,GAAe,aAAXhxC,EAAErJ,KACJ,MAAO,GAET,IAAKg3D,EACH,OAAO+F,EAET,MAAMG,EAAel8D,KAAKjC,QAAQgjB,MAClC,OAAO/gB,KAAKy8D,0BAA0Bp0D,EAAG6zD,EAAa56C,KAAM46C,EAAc7iB,IAG9E,MAAMqjB,GAAoB,IAAMv3D,EAAK,GAAMuwD,UAAYv5D,GAAUA,EAAM46D,SAASwC,cAC1E52C,IAAa,EA0CnB,SAASg6C,GAAQ17C,EAAK6T,EAASqd,GAC7B,MAAM,WAACD,EAAU,YAAE0qB,EAAW,EAAExyD,EAAC,EAAEC,EAAC,YAAE2oC,EAAW,YAAED,GAAeje,EAClE,IAAI+nC,EAAcD,EAAc5pB,EAChC/xB,EAAIoE,YACJpE,EAAIqE,IAAIlb,EAAGC,EAAG2oC,EAAad,EAAa2qB,EAAa1qB,EAAW0qB,GAC5D9pB,EAAc6pB,GAChBC,EAAcD,EAAc7pB,EAC5B9xB,EAAIqE,IAAIlb,EAAGC,EAAG0oC,EAAaZ,EAAW0qB,EAAa3qB,EAAa2qB,GAAa,IAE7E57C,EAAIqE,IAAIlb,EAAGC,EAAGuyD,EAAazqB,EAAWtpC,EAASqpC,EAAarpC,GAE9DoY,EAAIsE,YACJtE,EAAIqF,OAEN,SAASw2C,GAAgBx+D,GACvB,OAAOmrB,GAAkBnrB,EAAO,CAAC,aAAc,WAAY,aAAc,aAE3E,SAASy+D,GAAoBz3C,EAAKytB,EAAaC,EAAagqB,GAC1D,MAAMC,EAAIH,GAAgBx3C,EAAIvnB,QAAQm/D,cAChCC,GAAiBnqB,EAAcD,GAAe,EAC9CqqB,EAAa70D,KAAKsC,IAAIsyD,EAAeH,EAAajqB,EAAc,GAChEsqB,EAAqBh+C,IACzB,MAAMi+C,GAAiBtqB,EAAczqC,KAAKsC,IAAIsyD,EAAe99C,IAAQ29C,EAAa,EAClF,OAAOtwD,GAAY2S,EAAK,EAAG9W,KAAKsC,IAAIsyD,EAAeG,KAErD,MAAO,CACLC,WAAYF,EAAkBJ,EAAEM,YAChCC,SAAUH,EAAkBJ,EAAEO,UAC9BC,WAAY/wD,GAAYuwD,EAAEQ,WAAY,EAAGL,GACzCM,SAAUhxD,GAAYuwD,EAAES,SAAU,EAAGN,IAGzC,SAASO,GAAW1sD,EAAG2sD,EAAOxzD,EAAGC,GAC/B,MAAO,CACLD,EAAGA,EAAI6G,EAAI1I,KAAK0F,IAAI2vD,GACpBvzD,EAAGA,EAAI4G,EAAI1I,KAAKyE,IAAI4wD,IAGxB,SAASC,GAAQ58C,EAAK6T,EAAS4c,EAAQ4B,EAASzvC,GAC9C,MAAM,EAACuG,EAAC,EAAEC,EAAG6nC,WAAYtuC,EAAK,YAAEg5D,EAAa7pB,YAAa+qB,GAAUhpC,EAC9Dke,EAAczqC,KAAKuC,IAAIgqB,EAAQke,YAAcM,EAAU5B,EAASkrB,EAAa,GAC7E7pB,EAAc+qB,EAAS,EAAIA,EAASxqB,EAAU5B,EAASkrB,EAAc,EAC3E,IAAImB,EAAgB,EACpB,MAAMC,EAAQn6D,EAAMD,EACpB,GAAI0vC,EAAS,CACX,MAAM2qB,EAAuBH,EAAS,EAAIA,EAASxqB,EAAU,EACvD4qB,EAAuBlrB,EAAc,EAAIA,EAAcM,EAAU,EACjE6qB,GAAsBF,EAAuBC,GAAwB,EACrEE,EAAuC,IAAvBD,EAA4BH,EAAQG,GAAuBA,EAAqB7qB,GAAW0qB,EACjHD,GAAiBC,EAAQI,GAAiB,EAE5C,MAAMC,EAAO91D,KAAKuC,IAAI,KAAOkzD,EAAQhrB,EAActB,EAASppC,GAAM0qC,EAC5DsrB,GAAeN,EAAQK,GAAQ,EAC/BnsB,EAAatuC,EAAQ06D,EAAcP,EACnC5rB,EAAWtuC,EAAMy6D,EAAcP,GAC/B,WAACR,EAAU,SAAEC,EAAQ,WAAEC,EAAU,SAAEC,GAAYX,GAAoBjoC,EAASie,EAAaC,EAAab,EAAWD,GACjHqsB,EAA2BvrB,EAAcuqB,EACzCiB,EAAyBxrB,EAAcwqB,EACvCiB,EAA0BvsB,EAAaqrB,EAAagB,EACpDG,EAAwBvsB,EAAWqrB,EAAWgB,EAC9CG,EAA2B5rB,EAAc0qB,EACzCmB,EAAyB7rB,EAAc2qB,EACvCmB,EAA0B3sB,EAAaurB,EAAakB,EACpDG,EAAwB3sB,EAAWurB,EAAWkB,EAGpD,GAFA39C,EAAIoE,YACJpE,EAAIqE,IAAIlb,EAAGC,EAAG2oC,EAAayrB,EAAyBC,GAChDlB,EAAW,EAAG,CAChB,MAAMuB,EAAUpB,GAAWa,EAAwBE,EAAuBt0D,EAAGC,GAC7E4W,EAAIqE,IAAIy5C,EAAQ30D,EAAG20D,EAAQ10D,EAAGmzD,EAAUkB,EAAuBvsB,EAAWtpC,GAE5E,MAAMm2D,EAAKrB,GAAWiB,EAAwBzsB,EAAU/nC,EAAGC,GAE3D,GADA4W,EAAIwE,OAAOu5C,EAAG50D,EAAG40D,EAAG30D,GAChBqzD,EAAW,EAAG,CAChB,MAAMqB,EAAUpB,GAAWiB,EAAwBE,EAAuB10D,EAAGC,GAC7E4W,EAAIqE,IAAIy5C,EAAQ30D,EAAG20D,EAAQ10D,EAAGqzD,EAAUvrB,EAAWtpC,EAASi2D,EAAwBv2D,KAAKD,IAG3F,GADA2Y,EAAIqE,IAAIlb,EAAGC,EAAG0oC,EAAaZ,EAAYurB,EAAW3qB,EAAcb,EAAcurB,EAAa1qB,GAAc,GACrG0qB,EAAa,EAAG,CAClB,MAAMsB,EAAUpB,GAAWgB,EAA0BE,EAAyBz0D,EAAGC,GACjF4W,EAAIqE,IAAIy5C,EAAQ30D,EAAG20D,EAAQ10D,EAAGozD,EAAYoB,EAA0Bt2D,KAAKD,GAAI4pC,EAAarpC,GAE5F,MAAMo2D,EAAKtB,GAAWY,EAA0BrsB,EAAY9nC,EAAGC,GAE/D,GADA4W,EAAIwE,OAAOw5C,EAAG70D,EAAG60D,EAAG50D,GAChBkzD,EAAa,EAAG,CAClB,MAAMwB,EAAUpB,GAAWY,EAA0BE,EAAyBr0D,EAAGC,GACjF4W,EAAIqE,IAAIy5C,EAAQ30D,EAAG20D,EAAQ10D,EAAGkzD,EAAYrrB,EAAarpC,EAAS41D,GAElEx9C,EAAIsE,YAEN,SAAS25C,GAAQj+C,EAAK6T,EAAS4c,EAAQ4B,GACrC,MAAM,YAAC6rB,EAAW,WAAEjtB,EAAU,cAAEJ,GAAiBhd,EACjD,IAAIqd,EAAWrd,EAAQqd,SACvB,GAAIgtB,EAAa,CACftB,GAAQ58C,EAAK6T,EAAS4c,EAAQ4B,EAASpB,EAAa1pC,GACpD,IAAK,IAAIlD,EAAI,EAAGA,EAAI65D,IAAe75D,EACjC2b,EAAI2E,OAEDzb,MAAM2nC,KACTK,EAAWD,EAAaJ,EAAgBtpC,EACpCspC,EAAgBtpC,IAAQ,IAC1B2pC,GAAY3pC,IAMlB,OAFAq1D,GAAQ58C,EAAK6T,EAAS4c,EAAQ4B,EAASnB,GACvClxB,EAAI2E,OACGusB,EAET,SAASitB,GAAsBn+C,EAAK6T,EAASuqC,GAC3C,MAAM,EAACj1D,EAAC,EAAEC,EAAC,WAAE6nC,EAAU,YAAE0qB,EAAW,YAAEuC,GAAerqC,EAC/Cke,EAAczqC,KAAKuC,IAAIgqB,EAAQke,YAAc4pB,EAAa,GAC1D7pB,EAAcje,EAAQie,YAAc6pB,EAC1C,IAAIt3D,EAMJ,IALI+5D,GACF1C,GAAQ17C,EAAK6T,EAASod,EAAa1pC,GAErCyY,EAAIoE,YACJpE,EAAIqE,IAAIlb,EAAGC,EAAG0oC,EAAab,EAAa1pC,EAAK0pC,GAAY,GACpD5sC,EAAI,EAAGA,EAAI65D,IAAe75D,EAC7B2b,EAAI6E,SAIN,IAFA7E,EAAIoE,YACJpE,EAAIqE,IAAIlb,EAAGC,EAAG2oC,EAAad,EAAYA,EAAa1pC,GAC/ClD,EAAI,EAAGA,EAAI65D,IAAe75D,EAC7B2b,EAAI6E,SAGR,SAAS0+B,GAAWvjC,EAAK6T,EAAS4c,EAAQ4B,EAASnB,GACjD,MAAM,QAACp0C,GAAW+2B,GACZ,YAACjP,EAAW,gBAAEmX,GAAmBj/B,EACjCshE,EAAgC,UAAxBthE,EAAQ42C,YACjB9uB,IAGDw5C,GACFp+C,EAAI0G,UAA0B,EAAd9B,EAChB5E,EAAIq+C,SAAWtiC,GAAmB,UAElC/b,EAAI0G,UAAY9B,EAChB5E,EAAIq+C,SAAWtiC,GAAmB,SAEhClI,EAAQqqC,aACVC,GAAsBn+C,EAAK6T,EAASuqC,GAElCA,GACF1C,GAAQ17C,EAAK6T,EAASqd,GAExB0rB,GAAQ58C,EAAK6T,EAAS4c,EAAQ4B,EAASnB,GACvClxB,EAAI6E,UA7LNpoB,OAAO+kB,iBAAiB,GAAO,CAC7BI,SAAU,CACRF,cACArkB,MAAOukB,IAET6yC,UAAW,CACT/yC,cACArkB,MAAOo3D,IAET/1C,UAAW,CACTgD,cACArkB,MAAOqhB,IAEToxC,SAAU,CACRpuC,cACArkB,MAAO,IAETu2D,QAAS,CACPlyC,cACArkB,MAAOu2D,IAETc,SAAU,CACRhzC,cACArkB,MAAOq3D,IAET11D,SAAU,CACR0iB,cACArkB,MAAO,IAAImuB,KACT,GAAS3B,OAAO2B,GAChBiwC,OAGJ6C,WAAY,CACV58C,cACArkB,MAAO,IAAImuB,KACT,GAAS2uC,UAAU3uC,GACnBiwC,SA2JN,MAAM,WAAmB,GACvB,YAAYl9B,GACV8P,QACAtvC,KAAKjC,aAAUhC,EACfiE,KAAK8xC,mBAAgB/1C,EACrBiE,KAAKkyC,gBAAan2C,EAClBiE,KAAKmyC,cAAWp2C,EAChBiE,KAAK+yC,iBAAch3C,EACnBiE,KAAKgzC,iBAAcj3C,EACnBiE,KAAK48D,YAAc,EACnB58D,KAAKm/D,YAAc,EACf3/B,GACF9hC,OAAOC,OAAOqC,KAAMw/B,GAGxB,QAAQggC,EAAQC,EAAQpmB,GACtB,MAAMrzB,EAAQhmB,KAAK05C,SAAS,CAAC,IAAK,KAAML,IAClC,MAAC1tC,EAAK,SAAEE,GAAYR,GAAkB2a,EAAO,CAAC5b,EAAGo1D,EAAQn1D,EAAGo1D,KAC5D,WAACvtB,EAAU,SAAEC,EAAQ,YAAEY,EAAW,YAAEC,EAAW,cAAElB,GAAiB9xC,KAAK05C,SAAS,CACpF,aACA,WACA,cACA,cACA,iBACCL,GACGqmB,EAAU1/D,KAAKjC,QAAQu1C,QAAU,EACjCmB,EAAiB5vC,EAAeitC,EAAeK,EAAWD,GAC1DytB,EAAgBlrB,GAAkBjsC,GAAO2D,GAAcR,EAAOumC,EAAYC,GAC1EytB,EAAehzD,GAAWf,EAAUknC,EAAc2sB,EAAS1sB,EAAc0sB,GAC/E,OAAQC,GAAiBC,EAE3B,eAAevmB,GACb,MAAM,EAACjvC,EAAC,EAAEC,EAAC,WAAE6nC,EAAU,SAAEC,EAAQ,YAAEY,EAAW,YAAEC,GAAehzC,KAAK05C,SAAS,CAC3E,IACA,IACA,aACA,WACA,cACA,cACA,iBACCL,IACG,OAAC3H,EAAM,QAAE4B,GAAWtzC,KAAKjC,QACzB8hE,GAAa3tB,EAAaC,GAAY,EACtC2tB,GAAc/sB,EAAcC,EAAcM,EAAU5B,GAAU,EACpE,MAAO,CACLtnC,EAAGA,EAAI7B,KAAK0F,IAAI4xD,GAAaC,EAC7Bz1D,EAAGA,EAAI9B,KAAKyE,IAAI6yD,GAAaC,GAGjC,gBAAgBzmB,GACd,OAAOr5C,KAAK85C,eAAeT,GAE7B,KAAKp4B,GACH,MAAM,QAACljB,EAAO,cAAE+zC,GAAiB9xC,KAC3B0xC,GAAU3zC,EAAQ2zC,QAAU,GAAK,EACjC4B,GAAWv1C,EAAQu1C,SAAW,GAAK,EAGzC,GAFAtzC,KAAK48D,YAAuC,UAAxB7+D,EAAQ42C,YAA2B,IAAO,EAC9D30C,KAAKm/D,YAAcrtB,EAAgBtpC,EAAMD,KAAKkB,MAAMqoC,EAAgBtpC,GAAO,EACrD,IAAlBspC,GAAuB9xC,KAAK+yC,YAAc,GAAK/yC,KAAKgzC,YAAc,EACpE,OAEF/xB,EAAI4C,OACJ,IAAIk8C,EAAe,EACnB,GAAIruB,EAAQ,CACVquB,EAAeruB,EAAS,EACxB,MAAMmuB,GAAa7/D,KAAKkyC,WAAalyC,KAAKmyC,UAAY,EACtDlxB,EAAIkE,UAAU5c,KAAK0F,IAAI4xD,GAAaE,EAAcx3D,KAAKyE,IAAI6yD,GAAaE,GACpE//D,KAAK8xC,eAAiBxpC,IACxBy3D,EAAeruB,GAGnBzwB,EAAIgH,UAAYlqB,EAAQsiB,gBACxBY,EAAIyG,YAAc3pB,EAAQuiB,YAC1B,MAAM6xB,EAAW+sB,GAAQj+C,EAAKjhB,KAAM+/D,EAAczsB,GAClDkR,GAAWvjC,EAAKjhB,KAAM+/D,EAAczsB,EAASnB,GAC7ClxB,EAAIgD,WAkBR,SAAS+7C,GAAS/+C,EAAKljB,EAAS6D,EAAQ7D,GACtCkjB,EAAIg/C,QAAUp7D,EAAejD,EAAMi7B,eAAgB9+B,EAAQ8+B,gBAC3D5b,EAAI2tC,YAAY/pD,EAAejD,EAAMk7B,WAAY/+B,EAAQ++B,aACzD7b,EAAI4tC,eAAiBhqD,EAAejD,EAAMm7B,iBAAkBh/B,EAAQg/B,kBACpE9b,EAAIq+C,SAAWz6D,EAAejD,EAAMo7B,gBAAiBj/B,EAAQi/B,iBAC7D/b,EAAI0G,UAAY9iB,EAAejD,EAAMikB,YAAa9nB,EAAQ8nB,aAC1D5E,EAAIyG,YAAc7iB,EAAejD,EAAM0e,YAAaviB,EAAQuiB,aAE9D,SAASmF,GAAOxE,EAAKwF,EAAUxgB,GAC7Bgb,EAAIwE,OAAOxf,EAAOmE,EAAGnE,EAAOoE,GAE9B,SAAS61D,GAAcniE,GACrB,OAAIA,EAAQoiE,QACH35C,GAELzoB,EAAQm2B,SAA8C,aAAnCn2B,EAAQi2B,uBACtBpN,GAEFnB,GAET,SAAS26C,GAAS9uC,EAAQgJ,EAAS6gB,EAAS,IAC1C,MAAMpqB,EAAQO,EAAOlzB,QACdwF,MAAOy8D,EAAc,EAAGx8D,IAAKy8D,EAAYvvC,EAAQ,GAAKoqB,GACtDv3C,MAAO28D,EAAc18D,IAAK28D,GAAclmC,EACzC12B,EAAQ2E,KAAKuC,IAAIu1D,EAAaE,GAC9B18D,EAAM0E,KAAKsC,IAAIy1D,EAAWE,GAC1BC,EAAUJ,EAAcE,GAAgBD,EAAYC,GAAgBF,EAAcG,GAAcF,EAAYE,EAClH,MAAO,CACLzvC,QACAntB,QACAiwB,KAAMyG,EAAQzG,KACdluB,KAAM9B,EAAMD,IAAU68D,EAAU1vC,EAAQltB,EAAMD,EAAQC,EAAMD,GAGhE,SAAS88D,GAAYz/C,EAAKuG,EAAM8S,EAAS6gB,GACvC,MAAM,OAAC7pB,EAAM,QAAEvzB,GAAWypB,GACpB,MAACuJ,EAAK,MAAEntB,EAAK,KAAEiwB,EAAI,KAAEluB,GAAQy6D,GAAS9uC,EAAQgJ,EAAS6gB,GACvDwlB,EAAaT,GAAcniE,GACjC,IACIuH,EAAG0gB,EAAOiO,GADV,KAACyX,GAAO,EAAI,QAAErmC,GAAW81C,GAAU,GAEvC,IAAK71C,EAAI,EAAGA,GAAKK,IAAQL,EACvB0gB,EAAQsL,GAAQ1tB,GAASyB,EAAUM,EAAOL,EAAIA,IAAMyrB,GAChD/K,EAAMuL,OAECma,GACTzqB,EAAIuE,OAAOQ,EAAM5b,EAAG4b,EAAM3b,GAC1BqhC,GAAO,GAEPi1B,EAAW1/C,EAAKgT,EAAMjO,EAAO3gB,EAAStH,EAAQoiE,SAEhDlsC,EAAOjO,GAMT,OAJI6N,IACF7N,EAAQsL,GAAQ1tB,GAASyB,EAAUM,EAAO,IAAMorB,GAChD4vC,EAAW1/C,EAAKgT,EAAMjO,EAAO3gB,EAAStH,EAAQoiE,YAEvCtsC,EAEX,SAAS+sC,GAAgB3/C,EAAKuG,EAAM8S,EAAS6gB,GAC3C,MAAM7pB,EAAS9J,EAAK8J,QACd,MAACP,EAAK,MAAEntB,EAAK,KAAE+B,GAAQy6D,GAAS9uC,EAAQgJ,EAAS6gB,IACjD,KAACzP,GAAO,EAAI,QAAErmC,GAAW81C,GAAU,GACzC,IAEI71C,EAAG0gB,EAAO66C,EAAOhuB,EAAMF,EAAMmuB,EAF7BC,EAAO,EACPC,EAAS,EAEb,MAAMC,EAAc1iE,IAAWqF,GAASyB,EAAUM,EAAOpH,EAAQA,IAAUwyB,EACrEmwC,EAAQ,KACRruB,IAASF,IACX1xB,EAAIwE,OAAOs7C,EAAMpuB,GACjB1xB,EAAIwE,OAAOs7C,EAAMluB,GACjB5xB,EAAIwE,OAAOs7C,EAAMD,KAOrB,IAJIp1B,IACF1lB,EAAQsL,EAAO2vC,EAAW,IAC1BhgD,EAAIuE,OAAOQ,EAAM5b,EAAG4b,EAAM3b,IAEvB/E,EAAI,EAAGA,GAAKK,IAAQL,EAAG,CAE1B,GADA0gB,EAAQsL,EAAO2vC,EAAW37D,IACtB0gB,EAAMuL,KACR,SAEF,MAAMnnB,EAAI4b,EAAM5b,EACVC,EAAI2b,EAAM3b,EACV82D,EAAa,EAAJ/2D,EACX+2D,IAAWN,GACTx2D,EAAIwoC,EACNA,EAAOxoC,EACEA,EAAIsoC,IACbA,EAAOtoC,GAET02D,GAAQC,EAASD,EAAO32D,KAAO42D,IAE/BE,IACAjgD,EAAIwE,OAAOrb,EAAGC,GACdw2D,EAAQM,EACRH,EAAS,EACTnuB,EAAOF,EAAOtoC,GAEhBy2D,EAAQz2D,EAEV62D,IAEF,SAASE,GAAkB55C,GACzB,MAAMJ,EAAOI,EAAKzpB,QACZ++B,EAAa1V,EAAK0V,YAAc1V,EAAK0V,WAAW1+B,OAChDijE,GAAe75C,EAAKiuB,aAAejuB,EAAKoU,QAAUxU,EAAK8M,SAA2C,aAAhC9M,EAAK4M,yBAA0C5M,EAAK+4C,UAAYrjC,EACxI,OAAOukC,EAAcT,GAAkBF,GAEzC,SAASY,GAAwBvjE,GAC/B,OAAIA,EAAQoiE,QACHloC,GAELl6B,EAAQm2B,SAA8C,aAAnCn2B,EAAQi2B,uBACtBkE,GAEFF,GAET,SAASupC,GAAoBtgD,EAAKuG,EAAM5jB,EAAOmtB,GAC7C,IAAIywC,EAAOh6C,EAAKi6C,MACXD,IACHA,EAAOh6C,EAAKi6C,MAAQ,IAAIC,OACpBl6C,EAAKg6C,KAAKA,EAAM59D,EAAOmtB,IACzBywC,EAAKj8C,aAGTy6C,GAAS/+C,EAAKuG,EAAKzpB,SACnBkjB,EAAI6E,OAAO07C,GAEb,SAASG,GAAiB1gD,EAAKuG,EAAM5jB,EAAOmtB,GAC1C,MAAM,SAACoK,EAAQ,QAAEp9B,GAAWypB,EACtBo6C,EAAgBR,GAAkB55C,GACxC,IAAK,MAAM8S,KAAWa,EACpB6kC,GAAS/+C,EAAKljB,EAASu8B,EAAQ14B,OAC/Bqf,EAAIoE,YACAu8C,EAAc3gD,EAAKuG,EAAM8S,EAAS,CAAC12B,QAAOC,IAAKD,EAAQmtB,EAAQ,KACjE9P,EAAIsE,YAENtE,EAAI6E,SAzJR,GAAW/jB,GAAK,MAChB,GAAW8gB,SAAW,CACpB8xB,YAAa,SACbr0B,YAAa,OACb0c,qBAAiBjhC,EACjBmhE,aAAc,EACdr3C,YAAa,EACb6rB,OAAQ,EACR4B,QAAS,EACT3nC,WAAO5P,GAET,GAAWkmD,cAAgB,CACzB5hC,gBAAiB,mBAgJnB,MAAMwhD,GAA8B,oBAAXH,OACzB,SAASxjC,GAAKjd,EAAKuG,EAAM5jB,EAAOmtB,GAC1B8wC,KAAcr6C,EAAKzpB,QAAQu8B,QAC7BinC,GAAoBtgD,EAAKuG,EAAM5jB,EAAOmtB,GAEtC4wC,GAAiB1gD,EAAKuG,EAAM5jB,EAAOmtB,GAGvC,MAAM,WAAoB,GACxB,YAAYyO,GACV8P,QACAtvC,KAAK01C,UAAW,EAChB11C,KAAKjC,aAAUhC,EACfiE,KAAKL,YAAS5D,EACdiE,KAAK47B,WAAQ7/B,EACbiE,KAAK+7B,eAAYhgC,EACjBiE,KAAKyhE,WAAQ1lE,EACbiE,KAAK8hE,aAAU/lE,EACfiE,KAAK+hE,eAAYhmE,EACjBiE,KAAKy1C,YAAa,EAClBz1C,KAAKgiE,gBAAiB,EACtBhiE,KAAKo8B,mBAAgBrgC,EACjByjC,GACF9hC,OAAOC,OAAOqC,KAAMw/B,GAGxB,oBAAoB0K,EAAW9oB,GAC7B,MAAMrjB,EAAUiC,KAAKjC,QACrB,IAAKA,EAAQm2B,SAA8C,aAAnCn2B,EAAQi2B,0BAA2Cj2B,EAAQoiE,UAAYngE,KAAKgiE,eAAgB,CAClH,MAAMnuC,EAAO91B,EAAQg2B,SAAW/zB,KAAK47B,MAAQ57B,KAAK+7B,UAClDnI,GAA2B5zB,KAAK8hE,QAAS/jE,EAASmsC,EAAWrW,EAAMzS,GACnEphB,KAAKgiE,gBAAiB,GAG1B,WAAW1wC,GACTtxB,KAAK8hE,QAAUxwC,SACRtxB,KAAK+hE,iBACL/hE,KAAKyhE,MACZzhE,KAAKgiE,gBAAiB,EAExB,aACE,OAAOhiE,KAAK8hE,QAEd,eACE,OAAO9hE,KAAK+hE,YAAc/hE,KAAK+hE,UAAYrmC,GAAiB17B,KAAMA,KAAKjC,QAAQu8B,UAEjF,QACE,MAAMa,EAAWn7B,KAAKm7B,SAChB7J,EAAStxB,KAAKsxB,OACpB,OAAO6J,EAAS/8B,QAAUkzB,EAAO6J,EAAS,GAAGv3B,OAE/C,OACE,MAAMu3B,EAAWn7B,KAAKm7B,SAChB7J,EAAStxB,KAAKsxB,OACdP,EAAQoK,EAAS/8B,OACvB,OAAO2yB,GAASO,EAAO6J,EAASpK,EAAQ,GAAGltB,KAE7C,YAAYmiB,EAAOpb,GACjB,MAAM7M,EAAUiC,KAAKjC,QACfO,EAAQ0nB,EAAMpb,GACd0mB,EAAStxB,KAAKsxB,OACd6J,EAAWD,GAAel7B,KAAM,CAAC4K,WAAUhH,MAAOtF,EAAOuF,IAAKvF,IACpE,IAAK68B,EAAS/8B,OACZ,OAEF,MAAMyL,EAAS,GACTo4D,EAAeX,GAAwBvjE,GAC7C,IAAIuH,EAAGK,EACP,IAAKL,EAAI,EAAGK,EAAOw1B,EAAS/8B,OAAQkH,EAAIK,IAAQL,EAAG,CACjD,MAAM,MAAC1B,EAAK,IAAEC,GAAOs3B,EAAS71B,GACxB+M,EAAKif,EAAO1tB,GACZ0O,EAAKgf,EAAOztB,GAClB,GAAIwO,IAAOC,EAAI,CACbzI,EAAOpM,KAAK4U,GACZ,SAEF,MAAMvF,EAAIvE,KAAKgC,KAAKjM,EAAQ+T,EAAGzH,KAAc0H,EAAG1H,GAAYyH,EAAGzH,KACzDs3D,EAAeD,EAAa5vD,EAAIC,EAAIxF,EAAG/O,EAAQoiE,SACrD+B,EAAat3D,GAAYob,EAAMpb,GAC/Bf,EAAOpM,KAAKykE,GAEd,OAAyB,IAAlBr4D,EAAOzL,OAAeyL,EAAO,GAAKA,EAE3C,YAAYoX,EAAKqZ,EAAS6gB,GACxB,MAAMymB,EAAgBR,GAAkBphE,MACxC,OAAO4hE,EAAc3gD,EAAKjhB,KAAMs6B,EAAS6gB,GAE3C,KAAKl6B,EAAKrd,EAAOmtB,GACf,MAAMoK,EAAWn7B,KAAKm7B,SAChBymC,EAAgBR,GAAkBphE,MACxC,IAAI6zB,EAAO7zB,KAAK47B,MAChBh4B,EAAQA,GAAS,EACjBmtB,EAAQA,GAAU/wB,KAAKsxB,OAAOlzB,OAASwF,EACvC,IAAK,MAAM02B,KAAWa,EACpBtH,GAAQ+tC,EAAc3gD,EAAKjhB,KAAMs6B,EAAS,CAAC12B,QAAOC,IAAKD,EAAQmtB,EAAQ,IAEzE,QAAS8C,EAEX,KAAK5S,EAAKipB,EAAWtmC,EAAOmtB,GAC1B,MAAMhzB,EAAUiC,KAAKjC,SAAW,GAC1BuzB,EAAStxB,KAAKsxB,QAAU,GAC1BA,EAAOlzB,QAAUL,EAAQ8nB,cAC3B5E,EAAI4C,OACJqa,GAAKjd,EAAKjhB,KAAM4D,EAAOmtB,GACvB9P,EAAIgD,WAEFjkB,KAAK01C,WACP11C,KAAKgiE,gBAAiB,EACtBhiE,KAAKyhE,WAAQ1lE,IA2BnB,SAASomE,GAAUntC,EAAIztB,EAAKq9B,EAAMyU,GAChC,MAAMt7C,EAAUi3B,EAAGj3B,SACZ,CAAC6mC,GAAOtmC,GAAS02B,EAAG0kB,SAAS,CAAC9U,GAAOyU,GAC5C,OAAQ9wC,KAAKgC,IAAIhD,EAAMjJ,GAASP,EAAQknB,OAASlnB,EAAQqkE,UA1B3D,GAAYrgE,GAAK,OACjB,GAAY8gB,SAAW,CACrBga,eAAgB,OAChBC,WAAY,GACZC,iBAAkB,EAClBC,gBAAiB,QACjBnX,YAAa,EACb2N,iBAAiB,EACjBQ,uBAAwB,UACxBpO,MAAM,EACNmO,UAAU,EACVosC,SAAS,EACTjsC,QAAS,GAEX,GAAY+tB,cAAgB,CAC1B5hC,gBAAiB,kBACjBC,YAAa,eAEf,GAAYoP,YAAc,CACxB5M,aAAa,EACbE,WAAab,GAAkB,eAATA,GAAkC,SAATA,GAQjD,MAAM,WAAqB,GACzB,YAAYqd,GACV8P,QACAtvC,KAAKjC,aAAUhC,EACfiE,KAAKkxB,YAASn1B,EACdiE,KAAKuxB,UAAOx1B,EACZiE,KAAKy7B,UAAO1/B,EACRyjC,GACF9hC,OAAOC,OAAOqC,KAAMw/B,GAGxB,QAAQ6iC,EAAQC,EAAQjpB,GACtB,MAAMt7C,EAAUiC,KAAKjC,SACf,EAACqM,EAAC,EAAEC,GAAKrK,KAAK05C,SAAS,CAAC,IAAK,KAAML,GACzC,OAAS9wC,KAAKiB,IAAI64D,EAASj4D,EAAG,GAAK7B,KAAKiB,IAAI84D,EAASj4D,EAAG,GAAM9B,KAAKiB,IAAIzL,EAAQqkE,UAAYrkE,EAAQknB,OAAQ,GAE7G,SAASo9C,EAAQhpB,GACf,OAAO8oB,GAAUniE,KAAMqiE,EAAQ,IAAKhpB,GAEtC,SAASipB,EAAQjpB,GACf,OAAO8oB,GAAUniE,KAAMsiE,EAAQ,IAAKjpB,GAEtC,eAAeA,GACb,MAAM,EAACjvC,EAAC,EAAEC,GAAKrK,KAAK05C,SAAS,CAAC,IAAK,KAAML,GACzC,MAAO,CAACjvC,IAAGC,KAEb,KAAKtM,GACHA,EAAUA,GAAWiC,KAAKjC,SAAW,GACrC,IAAIknB,EAASlnB,EAAQknB,QAAU,EAC/BA,EAAS1c,KAAKuC,IAAIma,EAAQA,GAAUlnB,EAAQwkE,aAAe,GAC3D,MAAM18C,EAAcZ,GAAUlnB,EAAQ8nB,aAAe,EACrD,OAAgC,GAAxBZ,EAASY,GAEnB,KAAK5E,EAAKgF,GACR,MAAMloB,EAAUiC,KAAKjC,QACjBiC,KAAKuxB,MAAQxzB,EAAQknB,OAAS,KAAQc,GAAe/lB,KAAMimB,EAAMjmB,KAAKiI,KAAKlK,GAAW,KAG1FkjB,EAAIyG,YAAc3pB,EAAQuiB,YAC1BW,EAAI0G,UAAY5pB,EAAQ8nB,YACxB5E,EAAIgH,UAAYlqB,EAAQsiB,gBACxBsE,GAAU1D,EAAKljB,EAASiC,KAAKoK,EAAGpK,KAAKqK,IAEvC,WACE,MAAMtM,EAAUiC,KAAKjC,SAAW,GAChC,OAAOA,EAAQknB,OAASlnB,EAAQqkE,WAkBpC,SAASI,GAAaC,EAAKppB,GACzB,MAAM,EAACjvC,EAAC,EAAEC,EAAC,KAAE8hB,EAAI,MAAE/sB,EAAK,OAAEE,GAAUmjE,EAAI/oB,SAAS,CAAC,IAAK,IAAK,OAAQ,QAAS,UAAWL,GACxF,IAAIt1C,EAAMC,EAAOmiB,EAAKC,EAAQs8C,EAc9B,OAbID,EAAIj0B,YACNk0B,EAAOpjE,EAAS,EAChByE,EAAOwE,KAAKsC,IAAIT,EAAG+hB,GACnBnoB,EAAQuE,KAAKuC,IAAIV,EAAG+hB,GACpBhG,EAAM9b,EAAIq4D,EACVt8C,EAAS/b,EAAIq4D,IAEbA,EAAOtjE,EAAQ,EACf2E,EAAOqG,EAAIs4D,EACX1+D,EAAQoG,EAAIs4D,EACZv8C,EAAM5d,KAAKsC,IAAIR,EAAG8hB,GAClB/F,EAAS7d,KAAKuC,IAAIT,EAAG8hB,IAEhB,CAACpoB,OAAMoiB,MAAKniB,QAAOoiB,UAE5B,SAASu8C,GAAYpxC,EAAMjzB,EAAOuM,EAAKC,GACrC,OAAOymB,EAAO,EAAI7kB,GAAYpO,EAAOuM,EAAKC,GAE5C,SAAS83D,GAAiBH,EAAKI,EAAMC,GACnC,MAAMxkE,EAAQmkE,EAAI1kE,QAAQ8nB,YACpB0L,EAAOkxC,EAAI9zB,cACXsuB,EAAIpzC,GAAOvrB,GACjB,MAAO,CACLwO,EAAG61D,GAAYpxC,EAAKpL,IAAK82C,EAAE92C,IAAK,EAAG28C,GACnC7xD,EAAG0xD,GAAYpxC,EAAKvtB,MAAOi5D,EAAEj5D,MAAO,EAAG6+D,GACvC76D,EAAG26D,GAAYpxC,EAAKnL,OAAQ62C,EAAE72C,OAAQ,EAAG08C,GACzC3zD,EAAGwzD,GAAYpxC,EAAKxtB,KAAMk5D,EAAEl5D,KAAM,EAAG8+D,IAGzC,SAASE,GAAkBN,EAAKI,EAAMC,GACpC,MAAM,mBAACl0B,GAAsB6zB,EAAI/oB,SAAS,CAAC,uBACrCp7C,EAAQmkE,EAAI1kE,QAAQm/D,aACpBD,EAAInzC,GAAcxrB,GAClB0kE,EAAOz6D,KAAKsC,IAAIg4D,EAAMC,GACtBvxC,EAAOkxC,EAAI9zB,cACXs0B,EAAer0B,GAAsBpqC,EAASlG,GACpD,MAAO,CACLwqB,QAAS65C,IAAaM,GAAgB1xC,EAAKpL,KAAOoL,EAAKxtB,KAAMk5D,EAAEn0C,QAAS,EAAGk6C,GAC3E/5C,SAAU05C,IAAaM,GAAgB1xC,EAAKpL,KAAOoL,EAAKvtB,MAAOi5D,EAAEh0C,SAAU,EAAG+5C,GAC9Ej6C,WAAY45C,IAAaM,GAAgB1xC,EAAKnL,QAAUmL,EAAKxtB,KAAMk5D,EAAEl0C,WAAY,EAAGi6C,GACpFh6C,YAAa25C,IAAaM,GAAgB1xC,EAAKnL,QAAUmL,EAAKvtB,MAAOi5D,EAAEj0C,YAAa,EAAGg6C,IAG3F,SAASE,GAAcT,GACrB,MAAMloC,EAASioC,GAAaC,GACtBrjE,EAAQm7B,EAAOv2B,MAAQu2B,EAAOx2B,KAC9BzE,EAASi7B,EAAOnU,OAASmU,EAAOpU,IAChC4vB,EAAS6sB,GAAiBH,EAAKrjE,EAAQ,EAAGE,EAAS,GACnD2lB,EAAS89C,GAAkBN,EAAKrjE,EAAQ,EAAGE,EAAS,GAC1D,MAAO,CACL6jE,MAAO,CACL/4D,EAAGmwB,EAAOx2B,KACVsG,EAAGkwB,EAAOpU,IACVzU,EAAGtS,EACHgQ,EAAG9P,EACH2lB,UAEFo6C,MAAO,CACLj1D,EAAGmwB,EAAOx2B,KAAOgyC,EAAO5mC,EACxB9E,EAAGkwB,EAAOpU,IAAM4vB,EAAOjpC,EACvB4E,EAAGtS,EAAQ22C,EAAO5mC,EAAI4mC,EAAO9kC,EAC7B7B,EAAG9P,EAASy2C,EAAOjpC,EAAIipC,EAAO/tC,EAC9Bid,OAAQ,CACN6D,QAASvgB,KAAKuC,IAAI,EAAGma,EAAO6D,QAAUvgB,KAAKuC,IAAIirC,EAAOjpC,EAAGipC,EAAO5mC,IAChE8Z,SAAU1gB,KAAKuC,IAAI,EAAGma,EAAOgE,SAAW1gB,KAAKuC,IAAIirC,EAAOjpC,EAAGipC,EAAO9kC,IAClE8X,WAAYxgB,KAAKuC,IAAI,EAAGma,EAAO8D,WAAaxgB,KAAKuC,IAAIirC,EAAO/tC,EAAG+tC,EAAO5mC,IACtE6Z,YAAazgB,KAAKuC,IAAI,EAAGma,EAAO+D,YAAczgB,KAAKuC,IAAIirC,EAAO/tC,EAAG+tC,EAAO9kC,OAKhF,SAASuoC,GAAQipB,EAAKr4D,EAAGC,EAAGgvC,GAC1B,MAAM+pB,EAAc,OAANh5D,EACRi5D,EAAc,OAANh5D,EACRi5D,EAAWF,GAASC,EACpB9oC,EAASkoC,IAAQa,GAAYd,GAAaC,EAAKppB,GACrD,OAAO9e,IACH6oC,GAASx2D,GAAWxC,EAAGmwB,EAAOx2B,KAAMw2B,EAAOv2B,UAC3Cq/D,GAASz2D,GAAWvC,EAAGkwB,EAAOpU,IAAKoU,EAAOnU,SAEhD,SAASm9C,GAAUt+C,GACjB,OAAOA,EAAO6D,SAAW7D,EAAOgE,UAAYhE,EAAO8D,YAAc9D,EAAO+D,YAE1E,SAASw6C,GAAkBviD,EAAK0E,GAC9B1E,EAAI0E,KAAKA,EAAKvb,EAAGub,EAAKtb,EAAGsb,EAAKjU,EAAGiU,EAAKvW,GAExC,SAASq0D,GAAY99C,EAAMsyB,EAAQyrB,EAAU,IAC3C,MAAMt5D,EAAIub,EAAKvb,IAAMs5D,EAAQt5D,GAAK6tC,EAAS,EACrC5tC,EAAIsb,EAAKtb,IAAMq5D,EAAQr5D,GAAK4tC,EAAS,EACrCvmC,GAAKiU,EAAKvb,EAAIub,EAAKjU,IAAMgyD,EAAQt5D,EAAIs5D,EAAQhyD,EAAIumC,EAAS,GAAK7tC,EAC/DgF,GAAKuW,EAAKtb,EAAIsb,EAAKvW,IAAMs0D,EAAQr5D,EAAIq5D,EAAQt0D,EAAI6oC,EAAS,GAAK5tC,EACrE,MAAO,CACLD,EAAGub,EAAKvb,EAAIA,EACZC,EAAGsb,EAAKtb,EAAIA,EACZqH,EAAGiU,EAAKjU,EAAIA,EACZtC,EAAGuW,EAAKvW,EAAIA,EACZ6V,OAAQU,EAAKV,QAlHjB,GAAaljB,GAAK,QAClB,GAAa8gB,SAAW,CACtBgD,YAAa,EACbu8C,UAAW,EACXxtB,iBAAkB,EAClB2tB,YAAa,EACbx9C,WAAY,SACZE,OAAQ,EACRD,SAAU,GAEZ,GAAai9B,cAAgB,CAC3B5hC,gBAAiB,kBACjBC,YAAa,eAyGf,MAAM,WAAmB,GACvB,YAAYkf,GACV8P,QACAtvC,KAAKjC,aAAUhC,EACfiE,KAAKwuC,gBAAazyC,EAClBiE,KAAKmsB,UAAOpwB,EACZiE,KAAKZ,WAAQrD,EACbiE,KAAKV,YAASvD,EACdiE,KAAKmvC,mBAAgBpzC,EACjByjC,GACF9hC,OAAOC,OAAOqC,KAAMw/B,GAGxB,KAAKve,GACH,MAAM,cAACkuB,EAAepxC,SAAS,YAACuiB,EAAW,gBAAED,IAAoBrgB,MAC3D,MAACq/D,EAAK,MAAE8D,GAASD,GAAcljE,MAC/B2jE,EAAcJ,GAAUJ,EAAMl+C,QAAU4D,GAAqB26C,GACnEviD,EAAI4C,OACAs/C,EAAMzxD,IAAM2tD,EAAM3tD,GAAKyxD,EAAM/zD,IAAMiwD,EAAMjwD,IAC3C6R,EAAIoE,YACJs+C,EAAY1iD,EAAKwiD,GAAYN,EAAOh0B,EAAekwB,IACnDp+C,EAAIqF,OACJq9C,EAAY1iD,EAAKwiD,GAAYpE,GAAQlwB,EAAeg0B,IACpDliD,EAAIgH,UAAY3H,EAChBW,EAAI2E,KAAK,YAEX3E,EAAIoE,YACJs+C,EAAY1iD,EAAKwiD,GAAYpE,EAAOlwB,IACpCluB,EAAIgH,UAAY5H,EAChBY,EAAI2E,OACJ3E,EAAIgD,UAEN,QAAQo+C,EAAQC,EAAQjpB,GACtB,OAAOG,GAAQx5C,KAAMqiE,EAAQC,EAAQjpB,GAEvC,SAASgpB,EAAQhpB,GACf,OAAOG,GAAQx5C,KAAMqiE,EAAQ,KAAMhpB,GAErC,SAASipB,EAAQjpB,GACf,OAAOG,GAAQx5C,KAAM,KAAMsiE,EAAQjpB,GAErC,eAAeA,GACb,MAAM,EAACjvC,EAAC,EAAEC,EAAC,KAAE8hB,EAAI,WAAEqiB,GAAcxuC,KAAK05C,SAAS,CAAC,IAAK,IAAK,OAAQ,cAAeL,GACjF,MAAO,CACLjvC,EAAGokC,GAAcpkC,EAAI+hB,GAAQ,EAAI/hB,EACjCC,EAAGmkC,EAAankC,GAAKA,EAAI8hB,GAAQ,GAGrC,SAASyY,GACP,MAAgB,MAATA,EAAe5kC,KAAKZ,MAAQ,EAAIY,KAAKV,OAAS,GAGzD,GAAWyC,GAAK,MAChB,GAAW8gB,SAAW,CACpB8rB,cAAe,QACf9oB,YAAa,EACbq3C,aAAc,EACd/tB,cAAe,OACfpqB,gBAAYhpB,GAEd,GAAWkmD,cAAgB,CACzB5hC,gBAAiB,kBACjBC,YAAa,eAitBf,MAAMsjD,GAAa,CAACC,EAAWrU,KAC7B,IAAI,UAACsU,EAAYtU,EAAQ,SAAEuU,EAAWvU,GAAYqU,EAKlD,OAJIA,EAAUG,gBACZF,EAAYv7D,KAAKsC,IAAIi5D,EAAWtU,GAChCuU,EAAWx7D,KAAKsC,IAAIk5D,EAAUvU,IAEzB,CACLuU,WACAD,YACAG,WAAY17D,KAAKuC,IAAI0kD,EAAUsU,KAG7BI,GAAa,CAACn8D,EAAGC,IAAY,OAAND,GAAoB,OAANC,GAAcD,EAAEjC,eAAiBkC,EAAElC,cAAgBiC,EAAExJ,QAAUyJ,EAAEzJ,MAC5G,MAAM,WAAe,GACnB,YAAY2iC,GACVoO,QACAtvC,KAAKmkE,QAAS,EACdnkE,KAAKokE,eAAiB,GACtBpkE,KAAKqkE,aAAe,KACpBrkE,KAAKskE,cAAe,EACpBtkE,KAAK7D,MAAQ+kC,EAAO/kC,MACpB6D,KAAKjC,QAAUmjC,EAAOnjC,QACtBiC,KAAKihB,IAAMigB,EAAOjgB,IAClBjhB,KAAKukE,iBAAcxoE,EACnBiE,KAAKwkE,iBAAczoE,EACnBiE,KAAKykE,gBAAa1oE,EAClBiE,KAAKs2B,eAAYv6B,EACjBiE,KAAK6nB,cAAW9rB,EAChBiE,KAAKmmB,SAAMpqB,EACXiE,KAAKomB,YAASrqB,EACdiE,KAAK+D,UAAOhI,EACZiE,KAAKgE,WAAQjI,EACbiE,KAAKV,YAASvD,EACdiE,KAAKZ,WAAQrD,EACbiE,KAAK8mD,cAAW/qD,EAChBiE,KAAK64C,cAAW98C,EAChBiE,KAAKgf,YAASjjB,EACdiE,KAAKu7C,cAAWx/C,EAElB,OAAO8rB,EAAUyO,EAAWY,GAC1Bl3B,KAAK6nB,SAAWA,EAChB7nB,KAAKs2B,UAAYA,EACjBt2B,KAAK8mD,SAAW5vB,EAChBl3B,KAAKyoD,gBACLzoD,KAAK0kE,cACL1kE,KAAKwpD,MAEP,gBACMxpD,KAAKsuC,gBACPtuC,KAAKZ,MAAQY,KAAK6nB,SAClB7nB,KAAK+D,KAAO/D,KAAK8mD,SAAS/iD,KAC1B/D,KAAKgE,MAAQhE,KAAKZ,QAElBY,KAAKV,OAASU,KAAKs2B,UACnBt2B,KAAKmmB,IAAMnmB,KAAK8mD,SAAS3gC,IACzBnmB,KAAKomB,OAASpmB,KAAKV,QAGvB,cACE,MAAMukE,EAAY7jE,KAAKjC,QAAQlB,QAAU,GACzC,IAAI0nE,EAAcjiE,EAASuhE,EAAUc,eAAgB,CAAC3kE,KAAK7D,OAAQ6D,OAAS,GACxE6jE,EAAU5zC,SACZs0C,EAAcA,EAAYt0C,OAAQ/nB,GAAS27D,EAAU5zC,OAAO/nB,EAAMlI,KAAK7D,MAAMO,QAE3EmnE,EAAU95D,OACZw6D,EAAcA,EAAYx6D,KAAK,CAAChC,EAAGC,IAAM67D,EAAU95D,KAAKhC,EAAGC,EAAGhI,KAAK7D,MAAMO,QAEvEsD,KAAKjC,QAAQsH,SACfk/D,EAAYl/D,UAEdrF,KAAKukE,YAAcA,EAErB,MACE,MAAM,QAACxmE,EAAO,IAAEkjB,GAAOjhB,KACvB,IAAKjC,EAAQy5C,QAEX,YADAx3C,KAAKZ,MAAQY,KAAKV,OAAS,GAG7B,MAAMukE,EAAY9lE,EAAQlB,OACpB+nE,EAAY56C,GAAO65C,EAAUjjD,MAC7B4uC,EAAWoV,EAAU38D,KACrB6iD,EAAc9qD,KAAK6kE,uBACnB,SAACd,EAAQ,WAAEE,GAAcL,GAAWC,EAAWrU,GACrD,IAAIpwD,EAAOE,EACX2hB,EAAIL,KAAOgkD,EAAUthD,OACjBtjB,KAAKsuC,gBACPlvC,EAAQY,KAAK6nB,SACbvoB,EAASU,KAAK8kE,SAASha,EAAa0E,EAAUuU,EAAUE,GAAc,KAEtE3kE,EAASU,KAAKs2B,UACdl3B,EAAQY,KAAK+kE,SAASja,EAAa0E,EAAUuU,EAAUE,GAAc,IAEvEjkE,KAAKZ,MAAQmJ,KAAKsC,IAAIzL,EAAOrB,EAAQ8pB,UAAY7nB,KAAK6nB,UACtD7nB,KAAKV,OAASiJ,KAAKsC,IAAIvL,EAAQvB,EAAQu4B,WAAat2B,KAAKs2B,WAE3D,SAASw0B,EAAa0E,EAAUuU,EAAUE,GACxC,MAAM,IAAChjD,EAAG,SAAE4G,EAAU9pB,SAAUlB,QAAQ,QAAC2gD,KAAax9C,KAChDglE,EAAWhlE,KAAKokE,eAAiB,GACjCK,EAAazkE,KAAKykE,WAAa,CAAC,GAChC3jD,EAAamjD,EAAazmB,EAChC,IAAIynB,EAAcna,EAClB7pC,EAAIiH,UAAY,OAChBjH,EAAIkH,aAAe,SACnB,IAAI+8C,GAAO,EACP/+C,GAAOrF,EAYX,OAXA9gB,KAAKukE,YAAYt4C,QAAQ,CAAC+oB,EAAY1vC,KACpC,MAAM+zB,EAAY0qC,EAAYvU,EAAW,EAAKvuC,EAAIuC,YAAYwxB,EAAW7tB,MAAM/nB,OACrE,IAANkG,GAAWm/D,EAAWA,EAAWrmE,OAAS,GAAKi7B,EAAY,EAAImkB,EAAU31B,KAC3Eo9C,GAAenkD,EACf2jD,EAAWA,EAAWrmE,QAAUkH,EAAI,EAAI,EAAI,IAAM,EAClD6gB,GAAOrF,EACPokD,KAEFF,EAAS1/D,GAAK,CAACvB,KAAM,EAAGoiB,MAAK++C,MAAK9lE,MAAOi6B,EAAW/5B,OAAQ2kE,GAC5DQ,EAAWA,EAAWrmE,OAAS,IAAMi7B,EAAYmkB,IAE5CynB,EAET,SAASna,EAAa0E,EAAUuU,EAAUE,GACxC,MAAM,IAAChjD,EAAG,UAAEqV,EAAWv4B,SAAUlB,QAAQ,QAAC2gD,KAAax9C,KACjDglE,EAAWhlE,KAAKokE,eAAiB,GACjCI,EAAcxkE,KAAKwkE,YAAc,GACjCW,EAAc7uC,EAAYw0B,EAChC,IAAIsa,EAAa5nB,EACb6nB,EAAkB,EAClBC,EAAmB,EACnBvhE,EAAO,EACPwhE,EAAM,EAgBV,OAfAvlE,KAAKukE,YAAYt4C,QAAQ,CAAC+oB,EAAY1vC,KACpC,MAAM+zB,EAAY0qC,EAAYvU,EAAW,EAAKvuC,EAAIuC,YAAYwxB,EAAW7tB,MAAM/nB,MAC3EkG,EAAI,GAAKggE,EAAmBrB,EAAa,EAAIzmB,EAAU2nB,IACzDC,GAAcC,EAAkB7nB,EAChCgnB,EAAY/mE,KAAK,CAAC2B,MAAOimE,EAAiB/lE,OAAQgmE,IAClDvhE,GAAQshE,EAAkB7nB,EAC1B+nB,IACAF,EAAkBC,EAAmB,GAEvCN,EAAS1/D,GAAK,CAACvB,OAAMoiB,IAAKm/C,EAAkBC,MAAKnmE,MAAOi6B,EAAW/5B,OAAQ2kE,GAC3EoB,EAAkB98D,KAAKuC,IAAIu6D,EAAiBhsC,GAC5CisC,GAAoBrB,EAAazmB,IAEnC4nB,GAAcC,EACdb,EAAY/mE,KAAK,CAAC2B,MAAOimE,EAAiB/lE,OAAQgmE,IAC3CF,EAET,iBACE,IAAKplE,KAAKjC,QAAQy5C,QAChB,OAEF,MAAMsT,EAAc9qD,KAAK6kE,uBAClBT,eAAgBY,EAAUjnE,SAAS,MAAC2F,EAAO7G,QAAQ,QAAC2gD,GAAQ,IAAEv5C,IAAQjE,KACvEwlE,EAAYhsC,GAAcv1B,EAAKjE,KAAK+D,KAAM/D,KAAKZ,OACrD,GAAIY,KAAKsuC,eAAgB,CACvB,IAAI42B,EAAM,EACNnhE,EAAOJ,EAAeD,EAAO1D,KAAK+D,KAAOy5C,EAASx9C,KAAKgE,MAAQhE,KAAKykE,WAAWS,IACnF,IAAK,MAAMO,KAAUT,EACfE,IAAQO,EAAOP,MACjBA,EAAMO,EAAOP,IACbnhE,EAAOJ,EAAeD,EAAO1D,KAAK+D,KAAOy5C,EAASx9C,KAAKgE,MAAQhE,KAAKykE,WAAWS,KAEjFO,EAAOt/C,KAAOnmB,KAAKmmB,IAAM2kC,EAActN,EACvCioB,EAAO1hE,KAAOyhE,EAAUE,WAAWF,EAAUp7D,EAAErG,GAAO0hE,EAAOrmE,OAC7D2E,GAAQ0hE,EAAOrmE,MAAQo+C,MAEpB,CACL,IAAI+nB,EAAM,EACNp/C,EAAMxiB,EAAeD,EAAO1D,KAAKmmB,IAAM2kC,EAActN,EAASx9C,KAAKomB,OAASpmB,KAAKwkE,YAAYe,GAAKjmE,QACtG,IAAK,MAAMmmE,KAAUT,EACfS,EAAOF,MAAQA,IACjBA,EAAME,EAAOF,IACbp/C,EAAMxiB,EAAeD,EAAO1D,KAAKmmB,IAAM2kC,EAActN,EAASx9C,KAAKomB,OAASpmB,KAAKwkE,YAAYe,GAAKjmE,SAEpGmmE,EAAOt/C,IAAMA,EACbs/C,EAAO1hE,MAAQ/D,KAAK+D,KAAOy5C,EAC3BioB,EAAO1hE,KAAOyhE,EAAUE,WAAWF,EAAUp7D,EAAEq7D,EAAO1hE,MAAO0hE,EAAOrmE,OACpE+mB,GAAOs/C,EAAOnmE,OAASk+C,GAI7B,eACE,MAAiC,QAA1Bx9C,KAAKjC,QAAQ86C,UAAgD,WAA1B74C,KAAKjC,QAAQ86C,SAEzD,OACE,GAAI74C,KAAKjC,QAAQy5C,QAAS,CACxB,MAAMv2B,EAAMjhB,KAAKihB,IACjBoF,GAASpF,EAAKjhB,MACdA,KAAK2lE,QACLp/C,GAAWtF,IAGf,QACE,MAAOljB,QAASqpB,EAAI,YAAEo9C,EAAW,WAAEC,EAAU,IAAExjD,GAAOjhB,MAChD,MAAC0D,EAAO7G,OAAQgnE,GAAaz8C,EAC7Bw+C,EAAe/iD,GAAS9D,MACxBymD,EAAYhsC,GAAcpS,EAAKnjB,IAAKjE,KAAK+D,KAAM/D,KAAKZ,OACpDwlE,EAAY56C,GAAO65C,EAAUjjD,OAC5B7B,MAAO8mD,EAAS,QAAEroB,GAAWqmB,EAC9BrU,EAAWoV,EAAU38D,KACrB69D,EAAetW,EAAW,EAChC,IAAIuW,EACJ/lE,KAAKmvD,YACLluC,EAAIiH,UAAYs9C,EAAUt9C,UAAU,QACpCjH,EAAIkH,aAAe,SACnBlH,EAAI0G,UAAY,GAChB1G,EAAIL,KAAOgkD,EAAUthD,OACrB,MAAM,SAACygD,EAAQ,UAAED,EAAS,WAAEG,GAAcL,GAAWC,EAAWrU,GAC1DwW,EAAgB,SAAS57D,EAAGC,EAAG2qC,GACnC,GAAI7qC,MAAM45D,IAAaA,GAAY,GAAK55D,MAAM25D,IAAcA,EAAY,EACtE,OAEF7iD,EAAI4C,OACJ,MAAM8D,EAAY9iB,EAAemwC,EAAWrtB,UAAW,GAQvD,GAPA1G,EAAIgH,UAAYpjB,EAAemwC,EAAW/sB,UAAW29C,GACrD3kD,EAAIg/C,QAAUp7D,EAAemwC,EAAWirB,QAAS,QACjDh/C,EAAI4tC,eAAiBhqD,EAAemwC,EAAW6Z,eAAgB,GAC/D5tC,EAAIq+C,SAAWz6D,EAAemwC,EAAWsqB,SAAU,SACnDr+C,EAAI0G,UAAYA,EAChB1G,EAAIyG,YAAc7iB,EAAemwC,EAAWttB,YAAak+C,GACzD3kD,EAAI2tC,YAAY/pD,EAAemwC,EAAWixB,SAAU,KAChDpC,EAAUG,cAAe,CAC3B,MAAMkC,EAAc,CAClBjhD,OAAQ8+C,EAAWx7D,KAAK49D,MAAQ,EAChCphD,WAAYiwB,EAAWjwB,WACvBC,SAAUgwB,EAAWhwB,SACrBa,YAAa8B,GAET2sB,EAAUkxB,EAAUY,MAAMh8D,EAAG25D,EAAW,GACxCxvB,EAAUlqC,EAAIy7D,EACpBnhD,GAAU1D,EAAKilD,EAAa5xB,EAASC,OAChC,CACL,MAAM8xB,EAAUh8D,EAAI9B,KAAKuC,KAAK0kD,EAAWsU,GAAa,EAAG,GACnDwC,EAAWd,EAAUE,WAAWt7D,EAAG25D,GACnC7G,EAAepzC,GAAckrB,EAAWkoB,cAC9Cj8C,EAAIoE,YACA3nB,OAAOuiB,OAAOi9C,GAAcrL,KAAK5iD,GAAW,IAANA,GACxC4Z,GAAmB5H,EAAK,CACtB7W,EAAGk8D,EACHj8D,EAAGg8D,EACH30D,EAAGqyD,EACH30D,EAAG00D,EACH7+C,OAAQi4C,IAGVj8C,EAAI0E,KAAK2gD,EAAUD,EAAStC,EAAUD,GAExC7iD,EAAI2E,OACc,IAAd+B,GACF1G,EAAI6E,SAGR7E,EAAIgD,WAEA6D,EAAW,SAAS1d,EAAGC,EAAG2qC,GAC9B9tB,GAAWjG,EAAK+zB,EAAW7tB,KAAM/c,EAAGC,EAAK45D,EAAa,EAAIW,EAAW,CACnEx8C,cAAe4sB,EAAWjP,OAC1B7d,UAAWs9C,EAAUt9C,UAAU8sB,EAAW9sB,cAGxComB,EAAetuC,KAAKsuC,eACpBwc,EAAc9qD,KAAK6kE,sBAEvBkB,EADEz3B,EACO,CACPlkC,EAAGzG,EAAeD,EAAO1D,KAAK+D,KAAOy5C,EAASx9C,KAAKgE,MAAQygE,EAAW,IACtEp6D,EAAGrK,KAAKmmB,IAAMq3B,EAAUsN,EACxBtjC,KAAM,GAGC,CACPpd,EAAGpK,KAAK+D,KAAOy5C,EACfnzC,EAAG1G,EAAeD,EAAO1D,KAAKmmB,IAAM2kC,EAActN,EAASx9C,KAAKomB,OAASo+C,EAAY,GAAGllE,QACxFkoB,KAAM,GAGViS,GAAsBz5B,KAAKihB,IAAKmG,EAAKm/C,eACrC,MAAMzlD,EAAamjD,EAAazmB,EAChCx9C,KAAKukE,YAAYt4C,QAAQ,CAAC+oB,EAAY1vC,KACpC2b,EAAIyG,YAAcstB,EAAW6wB,WAAaA,EAC1C5kD,EAAIgH,UAAY+sB,EAAW6wB,WAAaA,EACxC,MAAMtiD,EAAYtC,EAAIuC,YAAYwxB,EAAW7tB,MAAM/nB,MAC7C8oB,EAAYs9C,EAAUt9C,UAAU8sB,EAAW9sB,YAAc8sB,EAAW9sB,UAAY27C,EAAU37C,YAC1F9oB,EAAQ2kE,EAAW+B,EAAeviD,EACxC,IAAInZ,EAAI27D,EAAO37D,EACXC,EAAI07D,EAAO17D,EACfm7D,EAAUgB,SAASxmE,KAAKZ,OACpBkvC,EACEhpC,EAAI,GAAK8E,EAAIhL,EAAQo+C,EAAUx9C,KAAKgE,QACtCqG,EAAI07D,EAAO17D,GAAKyW,EAChBilD,EAAOv+C,OACPpd,EAAI27D,EAAO37D,EAAIzG,EAAeD,EAAO1D,KAAK+D,KAAOy5C,EAASx9C,KAAKgE,MAAQygE,EAAWsB,EAAOv+C,QAElFliB,EAAI,GAAK+E,EAAIyW,EAAa9gB,KAAKomB,SACxChc,EAAI27D,EAAO37D,EAAIA,EAAIo6D,EAAYuB,EAAOv+C,MAAMpoB,MAAQo+C,EACpDuoB,EAAOv+C,OACPnd,EAAI07D,EAAO17D,EAAI1G,EAAeD,EAAO1D,KAAKmmB,IAAM2kC,EAActN,EAASx9C,KAAKomB,OAASo+C,EAAYuB,EAAOv+C,MAAMloB,SAEhH,MAAMmnE,EAAQjB,EAAUp7D,EAAEA,GAC1B47D,EAAcS,EAAOp8D,EAAG2qC,GACxB5qC,EAAItG,EAAOokB,EAAW9d,EAAI25D,EAAW+B,EAAcx3B,EAAelkC,EAAIhL,EAAQY,KAAKgE,MAAOojB,EAAKnjB,KAC/F6jB,EAAS09C,EAAUp7D,EAAEA,GAAIC,EAAG2qC,GACxB1G,EACFy3B,EAAO37D,GAAKhL,EAAQo+C,EAEpBuoB,EAAO17D,GAAKyW,IAGhBiZ,GAAqB/5B,KAAKihB,IAAKmG,EAAKm/C,eAEtC,YACE,MAAMn/C,EAAOpnB,KAAKjC,QACZ6sD,EAAYxjC,EAAKy9B,MACjB6hB,EAAY18C,GAAO4gC,EAAUhqC,MAC7B+lD,EAAe58C,GAAU6gC,EAAUpN,SACzC,IAAKoN,EAAUpT,QACb,OAEF,MAAMguB,EAAYhsC,GAAcpS,EAAKnjB,IAAKjE,KAAK+D,KAAM/D,KAAKZ,OACpD6hB,EAAMjhB,KAAKihB,IACX43B,EAAW+R,EAAU/R,SACrBitB,EAAeY,EAAUz+D,KAAO,EAChC2+D,EAA6BD,EAAaxgD,IAAM2/C,EACtD,IAAIz7D,EACAtG,EAAO/D,KAAK+D,KACZ8jB,EAAW7nB,KAAKZ,MACpB,GAAIY,KAAKsuC,eACPzmB,EAAWtf,KAAKuC,OAAO9K,KAAKykE,YAC5Bp6D,EAAIrK,KAAKmmB,IAAMygD,EACf7iE,EAAOJ,EAAeyjB,EAAK1jB,MAAOK,EAAM/D,KAAKgE,MAAQ6jB,OAChD,CACL,MAAMyO,EAAYt2B,KAAKwkE,YAAY3lC,OAAO,CAACC,EAAK72B,IAASM,KAAKuC,IAAIg0B,EAAK72B,EAAK3I,QAAS,GACrF+K,EAAIu8D,EAA6BjjE,EAAeyjB,EAAK1jB,MAAO1D,KAAKmmB,IAAKnmB,KAAKomB,OAASkQ,EAAYlP,EAAKvqB,OAAO2gD,QAAUx9C,KAAK6kE,uBAE7H,MAAMz6D,EAAIzG,EAAek1C,EAAU90C,EAAMA,EAAO8jB,GAChD5G,EAAIiH,UAAYs9C,EAAUt9C,UAAUzkB,EAAmBo1C,IACvD53B,EAAIkH,aAAe,SACnBlH,EAAIyG,YAAckjC,EAAU7rC,MAC5BkC,EAAIgH,UAAY2iC,EAAU7rC,MAC1BkC,EAAIL,KAAO8lD,EAAUpjD,OACrB4D,GAAWjG,EAAK2pC,EAAUzjC,KAAM/c,EAAGC,EAAGq8D,GAExC,sBACE,MAAM9b,EAAY5qD,KAAKjC,QAAQ8mD,MACzB6hB,EAAY18C,GAAO4gC,EAAUhqC,MAC7B+lD,EAAe58C,GAAU6gC,EAAUpN,SACzC,OAAOoN,EAAUpT,QAAUkvB,EAAU5lD,WAAa6lD,EAAarnE,OAAS,EAE1E,iBAAiB8K,EAAGC,GAClB,IAAI/E,EAAGuhE,EAAQC,EACf,GAAIl6D,GAAWxC,EAAGpK,KAAK+D,KAAM/D,KAAKgE,QAC7B4I,GAAWvC,EAAGrK,KAAKmmB,IAAKnmB,KAAKomB,QAEhC,IADA0gD,EAAK9mE,KAAKokE,eACL9+D,EAAI,EAAGA,EAAIwhE,EAAG1oE,SAAUkH,EAE3B,GADAuhE,EAASC,EAAGxhE,GACRsH,GAAWxC,EAAGy8D,EAAO9iE,KAAM8iE,EAAO9iE,KAAO8iE,EAAOznE,QAC/CwN,GAAWvC,EAAGw8D,EAAO1gD,IAAK0gD,EAAO1gD,IAAM0gD,EAAOvnE,QACjD,OAAOU,KAAKukE,YAAYj/D,GAI9B,OAAO,KAET,YAAY+C,GACV,MAAM+e,EAAOpnB,KAAKjC,QAClB,IAAKgpE,GAAW1+D,EAAErJ,KAAMooB,GACtB,OAEF,MAAM4/C,EAAchnE,KAAKinE,iBAAiB5+D,EAAE+B,EAAG/B,EAAEgC,GACjD,GAAe,cAAXhC,EAAErJ,MAAmC,aAAXqJ,EAAErJ,KAAqB,CACnD,MAAMynB,EAAWzmB,KAAKqkE,aAChB6C,EAAWhD,GAAWz9C,EAAUugD,GAClCvgD,IAAaygD,GACf5kE,EAAS8kB,EAAK+/C,QAAS,CAAC9+D,EAAGoe,EAAUzmB,MAAOA,MAE9CA,KAAKqkE,aAAe2C,EAChBA,IAAgBE,GAClB5kE,EAAS8kB,EAAK1F,QAAS,CAACrZ,EAAG2+D,EAAahnE,MAAOA,WAExCgnE,GACT1kE,EAAS8kB,EAAKzF,QAAS,CAACtZ,EAAG2+D,EAAahnE,MAAOA,OAIrD,SAAS+mE,GAAW/nE,EAAMooB,GACxB,QAAc,cAATpoB,GAAiC,aAATA,IAAyBooB,EAAK1F,UAAW0F,EAAK+/C,aAGvE//C,EAAKzF,SAAqB,UAAT3iB,GAA6B,YAATA,GAK3C,IAAIooE,GAAgB,CAClBrlE,GAAI,SACJslE,SAAU,GACV,MAAMlrE,EAAOmrE,EAAOvpE,GAClB,MAAMg3C,EAAS54C,EAAM44C,OAAS,IAAI,GAAO,CAAC9zB,IAAK9kB,EAAM8kB,IAAKljB,UAAS5B,UACnE4+C,GAAQ3Z,UAAUjlC,EAAO44C,EAAQh3C,GACjCg9C,GAAQyd,OAAOr8D,EAAO44C,IAExB,KAAK54C,GACH4+C,GAAQgf,UAAU59D,EAAOA,EAAM44C,eACxB54C,EAAM44C,QAEf,aAAa54C,EAAOmrE,EAAOvpE,GACzB,MAAMg3C,EAAS54C,EAAM44C,OACrBgG,GAAQ3Z,UAAUjlC,EAAO44C,EAAQh3C,GACjCg3C,EAAOh3C,QAAUA,GAEnB,YAAY5B,GACV,MAAM44C,EAAS54C,EAAM44C,OACrBA,EAAO2vB,cACP3vB,EAAOwyB,kBAET,WAAWprE,EAAO0G,GACXA,EAAKo5D,QACR9/D,EAAM44C,OAAOyyB,YAAY3kE,EAAK67B,QAGlC7b,SAAU,CACR20B,SAAS,EACTqB,SAAU,MACVn1C,MAAO,SACP63C,UAAU,EACVl2C,SAAS,EACT2Z,OAAQ,IACR,QAAQ3W,EAAG2sC,EAAYD,GACrB,MAAMx2C,EAAQy2C,EAAWlvC,aACnB2hE,EAAK1yB,EAAO54C,MACdsrE,EAAGv0B,iBAAiB30C,IACtBkpE,EAAGxmC,KAAK1iC,GACRy2C,EAAWjP,QAAS,IAEpB0hC,EAAG3mC,KAAKviC,GACRy2C,EAAWjP,QAAS,IAGxBrkB,QAAS,KACTylD,QAAS,KACTtqE,OAAQ,CACNkiB,MAAQkC,GAAQA,EAAI9kB,MAAM4B,QAAQghB,MAClCglD,SAAU,GACVvmB,QAAS,GACT,eAAerhD,GACb,MAAMW,EAAWX,EAAMO,KAAKI,UACrBD,QAAQ,cAACmnE,EAAa,WAAEj/C,EAAU,UAAEmD,EAAS,MAAEnJ,IAAU5iB,EAAM44C,OAAOh3C,QAC7E,OAAO5B,EAAM0mC,yBAAyB1lC,IAAK2zB,IACzC,MAAMlvB,EAAQkvB,EAAK0T,WAAWzP,SAASivC,EAAgB,OAAIjoE,GACrD8pB,EAAckE,GAAUnoB,EAAMikB,aACpC,MAAO,CACLsB,KAAMrqB,EAASg0B,EAAKvyB,OAAOL,MAC3B+pB,UAAWrmB,EAAMye,gBACjBwlD,UAAW9mD,EACXgnB,QAASjV,EAAKkQ,QACdi/B,QAASr+D,EAAMi7B,eACfopC,SAAUrkE,EAAMk7B,WAChB+xB,eAAgBjtD,EAAMm7B,iBACtBuiC,SAAU19D,EAAMo7B,gBAChBrV,WAAY9B,EAAYzmB,MAAQymB,EAAYvmB,QAAU,EACtDooB,YAAa9lB,EAAM0e,YACnByE,WAAYA,GAAcnjB,EAAMmjB,WAChCC,SAAUpjB,EAAMojB,SAChBkD,UAAWA,GAAatmB,EAAMsmB,UAC9Bg1C,aAAc,EACdp3D,aAAcgrB,EAAKvyB,QAEpByB,QAGP6kD,MAAO,CACL9lC,MAAQkC,GAAQA,EAAI9kB,MAAM4B,QAAQghB,MAClCy4B,SAAS,EACTqB,SAAU,SACV1xB,KAAM,KAGVuI,YAAa,CACX5M,YAAcX,IAAUA,EAAKY,WAAW,MACxClmB,OAAQ,CACNimB,YAAcX,IAAU,CAAC,iBAAkB,SAAU,QAAQ3kB,SAAS2kB,MAK5E,MAAM,WAAc,GAClB,YAAY+e,GACVoO,QACAtvC,KAAK7D,MAAQ+kC,EAAO/kC,MACpB6D,KAAKjC,QAAUmjC,EAAOnjC,QACtBiC,KAAKihB,IAAMigB,EAAOjgB,IAClBjhB,KAAK0nE,cAAW3rE,EAChBiE,KAAKmmB,SAAMpqB,EACXiE,KAAKomB,YAASrqB,EACdiE,KAAK+D,UAAOhI,EACZiE,KAAKgE,WAAQjI,EACbiE,KAAKZ,WAAQrD,EACbiE,KAAKV,YAASvD,EACdiE,KAAK64C,cAAW98C,EAChBiE,KAAKgf,YAASjjB,EACdiE,KAAKu7C,cAAWx/C,EAElB,OAAO8rB,EAAUyO,GACf,MAAMlP,EAAOpnB,KAAKjC,QAGlB,GAFAiC,KAAK+D,KAAO,EACZ/D,KAAKmmB,IAAM,GACNiB,EAAKowB,QAER,YADAx3C,KAAKZ,MAAQY,KAAKV,OAASU,KAAKgE,MAAQhE,KAAKomB,OAAS,GAGxDpmB,KAAKZ,MAAQY,KAAKgE,MAAQ6jB,EAC1B7nB,KAAKV,OAASU,KAAKomB,OAASkQ,EAC5B,MAAM03B,EAAY1pD,EAAQ8iB,EAAKD,MAAQC,EAAKD,KAAK/oB,OAAS,EAC1D4B,KAAK0nE,SAAW39C,GAAU3C,EAAKo2B,SAC/B,MAAMmqB,EAAW3Z,EAAYhkC,GAAO5C,EAAKxG,MAAME,WAAa9gB,KAAK0nE,SAASpoE,OACtEU,KAAKsuC,eACPtuC,KAAKV,OAASqoE,EAEd3nE,KAAKZ,MAAQuoE,EAGjB,eACE,MAAMpgE,EAAMvH,KAAKjC,QAAQ86C,SACzB,MAAe,QAARtxC,GAAyB,WAARA,EAE1B,UAAUmqC,GACR,MAAM,IAACvrB,EAAG,KAAEpiB,EAAI,OAAEqiB,EAAM,MAAEpiB,EAAK,QAAEjG,GAAWiC,KACtC0D,EAAQ3F,EAAQ2F,MACtB,IACImkB,EAAU8+B,EAAQC,EADlB5hC,EAAW,EAkBf,OAhBIhlB,KAAKsuC,gBACPqY,EAAShjD,EAAeD,EAAOK,EAAMC,GACrC4iD,EAASzgC,EAAMurB,EACf7pB,EAAW7jB,EAAQD,IAEM,SAArBhG,EAAQ86C,UACV8N,EAAS5iD,EAAO2tC,EAChBkV,EAASjjD,EAAeD,EAAO0iB,EAAQD,GACvCnB,GAAiB,GAAN1c,IAEXq+C,EAAS3iD,EAAQ0tC,EACjBkV,EAASjjD,EAAeD,EAAOyiB,EAAKC,GACpCpB,EAAgB,GAAL1c,GAEbuf,EAAWzB,EAASD,GAEf,CAACwgC,SAAQC,SAAQ/+B,WAAU7C,YAEpC,OACE,MAAM/D,EAAMjhB,KAAKihB,IACXmG,EAAOpnB,KAAKjC,QAClB,IAAKqpB,EAAKowB,QACR,OAEF,MAAMowB,EAAW59C,GAAO5C,EAAKxG,MACvBE,EAAa8mD,EAAS9mD,WACtB4wB,EAAS5wB,EAAa,EAAI9gB,KAAK0nE,SAASvhD,KACxC,OAACwgC,EAAM,OAAEC,EAAM,SAAE/+B,EAAQ,SAAE7C,GAAYhlB,KAAK6nE,UAAUn2B,GAC5DxqB,GAAWjG,EAAKmG,EAAKD,KAAM,EAAG,EAAGygD,EAAU,CACzC7oD,MAAOqI,EAAKrI,MACZ8I,WACA7C,WACAkD,UAAWzkB,EAAmB2jB,EAAK1jB,OACnCykB,aAAc,SACdH,YAAa,CAAC2+B,EAAQC,MAI5B,SAASkhB,GAAY3rE,EAAOyuD,GAC1B,MAAM/F,EAAQ,IAAI,GAAM,CACtB5jC,IAAK9kB,EAAM8kB,IACXljB,QAAS6sD,EACTzuD,UAEF4+C,GAAQ3Z,UAAUjlC,EAAO0oD,EAAO+F,GAChC7P,GAAQyd,OAAOr8D,EAAO0oD,GACtB1oD,EAAM4rE,WAAaljB,EAErB,IAAImjB,GAAe,CACjBjmE,GAAI,QACJslE,SAAU,GACV,MAAMlrE,EAAOmrE,EAAOvpE,GAClB+pE,GAAY3rE,EAAO4B,IAErB,KAAK5B,GACH,MAAM4rE,EAAa5rE,EAAM4rE,WACzBhtB,GAAQgf,UAAU59D,EAAO4rE,UAClB5rE,EAAM4rE,YAEf,aAAa5rE,EAAOmrE,EAAOvpE,GACzB,MAAM8mD,EAAQ1oD,EAAM4rE,WACpBhtB,GAAQ3Z,UAAUjlC,EAAO0oD,EAAO9mD,GAChC8mD,EAAM9mD,QAAUA,GAElB8kB,SAAU,CACRnf,MAAO,SACP8zC,SAAS,EACT52B,KAAM,CACJ5B,OAAQ,QAEVu8B,UAAU,EACViC,QAAS,GACT3E,SAAU,MACV1xB,KAAM,GACNnI,OAAQ,KAEVijC,cAAe,CACbljC,MAAO,SAET2Q,YAAa,CACX5M,aAAa,EACbE,YAAY,IAIJ,IAAIilD,QA2ChB,MAAMC,GAAc,CAClB,QAAQz7C,GACN,IAAKA,EAAMruB,OACT,OAAO,EAET,IAAIkH,EAAGC,EACH6E,EAAI,EACJC,EAAI,EACJ0mB,EAAQ,EACZ,IAAKzrB,EAAI,EAAGC,EAAMknB,EAAMruB,OAAQkH,EAAIC,IAAOD,EAAG,CAC5C,MAAM0vB,EAAKvI,EAAMnnB,GAAGwvB,QACpB,GAAIE,GAAMA,EAAGmzC,WAAY,CACvB,MAAM5gE,EAAMytB,EAAGozC,kBACfh+D,GAAK7C,EAAI6C,EACTC,GAAK9C,EAAI8C,IACP0mB,GAGN,MAAO,CACL3mB,EAAGA,EAAI2mB,EACP1mB,EAAGA,EAAI0mB,IAGX,QAAQtE,EAAO47C,GACb,IAAK57C,EAAMruB,OACT,OAAO,EAET,IAGIkH,EAAGC,EAAK+iE,EAHRl+D,EAAIi+D,EAAcj+D,EAClBC,EAAIg+D,EAAch+D,EAClBwvC,EAAcx6C,OAAOsJ,kBAEzB,IAAKrD,EAAI,EAAGC,EAAMknB,EAAMruB,OAAQkH,EAAIC,IAAOD,EAAG,CAC5C,MAAM0vB,EAAKvI,EAAMnnB,GAAGwvB,QACpB,GAAIE,GAAMA,EAAGmzC,WAAY,CACvB,MAAMh4B,EAASnb,EAAG8kB,iBACZ/qC,EAAIjD,GAAsBu8D,EAAel4B,GAC3CphC,EAAI8qC,IACNA,EAAc9qC,EACdu5D,EAAiBtzC,IAIvB,GAAIszC,EAAgB,CAClB,MAAMC,EAAKD,EAAeF,kBAC1Bh+D,EAAIm+D,EAAGn+D,EACPC,EAAIk+D,EAAGl+D,EAET,MAAO,CACLD,IACAC,OAIN,SAASm+D,GAAar8C,EAAMs8C,GAQ1B,OAPIA,IACEnkE,EAAQmkE,GACV/oE,MAAMoD,UAAUrF,KAAK0F,MAAMgpB,EAAMs8C,GAEjCt8C,EAAK1uB,KAAKgrE,IAGPt8C,EAET,SAASu8C,GAAcjhE,GACrB,OAAoB,kBAARA,GAAoBA,aAAetI,SAAWsI,EAAIlB,QAAQ,OAAS,EACtEkB,EAAIqY,MAAM,MAEZrY,EAET,SAASkhE,GAAkBxsE,EAAO+L,GAChC,MAAM,QAAC4sB,EAAO,aAAEhvB,EAAY,MAAEvH,GAAS2J,EACjCs8B,EAAaroC,EAAM4rC,eAAejiC,GAAc0+B,YAChD,MAACtmC,EAAK,MAAEI,GAASkmC,EAAWokC,iBAAiBrqE,GACnD,MAAO,CACLpC,QACA+B,QACAgzB,OAAQsT,EAAWsF,UAAUvrC,GAC7B+mC,IAAKnpC,EAAMO,KAAKI,SAASgJ,GAAcpJ,KAAK6B,GAC5C62C,eAAgB92C,EAChBf,QAASinC,EAAWyC,aACpB5B,UAAW9mC,EACXuH,eACAgvB,WAGJ,SAAS+zC,GAAe/1B,EAAS/0C,GAC/B,MAAMkjB,EAAM6xB,EAAQ32C,MAAM8kB,KACpB,KAAC6nD,EAAI,OAAEC,EAAM,MAAElkB,GAAS/R,GACxB,SAACixB,EAAQ,UAAED,GAAa/lE,EACxBirE,EAAWh/C,GAAOjsB,EAAQirE,UAC1BtC,EAAY18C,GAAOjsB,EAAQ2oE,WAC3BuC,EAAaj/C,GAAOjsB,EAAQkrE,YAC5BC,EAAiBrkB,EAAMzmD,OACvB+qE,EAAkBJ,EAAO3qE,OACzBgrE,EAAoBN,EAAK1qE,OACzBo/C,EAAUzzB,GAAUhsB,EAAQy/C,SAClC,IAAIl+C,EAASk+C,EAAQl+C,OACjBF,EAAQ,EACRiqE,EAAqBP,EAAKjqC,OAAO,CAAC9N,EAAOu4C,IAAav4C,EAAQu4C,EAASC,OAAOnrE,OAASkrE,EAASjiD,MAAMjpB,OAASkrE,EAASE,MAAMprE,OAAQ,GAO1I,GANAirE,GAAsBv2B,EAAQ22B,WAAWrrE,OAAS00C,EAAQ42B,UAAUtrE,OAChE8qE,IACF5pE,GAAU4pE,EAAiBxC,EAAU5lD,YACnCooD,EAAiB,GAAKnrE,EAAQ4rE,aAC/B5rE,EAAQ6rE,mBAEPP,EAAoB,CACtB,MAAMQ,EAAiB9rE,EAAQ+rE,cAAgBvhE,KAAKuC,IAAIg5D,EAAWkF,EAASloD,YAAckoD,EAASloD,WACnGxhB,GAAU8pE,EAAoBS,GAC5BR,EAAqBD,GAAqBJ,EAASloD,YACnDuoD,EAAqB,GAAKtrE,EAAQgsE,YAElCZ,IACF7pE,GAAUvB,EAAQisE,gBACjBb,EAAkBF,EAAWnoD,YAC5BqoD,EAAkB,GAAKprE,EAAQksE,eAEnC,IAAIC,EAAe,EACnB,MAAMC,EAAe,SAAS3iD,GAC5BpoB,EAAQmJ,KAAKuC,IAAI1L,EAAO6hB,EAAIuC,YAAYgE,GAAMpoB,MAAQ8qE,IAkBxD,OAhBAjpD,EAAI4C,OACJ5C,EAAIL,KAAO8lD,EAAUpjD,OACrBne,EAAK2tC,EAAQ+R,MAAOslB,GACpBlpD,EAAIL,KAAOooD,EAAS1lD,OACpBne,EAAK2tC,EAAQ22B,WAAWp9B,OAAOyG,EAAQ42B,WAAYS,GACnDD,EAAensE,EAAQ+rE,cAAiB/F,EAAW,EAAIhmE,EAAQo+C,WAAc,EAC7Eh3C,EAAK2jE,EAAOQ,IACVnkE,EAAKmkE,EAASC,OAAQY,GACtBhlE,EAAKmkE,EAASjiD,MAAO8iD,GACrBhlE,EAAKmkE,EAASE,MAAOW,KAEvBD,EAAe,EACfjpD,EAAIL,KAAOqoD,EAAW3lD,OACtBne,EAAK2tC,EAAQi2B,OAAQoB,GACrBlpD,EAAIgD,UACJ7kB,GAASo+C,EAAQp+C,MACV,CAACA,QAAOE,UAEjB,SAAS8qE,GAAgBjuE,EAAO8L,GAC9B,MAAM,EAACoC,EAAC,OAAE/K,GAAU2I,EACpB,OAAIoC,EAAI/K,EAAS,EACR,MACE+K,EAAKlO,EAAMmD,OAASA,EAAS,EAC/B,SAEF,SAET,SAAS+qE,GAAoBC,EAAQnuE,EAAO4B,EAASkK,GACnD,MAAM,EAACmC,EAAC,MAAEhL,GAAS6I,EACbsiE,EAAQxsE,EAAQysE,UAAYzsE,EAAQ0sE,aAC1C,MAAe,SAAXH,GAAqBlgE,EAAIhL,EAAQmrE,EAAQpuE,EAAMiD,QAGpC,UAAXkrE,GAAsBlgE,EAAIhL,EAAQmrE,EAAQ,QAA9C,GAIF,SAASG,GAAgBvuE,EAAO4B,EAASkK,EAAM0iE,GAC7C,MAAM,EAACvgE,EAAC,MAAEhL,GAAS6I,GACZ7I,MAAOwrE,EAAY1gC,WAAW,KAACnmC,EAAI,MAAEC,IAAU7H,EACtD,IAAImuE,EAAS,SAWb,MAVe,WAAXK,EACFL,EAASlgE,IAAMrG,EAAOC,GAAS,EAAI,OAAS,QACnCoG,GAAKhL,EAAQ,EACtBkrE,EAAS,OACAlgE,GAAKwgE,EAAaxrE,EAAQ,IACnCkrE,EAAS,SAEPD,GAAoBC,EAAQnuE,EAAO4B,EAASkK,KAC9CqiE,EAAS,UAEJA,EAET,SAASO,GAAmB1uE,EAAO4B,EAASkK,GAC1C,MAAM0iE,EAAS1iE,EAAK0iE,QAAU5sE,EAAQ4sE,QAAUP,GAAgBjuE,EAAO8L,GACvE,MAAO,CACLqiE,OAAQriE,EAAKqiE,QAAUvsE,EAAQusE,QAAUI,GAAgBvuE,EAAO4B,EAASkK,EAAM0iE,GAC/EA,UAGJ,SAASG,GAAO7iE,EAAMqiE,GACpB,IAAI,EAAClgE,EAAC,MAAEhL,GAAS6I,EAMjB,MALe,UAAXqiE,EACFlgE,GAAKhL,EACe,WAAXkrE,IACTlgE,GAAMhL,EAAQ,GAETgL,EAET,SAAS2gE,GAAO9iE,EAAM0iE,EAAQK,GAC5B,IAAI,EAAC3gE,EAAC,OAAE/K,GAAU2I,EAQlB,MAPe,QAAX0iE,EACFtgE,GAAK2gE,EAEL3gE,GADoB,WAAXsgE,EACJrrE,EAAS0rE,EAER1rE,EAAS,EAEV+K,EAET,SAAS4gE,GAAmBltE,EAASkK,EAAMijE,EAAW/uE,GACpD,MAAM,UAACquE,EAAS,aAAEC,EAAY,aAAE3lD,GAAgB/mB,GAC1C,OAACusE,EAAM,OAAEK,GAAUO,EACnBF,EAAiBR,EAAYC,GAC7B,QAAC3hD,EAAO,SAAEG,EAAQ,WAAEF,EAAU,YAAEC,GAAec,GAAchF,GACnE,IAAI1a,EAAI0gE,GAAO7iE,EAAMqiE,GACrB,MAAMjgE,EAAI0gE,GAAO9iE,EAAM0iE,EAAQK,GAY/B,MAXe,WAAXL,EACa,SAAXL,EACFlgE,GAAK4gE,EACe,UAAXV,IACTlgE,GAAK4gE,GAEa,SAAXV,EACTlgE,GAAK7B,KAAKuC,IAAIge,EAASC,GAAcyhD,EACjB,UAAXF,IACTlgE,GAAK7B,KAAKuC,IAAIme,EAAUD,GAAewhD,GAElC,CACLpgE,EAAGsC,GAAYtC,EAAG,EAAGjO,EAAMiD,MAAQ6I,EAAK7I,OACxCiL,EAAGqC,GAAYrC,EAAG,EAAGlO,EAAMmD,OAAS2I,EAAK3I,SAG7C,SAAS6rE,GAAYr4B,EAASpvC,EAAO3F,GACnC,MAAMy/C,EAAUzzB,GAAUhsB,EAAQy/C,SAClC,MAAiB,WAAV95C,EACHovC,EAAQ1oC,EAAI0oC,EAAQ1zC,MAAQ,EAClB,UAAVsE,EACEovC,EAAQ1oC,EAAI0oC,EAAQ1zC,MAAQo+C,EAAQx5C,MACpC8uC,EAAQ1oC,EAAIozC,EAAQz5C,KAE5B,SAASqnE,GAAwB9oE,GAC/B,OAAOkmE,GAAa,GAAIE,GAAcpmE,IAExC,SAAS+oE,GAAqBh7C,EAAQyiB,EAASw4B,GAC7C,OAAOvgD,GAAcsF,EAAQ,CAC3ByiB,UACAw4B,eACAtsE,KAAM,YAGV,SAASusE,GAAkBhuC,EAAWzhC,GACpC,MAAM2xB,EAAW3xB,GAAWA,EAAQyB,SAAWzB,EAAQyB,QAAQu1C,SAAWh3C,EAAQyB,QAAQu1C,QAAQvV,UAClG,OAAO9P,EAAW8P,EAAU9P,SAASA,GAAY8P,EAEnD,MAAM,WAAgB,GACpB,YAAY2D,GACVoO,QACAtvC,KAAKwrE,QAAU,EACfxrE,KAAKm+B,QAAU,GACfn+B,KAAKyrE,oBAAiB1vE,EACtBiE,KAAK0rE,WAAQ3vE,EACbiE,KAAK2rE,uBAAoB5vE,EACzBiE,KAAK4rE,cAAgB,GACrB5rE,KAAK6hC,iBAAc9lC,EACnBiE,KAAK4mC,cAAW7qC,EAChBiE,KAAK7D,MAAQ+kC,EAAO/kC,OAAS+kC,EAAOvhC,OACpCK,KAAKL,OAASK,KAAK7D,MACnB6D,KAAKjC,QAAUmjC,EAAOnjC,QACtBiC,KAAK6rE,gBAAa9vE,EAClBiE,KAAK6kD,WAAQ9oD,EACbiE,KAAKypE,gBAAa1tE,EAClBiE,KAAK8oE,UAAO/sE,EACZiE,KAAK0pE,eAAY3tE,EACjBiE,KAAK+oE,YAAShtE,EACdiE,KAAKsqE,YAASvuE,EACdiE,KAAK2qE,YAAS5uE,EACdiE,KAAKoK,OAAIrO,EACTiE,KAAKqK,OAAItO,EACTiE,KAAKV,YAASvD,EACdiE,KAAKZ,WAAQrD,EACbiE,KAAK8rE,YAAS/vE,EACdiE,KAAK+rE,YAAShwE,EACdiE,KAAKgsE,iBAAcjwE,EACnBiE,KAAKisE,sBAAmBlwE,EACxBiE,KAAKksE,qBAAkBnwE,EAEzB,WAAWgC,GACTiC,KAAKjC,QAAUA,EACfiC,KAAK2rE,uBAAoB5vE,EACzBiE,KAAK4mC,cAAW7qC,EAElB,qBACE,MAAM4pC,EAAS3lC,KAAK2rE,kBACpB,GAAIhmC,EACF,OAAOA,EAET,MAAMxpC,EAAQ6D,KAAK7D,MACb4B,EAAUiC,KAAKjC,QAAQ6wB,WAAW5uB,KAAKmB,cACvCimB,EAAOrpB,EAAQqlD,SAAWjnD,EAAM4B,QAAQqiB,WAAariB,EAAQgjC,WAC7DA,EAAa,IAAI,GAAW/gC,KAAK7D,MAAOirB,GAI9C,OAHIA,EAAKiG,aACPrtB,KAAK2rE,kBAAoBjuE,OAAOktC,OAAO7J,IAElCA,EAET,aACE,OAAO/gC,KAAK4mC,WACZ5mC,KAAK4mC,SAAWykC,GAAqBrrE,KAAK7D,MAAMgF,aAAcnB,KAAMA,KAAK4rE,gBAE3E,SAAS9vE,EAASiC,GAChB,MAAM,UAACw/B,GAAax/B,EACdouE,EAAc5uC,EAAU4uC,YAAYhpE,MAAMnD,KAAM,CAAClE,IACjD+oD,EAAQtnB,EAAUsnB,MAAM1hD,MAAMnD,KAAM,CAAClE,IACrCswE,EAAa7uC,EAAU6uC,WAAWjpE,MAAMnD,KAAM,CAAClE,IACrD,IAAIurB,EAAQ,GAIZ,OAHAA,EAAQmhD,GAAanhD,EAAOqhD,GAAcyD,IAC1C9kD,EAAQmhD,GAAanhD,EAAOqhD,GAAc7jB,IAC1Cx9B,EAAQmhD,GAAanhD,EAAOqhD,GAAc0D,IACnC/kD,EAET,cAAcikD,EAAcvtE,GAC1B,OAAOqtE,GAAwBrtE,EAAQw/B,UAAUksC,WAAWtmE,MAAMnD,KAAM,CAACsrE,KAE3E,QAAQA,EAAcvtE,GACpB,MAAM,UAACw/B,GAAax/B,EACdsuE,EAAY,GAalB,OAZAlnE,EAAKmmE,EAAexvE,IAClB,MAAMwtE,EAAW,CACfC,OAAQ,GACRliD,MAAO,GACPmiD,MAAO,IAEH8C,EAASf,GAAkBhuC,EAAWzhC,GAC5C0sE,GAAac,EAASC,OAAQb,GAAc4D,EAAOC,YAAYvpE,KAAKhD,KAAMlE,KAC1E0sE,GAAac,EAASjiD,MAAOilD,EAAOpuE,MAAM8E,KAAKhD,KAAMlE,IACrD0sE,GAAac,EAASE,MAAOd,GAAc4D,EAAOE,WAAWxpE,KAAKhD,KAAMlE,KACxEuwE,EAAU5uE,KAAK6rE,KAEV+C,EAET,aAAaf,EAAcvtE,GACzB,OAAOqtE,GAAwBrtE,EAAQw/B,UAAUmsC,UAAUvmE,MAAMnD,KAAM,CAACsrE,KAE1E,UAAUA,EAAcvtE,GACtB,MAAM,UAACw/B,GAAax/B,EACd0uE,EAAelvC,EAAUkvC,aAAatpE,MAAMnD,KAAM,CAACsrE,IACnDvC,EAASxrC,EAAUwrC,OAAO5lE,MAAMnD,KAAM,CAACsrE,IACvCoB,EAAcnvC,EAAUmvC,YAAYvpE,MAAMnD,KAAM,CAACsrE,IACvD,IAAIjkD,EAAQ,GAIZ,OAHAA,EAAQmhD,GAAanhD,EAAOqhD,GAAc+D,IAC1CplD,EAAQmhD,GAAanhD,EAAOqhD,GAAcK,IAC1C1hD,EAAQmhD,GAAanhD,EAAOqhD,GAAcgE,IACnCrlD,EAET,aAAatpB,GACX,MAAM6iC,EAAS5gC,KAAKm+B,QACdzhC,EAAOsD,KAAK7D,MAAMO,KAClBsvE,EAAc,GACdC,EAAmB,GACnBC,EAAkB,GACxB,IACI5mE,EAAGC,EADH+lE,EAAe,GAEnB,IAAKhmE,EAAI,EAAGC,EAAMq7B,EAAOxiC,OAAQkH,EAAIC,IAAOD,EAC1CgmE,EAAa7tE,KAAKkrE,GAAkB3oE,KAAK7D,MAAOykC,EAAOt7B,KAkBzD,OAhBIvH,EAAQkyB,SACVq7C,EAAeA,EAAar7C,OAAO,CAAC6E,EAASv2B,EAAOoM,IAAU5M,EAAQkyB,OAAO6E,EAASv2B,EAAOoM,EAAOjO,KAElGqB,EAAQ4uE,WACVrB,EAAeA,EAAavhE,KAAK,CAAChC,EAAGC,IAAMjK,EAAQ4uE,SAAS5kE,EAAGC,EAAGtL,KAEpEyI,EAAKmmE,EAAexvE,IAClB,MAAMwwE,EAASf,GAAkBxtE,EAAQw/B,UAAWzhC,GACpDkwE,EAAYvuE,KAAK6uE,EAAOM,WAAW5pE,KAAKhD,KAAMlE,IAC9CmwE,EAAiBxuE,KAAK6uE,EAAOO,gBAAgB7pE,KAAKhD,KAAMlE,IACxDowE,EAAgBzuE,KAAK6uE,EAAOQ,eAAe9pE,KAAKhD,KAAMlE,MAExDkE,KAAKgsE,YAAcA,EACnBhsE,KAAKisE,iBAAmBA,EACxBjsE,KAAKksE,gBAAkBA,EACvBlsE,KAAK6rE,WAAaP,EACXA,EAET,OAAO70B,EAASwlB,GACd,MAAMl+D,EAAUiC,KAAKjC,QAAQ6wB,WAAW5uB,KAAKmB,cACvCy/B,EAAS5gC,KAAKm+B,QACpB,IAAIwC,EACA2qC,EAAe,GACnB,GAAK1qC,EAAOxiC,OAML,CACL,MAAMy6C,EAAWqvB,GAAYnqE,EAAQ86C,UAAU71C,KAAKhD,KAAM4gC,EAAQ5gC,KAAKyrE,gBACvEH,EAAetrE,KAAK+sE,aAAahvE,GACjCiC,KAAK6kD,MAAQ7kD,KAAKgtE,SAAS1B,EAAcvtE,GACzCiC,KAAKypE,WAAazpE,KAAKitE,cAAc3B,EAAcvtE,GACnDiC,KAAK8oE,KAAO9oE,KAAKktE,QAAQ5B,EAAcvtE,GACvCiC,KAAK0pE,UAAY1pE,KAAKmtE,aAAa7B,EAAcvtE,GACjDiC,KAAK+oE,OAAS/oE,KAAKotE,UAAU9B,EAAcvtE,GAC3C,MAAMkK,EAAOjI,KAAK0rE,MAAQ7C,GAAe7oE,KAAMjC,GACzCsvE,EAAkB3vE,OAAOC,OAAO,GAAIk7C,EAAU5wC,GAC9CijE,EAAYL,GAAmB7qE,KAAK7D,MAAO4B,EAASsvE,GACpDC,EAAkBrC,GAAmBltE,EAASsvE,EAAiBnC,EAAWlrE,KAAK7D,OACrF6D,KAAKsqE,OAASY,EAAUZ,OACxBtqE,KAAK2qE,OAASO,EAAUP,OACxBhqC,EAAa,CACX6qC,QAAS,EACTphE,EAAGkjE,EAAgBljE,EACnBC,EAAGijE,EAAgBjjE,EACnBjL,MAAO6I,EAAK7I,MACZE,OAAQ2I,EAAK3I,OACbwsE,OAAQjzB,EAASzuC,EACjB2hE,OAAQlzB,EAASxuC,QA1BE,IAAjBrK,KAAKwrE,UACP7qC,EAAa,CACX6qC,QAAS,IA2BfxrE,KAAK4rE,cAAgBN,EACrBtrE,KAAK4mC,cAAW7qC,EACZ4kC,GACF3gC,KAAKirC,qBAAqB7uC,OAAO4D,KAAM2gC,GAErC8V,GAAW14C,EAAQwvE,UACrBxvE,EAAQwvE,SAASvqE,KAAKhD,KAAM,CAAC7D,MAAO6D,KAAK7D,MAAO22C,QAAS9yC,KAAMi8D,WAGnE,UAAUuR,EAAcvsD,EAAKhZ,EAAMlK,GACjC,MAAM0vE,EAAgBztE,KAAK0tE,iBAAiBF,EAAcvlE,EAAMlK,GAChEkjB,EAAIwE,OAAOgoD,EAAcrgB,GAAIqgB,EAAcpgB,IAC3CpsC,EAAIwE,OAAOgoD,EAAcngB,GAAImgB,EAAclgB,IAC3CtsC,EAAIwE,OAAOgoD,EAAcE,GAAIF,EAAcG,IAE7C,iBAAiBJ,EAAcvlE,EAAMlK,GACnC,MAAM,OAACusE,EAAM,OAAEK,GAAU3qE,MACnB,UAACwqE,EAAS,aAAE1lD,GAAgB/mB,GAC5B,QAAC+qB,EAAO,SAAEG,EAAQ,WAAEF,EAAU,YAAEC,GAAec,GAAchF,IAC5D1a,EAAGyjE,EAAKxjE,EAAGyjE,GAAON,GACnB,MAACpuE,EAAK,OAAEE,GAAU2I,EACxB,IAAImlD,EAAIE,EAAIqgB,EAAItgB,EAAIE,EAAIqgB,EAoCxB,MAnCe,WAAXjD,GACFpd,EAAKugB,EAAOxuE,EAAS,EACN,SAAXgrE,GACFld,EAAKygB,EACLvgB,EAAKF,EAAKod,EACVnd,EAAKE,EAAKid,EACVoD,EAAKrgB,EAAKid,IAEVpd,EAAKygB,EAAMzuE,EACXkuD,EAAKF,EAAKod,EACVnd,EAAKE,EAAKid,EACVoD,EAAKrgB,EAAKid,GAEZmD,EAAKvgB,IAGHE,EADa,SAAXgd,EACGuD,EAAMtlE,KAAKuC,IAAIge,EAASC,GAAc,EACvB,UAAXuhD,EACJuD,EAAMzuE,EAAQmJ,KAAKuC,IAAIme,EAAUD,GAAewhD,EAEhDxqE,KAAK8rE,OAEG,QAAXnB,GACFtd,EAAKygB,EACLvgB,EAAKF,EAAKmd,EACVpd,EAAKE,EAAKkd,EACVmD,EAAKrgB,EAAKkd,IAEVnd,EAAKygB,EAAMxuE,EACXiuD,EAAKF,EAAKmd,EACVpd,EAAKE,EAAKkd,EACVmD,EAAKrgB,EAAKkd,GAEZoD,EAAKvgB,GAEA,CAACD,KAAIE,KAAIqgB,KAAItgB,KAAIE,KAAIqgB,MAE9B,UAAUr6C,EAAItS,EAAKljB,GACjB,MAAM8mD,EAAQ7kD,KAAK6kD,MACbzmD,EAASymD,EAAMzmD,OACrB,IAAIsoE,EAAWiD,EAAcrkE,EAC7B,GAAIlH,EAAQ,CACV,MAAMonE,EAAYhsC,GAAcz7B,EAAQkG,IAAKjE,KAAKoK,EAAGpK,KAAKZ,OAQ1D,IAPAm0B,EAAGnpB,EAAI+gE,GAAYnrE,KAAMjC,EAAQ0oD,WAAY1oD,GAC7CkjB,EAAIiH,UAAYs9C,EAAUt9C,UAAUnqB,EAAQ0oD,YAC5CxlC,EAAIkH,aAAe,SACnBu+C,EAAY18C,GAAOjsB,EAAQ2oE,WAC3BiD,EAAe5rE,EAAQ4rE,aACvB1oD,EAAIgH,UAAYlqB,EAAQgwE,WACxB9sD,EAAIL,KAAO8lD,EAAUpjD,OAChBhe,EAAI,EAAGA,EAAIlH,IAAUkH,EACxB2b,EAAI6G,SAAS+8B,EAAMv/C,GAAIkgE,EAAUp7D,EAAEmpB,EAAGnpB,GAAImpB,EAAGlpB,EAAIq8D,EAAU5lD,WAAa,GACxEyS,EAAGlpB,GAAKq8D,EAAU5lD,WAAa6oD,EAC3BrkE,EAAI,IAAMlH,IACZm1B,EAAGlpB,GAAKtM,EAAQ6rE,kBAAoBD,IAK5C,cAAc1oD,EAAKsS,EAAIjuB,EAAGkgE,EAAWznE,GACnC,MAAMiuE,EAAchsE,KAAKgsE,YAAY1mE,GAC/BunE,EAAkB7sE,KAAKisE,iBAAiB3mE,IACxC,UAACw+D,EAAS,SAAEC,EAAQ,WAAE5nB,GAAcp+C,EACpCirE,EAAWh/C,GAAOjsB,EAAQirE,UAC1BgF,EAAS7C,GAAYnrE,KAAM,OAAQjC,GACnCkwE,EAAYzI,EAAUp7D,EAAE4jE,GACxBE,EAAUpK,EAAYkF,EAASloD,YAAckoD,EAASloD,WAAagjD,GAAa,EAAI,EACpFqK,EAAS56C,EAAGlpB,EAAI6jE,EACtB,GAAInwE,EAAQimE,cAAe,CACzB,MAAMkC,EAAc,CAClBjhD,OAAQ1c,KAAKsC,IAAIk5D,EAAUD,GAAa,EACxC/+C,WAAY8nD,EAAgB9nD,WAC5BC,SAAU6nD,EAAgB7nD,SAC1Ba,YAAa,GAETyuB,EAAUkxB,EAAUE,WAAWuI,EAAWlK,GAAYA,EAAW,EACjExvB,EAAU45B,EAASrK,EAAY,EACrC7iD,EAAIyG,YAAc3pB,EAAQqwE,mBAC1BntD,EAAIgH,UAAYlqB,EAAQqwE,mBACxBzpD,GAAU1D,EAAKilD,EAAa5xB,EAASC,GACrCtzB,EAAIyG,YAAcskD,EAAY1rD,YAC9BW,EAAIgH,UAAY+jD,EAAY3rD,gBAC5BsE,GAAU1D,EAAKilD,EAAa5xB,EAASC,OAChC,CACLtzB,EAAI0G,UAAYqkD,EAAYnmD,aAAe,EAC3C5E,EAAIyG,YAAcskD,EAAY1rD,YAC9BW,EAAI2tC,YAAYod,EAAYlvC,YAAc,IAC1C7b,EAAI4tC,eAAiBmd,EAAYjvC,kBAAoB,EACrD,MAAMsxC,EAAS7I,EAAUE,WAAWuI,EAAWlK,EAAW5nB,GACpDmyB,EAAS9I,EAAUE,WAAWF,EAAUY,MAAM6H,EAAW,GAAIlK,EAAW5nB,EAAa,GACrF+gB,EAAepzC,GAAckiD,EAAY9O,cAC3Cx/D,OAAOuiB,OAAOi9C,GAAcrL,KAAK5iD,GAAW,IAANA,IACxCgS,EAAIoE,YACJpE,EAAIgH,UAAYlqB,EAAQqwE,mBACxBvlD,GAAmB5H,EAAK,CACtB7W,EAAGikE,EACHhkE,EAAG8jE,EACHz8D,EAAGqyD,EACH30D,EAAG00D,EACH7+C,OAAQi4C,IAEVj8C,EAAI2E,OACJ3E,EAAI6E,SACJ7E,EAAIgH,UAAY+jD,EAAY3rD,gBAC5BY,EAAIoE,YACJwD,GAAmB5H,EAAK,CACtB7W,EAAGkkE,EACHjkE,EAAG8jE,EAAS,EACZz8D,EAAGqyD,EAAW,EACd30D,EAAG00D,EAAY,EACf7+C,OAAQi4C,IAEVj8C,EAAI2E,SAEJ3E,EAAIgH,UAAYlqB,EAAQqwE,mBACxBntD,EAAIutC,SAAS6f,EAAQF,EAAQpK,EAAUD,GACvC7iD,EAAIstD,WAAWF,EAAQF,EAAQpK,EAAUD,GACzC7iD,EAAIgH,UAAY+jD,EAAY3rD,gBAC5BY,EAAIutC,SAAS8f,EAAQH,EAAS,EAAGpK,EAAW,EAAGD,EAAY,IAG/D7iD,EAAIgH,UAAYjoB,KAAKksE,gBAAgB5mE,GAEvC,SAASiuB,EAAItS,EAAKljB,GAChB,MAAM,KAAC+qE,GAAQ9oE,MACT,YAAC+pE,EAAW,UAAEyE,EAAS,cAAE1E,EAAa,UAAEhG,EAAS,SAAEC,EAAQ,WAAE5nB,GAAcp+C,EAC3EirE,EAAWh/C,GAAOjsB,EAAQirE,UAChC,IAAIa,EAAiBb,EAASloD,WAC1B2tD,EAAe,EACnB,MAAMjJ,EAAYhsC,GAAcz7B,EAAQkG,IAAKjE,KAAKoK,EAAGpK,KAAKZ,OACpDsvE,EAAiB,SAASlnD,GAC9BvG,EAAI6G,SAASN,EAAMg+C,EAAUp7D,EAAEmpB,EAAGnpB,EAAIqkE,GAAel7C,EAAGlpB,EAAIw/D,EAAiB,GAC7Et2C,EAAGlpB,GAAKw/D,EAAiBE,GAErB4E,EAA0BnJ,EAAUt9C,UAAUsmD,GACpD,IAAIlF,EAAUsF,EAAWvnD,EAAO/hB,EAAGgY,EAAG3X,EAAMme,EAU5C,IATA7C,EAAIiH,UAAYsmD,EAChBvtD,EAAIkH,aAAe,SACnBlH,EAAIL,KAAOooD,EAAS1lD,OACpBiQ,EAAGnpB,EAAI+gE,GAAYnrE,KAAM2uE,EAAyB5wE,GAClDkjB,EAAIgH,UAAYlqB,EAAQ8wE,UACxB1pE,EAAKnF,KAAKypE,WAAYiF,GACtBD,EAAe3E,GAA6C,UAA5B6E,EACd,WAAdH,EAA0BzK,EAAW,EAAI5nB,EAAe4nB,EAAW,EAAI5nB,EACvE,EACC72C,EAAI,EAAGK,EAAOmjE,EAAK1qE,OAAQkH,EAAIK,IAAQL,EAAG,CAU7C,IATAgkE,EAAWR,EAAKxjE,GAChBspE,EAAY5uE,KAAKksE,gBAAgB5mE,GACjC2b,EAAIgH,UAAY2mD,EAChBzpE,EAAKmkE,EAASC,OAAQmF,GACtBrnD,EAAQiiD,EAASjiD,MACbyiD,GAAiBziD,EAAMjpB,SACzB4B,KAAK8uE,cAAc7tD,EAAKsS,EAAIjuB,EAAGkgE,EAAWznE,GAC1C8rE,EAAiBthE,KAAKuC,IAAIk+D,EAASloD,WAAYgjD,IAE5CxmD,EAAI,EAAGwG,EAAOuD,EAAMjpB,OAAQkf,EAAIwG,IAAQxG,EAC3CoxD,EAAernD,EAAM/J,IACrBusD,EAAiBb,EAASloD,WAE5B3b,EAAKmkE,EAASE,MAAOkF,GAEvBD,EAAe,EACf5E,EAAiBb,EAASloD,WAC1B3b,EAAKnF,KAAK0pE,UAAWgF,GACrBn7C,EAAGlpB,GAAK0/D,EAEV,WAAWx2C,EAAItS,EAAKljB,GAClB,MAAMgrE,EAAS/oE,KAAK+oE,OACd3qE,EAAS2qE,EAAO3qE,OACtB,IAAI6qE,EAAY3jE,EAChB,GAAIlH,EAAQ,CACV,MAAMonE,EAAYhsC,GAAcz7B,EAAQkG,IAAKjE,KAAKoK,EAAGpK,KAAKZ,OAQ1D,IAPAm0B,EAAGnpB,EAAI+gE,GAAYnrE,KAAMjC,EAAQgxE,YAAahxE,GAC9Cw1B,EAAGlpB,GAAKtM,EAAQisE,gBAChB/oD,EAAIiH,UAAYs9C,EAAUt9C,UAAUnqB,EAAQgxE,aAC5C9tD,EAAIkH,aAAe,SACnB8gD,EAAaj/C,GAAOjsB,EAAQkrE,YAC5BhoD,EAAIgH,UAAYlqB,EAAQixE,YACxB/tD,EAAIL,KAAOqoD,EAAW3lD,OACjBhe,EAAI,EAAGA,EAAIlH,IAAUkH,EACxB2b,EAAI6G,SAASihD,EAAOzjE,GAAIkgE,EAAUp7D,EAAEmpB,EAAGnpB,GAAImpB,EAAGlpB,EAAI4+D,EAAWnoD,WAAa,GAC1EyS,EAAGlpB,GAAK4+D,EAAWnoD,WAAa/iB,EAAQksE,eAI9C,eAAe12C,EAAItS,EAAKguD,EAAalxE,GACnC,MAAM,OAACusE,EAAM,OAAEK,GAAU3qE,MACnB,EAACoK,EAAC,EAAEC,GAAKkpB,GACT,MAACn0B,EAAK,OAAEE,GAAU2vE,GAClB,QAACnmD,EAAO,SAAEG,EAAQ,WAAEF,EAAU,YAAEC,GAAec,GAAc/rB,EAAQ+mB,cAC3E7D,EAAIgH,UAAYlqB,EAAQsiB,gBACxBY,EAAIyG,YAAc3pB,EAAQuiB,YAC1BW,EAAI0G,UAAY5pB,EAAQ8nB,YACxB5E,EAAIoE,YACJpE,EAAIuE,OAAOpb,EAAI0e,EAASze,GACT,QAAXsgE,GACF3qE,KAAKkvE,UAAU37C,EAAItS,EAAKguD,EAAalxE,GAEvCkjB,EAAIwE,OAAOrb,EAAIhL,EAAQ6pB,EAAU5e,GACjC4W,EAAIkuD,iBAAiB/kE,EAAIhL,EAAOiL,EAAGD,EAAIhL,EAAOiL,EAAI4e,GACnC,WAAX0hD,GAAkC,UAAXL,GACzBtqE,KAAKkvE,UAAU37C,EAAItS,EAAKguD,EAAalxE,GAEvCkjB,EAAIwE,OAAOrb,EAAIhL,EAAOiL,EAAI/K,EAAS0pB,GACnC/H,EAAIkuD,iBAAiB/kE,EAAIhL,EAAOiL,EAAI/K,EAAQ8K,EAAIhL,EAAQ4pB,EAAa3e,EAAI/K,GAC1D,WAAXqrE,GACF3qE,KAAKkvE,UAAU37C,EAAItS,EAAKguD,EAAalxE,GAEvCkjB,EAAIwE,OAAOrb,EAAI2e,EAAY1e,EAAI/K,GAC/B2hB,EAAIkuD,iBAAiB/kE,EAAGC,EAAI/K,EAAQ8K,EAAGC,EAAI/K,EAASypB,GACrC,WAAX4hD,GAAkC,SAAXL,GACzBtqE,KAAKkvE,UAAU37C,EAAItS,EAAKguD,EAAalxE,GAEvCkjB,EAAIwE,OAAOrb,EAAGC,EAAIye,GAClB7H,EAAIkuD,iBAAiB/kE,EAAGC,EAAGD,EAAI0e,EAASze,GACxC4W,EAAIsE,YACJtE,EAAI2E,OACA7nB,EAAQ8nB,YAAc,GACxB5E,EAAI6E,SAGR,uBAAuB/nB,GACrB,MAAM5B,EAAQ6D,KAAK7D,MACbkhC,EAAQr9B,KAAK6hC,YACbutC,EAAQ/xC,GAASA,EAAMjzB,EACvBilE,EAAQhyC,GAASA,EAAMhzB,EAC7B,GAAI+kE,GAASC,EAAO,CAClB,MAAMx2B,EAAWqvB,GAAYnqE,EAAQ86C,UAAU71C,KAAKhD,KAAMA,KAAKm+B,QAASn+B,KAAKyrE,gBAC7E,IAAK5yB,EACH,OAEF,MAAM5wC,EAAOjI,KAAK0rE,MAAQ7C,GAAe7oE,KAAMjC,GACzCsvE,EAAkB3vE,OAAOC,OAAO,GAAIk7C,EAAU74C,KAAK0rE,OACnDR,EAAYL,GAAmB1uE,EAAO4B,EAASsvE,GAC/CrnD,EAAQilD,GAAmBltE,EAASsvE,EAAiBnC,EAAW/uE,GAClEizE,EAAMnvC,MAAQja,EAAM5b,GAAKilE,EAAMpvC,MAAQja,EAAM3b,IAC/CrK,KAAKsqE,OAASY,EAAUZ,OACxBtqE,KAAK2qE,OAASO,EAAUP,OACxB3qE,KAAKZ,MAAQ6I,EAAK7I,MAClBY,KAAKV,OAAS2I,EAAK3I,OACnBU,KAAK8rE,OAASjzB,EAASzuC,EACvBpK,KAAK+rE,OAASlzB,EAASxuC,EACvBrK,KAAKirC,qBAAqB7uC,OAAO4D,KAAMgmB,KAI7C,cACE,QAAShmB,KAAKwrE,QAEhB,KAAKvqD,GACH,MAAMljB,EAAUiC,KAAKjC,QAAQ6wB,WAAW5uB,KAAKmB,cAC7C,IAAIqqE,EAAUxrE,KAAKwrE,QACnB,IAAKA,EACH,OAEFxrE,KAAKsvE,uBAAuBvxE,GAC5B,MAAMkxE,EAAc,CAClB7vE,MAAOY,KAAKZ,MACZE,OAAQU,KAAKV,QAETi0B,EAAK,CACTnpB,EAAGpK,KAAKoK,EACRC,EAAGrK,KAAKqK,GAEVmhE,EAAUjjE,KAAKgC,IAAIihE,GAAW,KAAO,EAAIA,EACzC,MAAMhuB,EAAUzzB,GAAUhsB,EAAQy/C,SAC5B+xB,EAAoBvvE,KAAK6kD,MAAMzmD,QAAU4B,KAAKypE,WAAWrrE,QAAU4B,KAAK8oE,KAAK1qE,QAAU4B,KAAK0pE,UAAUtrE,QAAU4B,KAAK+oE,OAAO3qE,OAC9HL,EAAQqlD,SAAWmsB,IACrBtuD,EAAI4C,OACJ5C,EAAIuuD,YAAchE,EAClBxrE,KAAKivD,eAAe17B,EAAItS,EAAKguD,EAAalxE,GAC1C07B,GAAsBxY,EAAKljB,EAAQwoE,eACnChzC,EAAGlpB,GAAKmzC,EAAQr3B,IAChBnmB,KAAKmvD,UAAU57B,EAAItS,EAAKljB,GACxBiC,KAAKyvE,SAASl8C,EAAItS,EAAKljB,GACvBiC,KAAK0vE,WAAWn8C,EAAItS,EAAKljB,GACzBg8B,GAAqB9Y,EAAKljB,EAAQwoE,eAClCtlD,EAAIgD,WAGR,oBACE,OAAOjkB,KAAKm+B,SAAW,GAEzB,kBAAkB29B,EAAgBuM,GAChC,MAAMtM,EAAa/7D,KAAKm+B,QAClByC,EAASk7B,EAAe3+D,IAAI,EAAE2I,eAAcvH,YAChD,MAAMuyB,EAAO9wB,KAAK7D,MAAM4rC,eAAejiC,GACvC,IAAKgrB,EACH,MAAM,IAAI7vB,MAAM,kCAAoC6E,GAEtD,MAAO,CACLA,eACAgvB,QAAShE,EAAKp0B,KAAK6B,GACnBA,WAGEk4C,GAAWjxC,EAAeu2D,EAAYn7B,GACtC+uC,EAAkB3vE,KAAK4vE,iBAAiBhvC,EAAQynC,IAClD5xB,GAAWk5B,KACb3vE,KAAKm+B,QAAUyC,EACf5gC,KAAKyrE,eAAiBpD,EACtBroE,KAAK6vE,qBAAsB,EAC3B7vE,KAAK5D,QAAO,IAGhB,YAAYiM,EAAG4zD,EAAQjG,GAAc,GACnC,GAAIiG,GAAUj8D,KAAK6vE,oBACjB,OAAO,EAET7vE,KAAK6vE,qBAAsB,EAC3B,MAAM9xE,EAAUiC,KAAKjC,QACfg+D,EAAa/7D,KAAKm+B,SAAW,GAC7ByC,EAAS5gC,KAAKw8D,mBAAmBn0D,EAAG0zD,EAAYE,EAAQjG,GACxD2Z,EAAkB3vE,KAAK4vE,iBAAiBhvC,EAAQv4B,GAChDouC,EAAUwlB,IAAWz2D,EAAeo7B,EAAQm7B,IAAe4T,EAWjE,OAVIl5B,IACFz2C,KAAKm+B,QAAUyC,GACX7iC,EAAQqlD,SAAWrlD,EAAQwvE,YAC7BvtE,KAAKyrE,eAAiB,CACpBrhE,EAAG/B,EAAE+B,EACLC,EAAGhC,EAAEgC,GAEPrK,KAAK5D,QAAO,EAAM6/D,KAGfxlB,EAET,mBAAmBpuC,EAAG0zD,EAAYE,EAAQjG,GACxC,MAAMj4D,EAAUiC,KAAKjC,QACrB,GAAe,aAAXsK,EAAErJ,KACJ,MAAO,GAET,IAAKg3D,EACH,OAAO+F,EAET,MAAMn7B,EAAS5gC,KAAK7D,MAAMsgE,0BAA0Bp0D,EAAGtK,EAAQujB,KAAMvjB,EAASk+D,GAI9E,OAHIl+D,EAAQsH,SACVu7B,EAAOv7B,UAEFu7B,EAET,iBAAiBA,EAAQv4B,GACvB,MAAM,OAACyjE,EAAM,OAAEC,EAAM,QAAEhuE,GAAWiC,KAC5B64C,EAAWqvB,GAAYnqE,EAAQ86C,UAAU71C,KAAKhD,KAAM4gC,EAAQv4B,GAClE,OAAoB,IAAbwwC,IAAuBizB,IAAWjzB,EAASzuC,GAAK2hE,IAAWlzB,EAASxuC,IAG/E,GAAQ69D,YAAcA,GACtB,IAAI4H,GAAiB,CACnB/tE,GAAI,UACJslE,SAAU,GACVa,eACA,UAAU/rE,EAAOmrE,EAAOvpE,GAClBA,IACF5B,EAAM22C,QAAU,IAAI,GAAQ,CAAC32C,QAAO4B,cAGxC,aAAa5B,EAAOmrE,EAAOvpE,GACrB5B,EAAM22C,SACR32C,EAAM22C,QAAQhM,WAAW/oC,IAG7B,MAAM5B,EAAOmrE,EAAOvpE,GACd5B,EAAM22C,SACR32C,EAAM22C,QAAQhM,WAAW/oC,IAG7B,UAAU5B,GACR,MAAM22C,EAAU32C,EAAM22C,QACtB,GAAIA,GAAWA,EAAQi9B,cAAe,CACpC,MAAMltE,EAAO,CACXiwC,WAEF,IAAuD,IAAnD32C,EAAM2tD,cAAc,oBAAqBjnD,GAC3C,OAEFiwC,EAAQ5U,KAAK/hC,EAAM8kB,KACnB9kB,EAAM2tD,cAAc,mBAAoBjnD,KAG5C,WAAW1G,EAAO0G,GAChB,GAAI1G,EAAM22C,QAAS,CACjB,MAAMuG,EAAmBx2C,EAAKo5D,OAC1B9/D,EAAM22C,QAAQ00B,YAAY3kE,EAAK67B,MAAO2a,EAAkBx2C,EAAKmzD,eAC/DnzD,EAAK4zC,SAAU,KAIrB5zB,SAAU,CACRugC,SAAS,EACTmqB,SAAU,KACV10B,SAAU,UACVx4B,gBAAiB,kBACjB0tD,WAAY,OACZrH,UAAW,CACT1nD,OAAQ,QAEV2qD,aAAc,EACdC,kBAAmB,EACnBnjB,WAAY,OACZooB,UAAW,OACX9E,YAAa,EACbf,SAAU,GAEVwF,UAAW,OACXQ,YAAa,OACb/E,cAAe,EACfD,gBAAiB,EACjBf,WAAY,CACVjqD,OAAQ,QAEV+vD,YAAa,OACbvxB,QAAS,EACTitB,aAAc,EACdD,UAAW,EACX1lD,aAAc,EACdg/C,UAAW,CAAC7iD,EAAKmG,IAASA,EAAK4hD,SAAS/gE,KACxC87D,SAAU,CAAC9iD,EAAKmG,IAASA,EAAK4hD,SAAS/gE,KACvCmmE,mBAAoB,OACpBtE,eAAe,EACf3tB,WAAY,EACZ77B,YAAa,gBACbuF,YAAa,EACbzF,UAAW,CACTqd,SAAU,IACVmC,OAAQ,gBAEVmB,WAAY,CACVN,QAAS,CACPzhC,KAAM,SACN2hC,WAAY,CAAC,IAAK,IAAK,QAAS,SAAU,SAAU,WAEtD6qC,QAAS,CACP5rC,OAAQ,SACRnC,SAAU,MAGdF,UAAW,CACT4uC,YAAahoE,EACb,MAAMmnE,GACJ,GAAIA,EAAaltE,OAAS,EAAG,CAC3B,MAAM8J,EAAOojE,EAAa,GACpBzuE,EAASqL,EAAK/L,MAAMO,KAAKG,OACzBmzE,EAAanzE,EAASA,EAAOuB,OAAS,EAC5C,GAAI4B,MAAQA,KAAKjC,SAAiC,YAAtBiC,KAAKjC,QAAQujB,KACvC,OAAOpZ,EAAK3K,QAAQW,OAAS,GACxB,GAAIgK,EAAKhK,MACd,OAAOgK,EAAKhK,MACP,GAAI8xE,EAAa,GAAK9nE,EAAKm9B,UAAY2qC,EAC5C,OAAOnzE,EAAOqL,EAAKm9B,WAGvB,MAAO,IAET+mC,WAAYjoE,EACZslE,WAAYtlE,EACZooE,YAAapoE,EACb,MAAM+wC,GACJ,GAAIl1C,MAAQA,KAAKjC,SAAiC,YAAtBiC,KAAKjC,QAAQujB,KACvC,OAAO4zB,EAAYh3C,MAAQ,KAAOg3C,EAAYE,gBAAkBF,EAAYE,eAE9E,IAAIl3C,EAAQg3C,EAAY33C,QAAQW,OAAS,GACrCA,IACFA,GAAS,MAEX,MAAMI,EAAQ42C,EAAYE,eAI1B,OAHK/wC,EAAc/F,KACjBJ,GAASI,GAEJJ,GAET,WAAWg3C,GACT,MAAMpkB,EAAOokB,EAAY/4C,MAAM4rC,eAAemN,EAAYpvC,cACpD/H,EAAU+yB,EAAK0T,WAAWzP,SAASmgB,EAAY7P,WACrD,MAAO,CACL/kB,YAAaviB,EAAQuiB,YACrBD,gBAAiBtiB,EAAQsiB,gBACzBwF,YAAa9nB,EAAQ8nB,YACrBiX,WAAY/+B,EAAQ++B,WACpBC,iBAAkBh/B,EAAQg/B,iBAC1BmgC,aAAc,IAGlB,iBACE,OAAOl9D,KAAKjC,QAAQ8wE,WAEtB,gBAAgB35B,GACd,MAAMpkB,EAAOokB,EAAY/4C,MAAM4rC,eAAemN,EAAYpvC,cACpD/H,EAAU+yB,EAAK0T,WAAWzP,SAASmgB,EAAY7P,WACrD,MAAO,CACLtgB,WAAYhnB,EAAQgnB,WACpBC,SAAUjnB,EAAQinB,WAGtBwnD,WAAYroE,EACZulE,UAAWvlE,EACXsoE,aAActoE,EACd4kE,OAAQ5kE,EACRuoE,YAAavoE,IAGjB89C,cAAe,CACb+mB,SAAU,OACVC,WAAY,OACZvC,UAAW,QAEbh3C,YAAa,CACX5M,YAAcX,GAAkB,WAATA,GAA8B,aAATA,GAAgC,aAATA,EACnEa,YAAY,EACZua,UAAW,CACTza,aAAa,EACbE,YAAY,GAEd5C,UAAW,CACT6C,WAAW,GAEb8d,WAAY,CACV9d,UAAW,cAGfixC,uBAAwB,CAAC,gBAa3B,MAAM+b,GAAc,CAACpzE,EAAQyoC,EAAK/mC,EAAO2xE,KACpB,kBAAR5qC,GACT/mC,EAAQ1B,EAAOY,KAAK6nC,GAAO,EAC3B4qC,EAAYC,QAAQ,CAAC5xE,QAAOL,MAAOonC,KAC1Bn7B,MAAMm7B,KACf/mC,EAAQ,MAEHA,GAET,SAAS6xE,GAAevzE,EAAQyoC,EAAK/mC,EAAO2xE,GAC1C,MAAM3sB,EAAQ1mD,EAAO0J,QAAQ++B,GAC7B,IAAe,IAAXie,EACF,OAAO0sB,GAAYpzE,EAAQyoC,EAAK/mC,EAAO2xE,GAEzC,MAAM30C,EAAO1+B,EAAOwzE,YAAY/qC,GAChC,OAAOie,IAAUhoB,EAAOh9B,EAAQglD,EAElC,MAAM2C,GAAa,CAAC3nD,EAAOuM,IAAkB,OAAVvM,EAAiB,KAAOmO,GAAYnE,KAAKc,MAAM9K,GAAQ,EAAGuM,GAC7F,MAAM,WAAsB,GAC1B,YAAY00B,GACV8P,MAAM9P,GACNx/B,KAAKswE,iBAAcv0E,EACnBiE,KAAKuwE,YAAc,EACnBvwE,KAAKwwE,aAAe,GAEtB,KAAK/d,GACH,MAAMge,EAAQzwE,KAAKwwE,aACnB,GAAIC,EAAMryE,OAAQ,CAChB,MAAMvB,EAASmD,KAAKkpC,YACpB,IAAK,MAAM,MAAC3qC,EAAK,MAAEL,KAAUuyE,EACvB5zE,EAAO0B,KAAWL,GACpBrB,EAAOsnB,OAAO5lB,EAAO,GAGzByB,KAAKwwE,aAAe,GAEtBlhC,MAAMgpB,KAAK7F,GAEb,MAAMntB,EAAK/mC,GACT,GAAI8F,EAAcihC,GAChB,OAAO,KAET,MAAMzoC,EAASmD,KAAKkpC,YAGpB,OAFA3qC,EAAQmG,SAASnG,IAAU1B,EAAO0B,KAAW+mC,EAAM/mC,EAC/C6xE,GAAevzE,EAAQyoC,EAAKzgC,EAAetG,EAAO+mC,GAAMtlC,KAAKwwE,cAC1DtqB,GAAW3nD,EAAO1B,EAAOuB,OAAS,GAE3C,sBACE,MAAM,WAACulC,EAAU,WAAEC,GAAc5jC,KAAK0jC,gBACtC,IAAI,IAAC74B,EAAG,IAAEC,GAAO9K,KAAKmoD,WAAU,GACJ,UAAxBnoD,KAAKjC,QAAQw8B,SACVoJ,IACH94B,EAAM,GAEH+4B,IACH94B,EAAM9K,KAAKkpC,YAAY9qC,OAAS,IAGpC4B,KAAK6K,IAAMA,EACX7K,KAAK8K,IAAMA,EAEb,aACE,MAAMD,EAAM7K,KAAK6K,IACXC,EAAM9K,KAAK8K,IACX4mC,EAAS1xC,KAAKjC,QAAQ2zC,OACtB9E,EAAQ,GACd,IAAI/vC,EAASmD,KAAKkpC,YAClBrsC,EAAkB,IAARgO,GAAaC,IAAQjO,EAAOuB,OAAS,EAAKvB,EAASA,EAAOkG,MAAM8H,EAAKC,EAAM,GACrF9K,KAAKuwE,YAAchoE,KAAKuC,IAAIjO,EAAOuB,QAAUszC,EAAS,EAAI,GAAI,GAC9D1xC,KAAKswE,YAActwE,KAAK6K,KAAO6mC,EAAS,GAAM,GAC9C,IAAK,IAAIpzC,EAAQuM,EAAKvM,GAASwM,EAAKxM,IAClCsuC,EAAMnvC,KAAK,CAACa,UAEd,OAAOsuC,EAET,iBAAiBtuC,GACf,MAAMzB,EAASmD,KAAKkpC,YACpB,OAAI5qC,GAAS,GAAKA,EAAQzB,EAAOuB,OACxBvB,EAAOyB,GAETA,EAET,YACEgxC,MAAMlO,YACDphC,KAAKsuC,iBACRtuC,KAAK04C,gBAAkB14C,KAAK04C,gBAGhC,iBAAiBp6C,GAIf,MAHqB,kBAAVA,IACTA,EAAQ0B,KAAKmxB,MAAM7yB,IAEJ,OAAVA,EAAiBirC,IAAMvpC,KAAK+wC,oBAAoBzyC,EAAQ0B,KAAKswE,aAAetwE,KAAKuwE,aAE1F,gBAAgBhyE,GACd,MAAMquC,EAAQ5sC,KAAK4sC,MACnB,OAAIruC,EAAQ,GAAKA,EAAQquC,EAAMxuC,OAAS,EAC/B,KAEF4B,KAAK2sC,iBAAiBC,EAAMruC,GAAOD,OAE5C,iBAAiB+lB,GACf,OAAO9b,KAAKc,MAAMrJ,KAAKswE,YAActwE,KAAK0wE,mBAAmBrsD,GAASrkB,KAAKuwE,aAE7E,eACE,OAAOvwE,KAAKomB,QAUhB,SAASuqD,GAAgBC,EAAmBC,GAC1C,MAAMjkC,EAAQ,GACRkkC,EAAc,OACd,OAACv2C,EAAM,KAAEkzB,EAAI,IAAE5iD,EAAG,IAAEC,EAAG,UAAEimE,EAAS,MAAEhgD,EAAK,SAAEigD,EAAQ,UAAEC,EAAS,cAAEC,GAAiBN,EACjF14B,EAAOuV,GAAQ,EACf0jB,EAAYH,EAAW,GACtBnmE,IAAKumE,EAAMtmE,IAAKumE,GAAQR,EACzBltC,GAAct/B,EAAcwG,GAC5B+4B,GAAcv/B,EAAcyG,GAC5BwmE,GAAgBjtE,EAAc0sB,GAC9BwgD,GAAcF,EAAOD,IAASH,EAAY,GAChD,IACI7xC,EAAQoyC,EAASC,EAASC,EAD1Bp+B,EAAUpqC,GAASmoE,EAAOD,GAAQD,EAAYj5B,GAAQA,EAE1D,GAAI5E,EAAUw9B,IAAgBntC,IAAeC,EAC3C,MAAO,CAAC,CAACtlC,MAAO8yE,GAAO,CAAC9yE,MAAO+yE,IAEjCK,EAAYnpE,KAAK67C,KAAKitB,EAAO/9B,GAAW/qC,KAAKkB,MAAM2nE,EAAO99B,GACtDo+B,EAAYP,IACd79B,EAAUpqC,EAAQwoE,EAAYp+B,EAAU69B,EAAYj5B,GAAQA,GAEzD7zC,EAAc0sE,KACjB3xC,EAAS72B,KAAKiB,IAAI,GAAIunE,GACtBz9B,EAAU/qC,KAAK67C,KAAK9Q,EAAUlU,GAAUA,GAE3B,UAAX7E,GACFi3C,EAAUjpE,KAAKkB,MAAM2nE,EAAO99B,GAAWA,EACvCm+B,EAAUlpE,KAAK67C,KAAKitB,EAAO/9B,GAAWA,IAEtCk+B,EAAUJ,EACVK,EAAUJ,GAER1tC,GAAcC,GAAc6pB,GAAQjjD,GAAaM,EAAMD,GAAO4iD,EAAMna,EAAU,MAChFo+B,EAAYnpE,KAAKc,MAAMd,KAAKsC,KAAKC,EAAMD,GAAOyoC,EAAS09B,IACvD19B,GAAWxoC,EAAMD,GAAO6mE,EACxBF,EAAU3mE,EACV4mE,EAAU3mE,GACDwmE,GACTE,EAAU7tC,EAAa94B,EAAM2mE,EAC7BC,EAAU7tC,EAAa94B,EAAM2mE,EAC7BC,EAAY3gD,EAAQ,EACpBuiB,GAAWm+B,EAAUD,GAAWE,IAEhCA,GAAaD,EAAUD,GAAWl+B,EAEhCo+B,EADEpoE,EAAaooE,EAAWnpE,KAAKc,MAAMqoE,GAAYp+B,EAAU,KAC/C/qC,KAAKc,MAAMqoE,GAEXnpE,KAAK67C,KAAKstB,IAG1B,MAAMC,EAAgBppE,KAAKuC,IACzBK,GAAemoC,GACfnoC,GAAeqmE,IAEjBpyC,EAAS72B,KAAKiB,IAAI,GAAInF,EAAc0sE,GAAaY,EAAgBZ,GACjES,EAAUjpE,KAAKc,MAAMmoE,EAAUpyC,GAAUA,EACzCqyC,EAAUlpE,KAAKc,MAAMooE,EAAUryC,GAAUA,EACzC,IAAI9hB,EAAI,EAcR,IAbIqmB,IACEutC,GAAiBM,IAAY3mE,GAC/B+hC,EAAMnvC,KAAK,CAACa,MAAOuM,IACf2mE,EAAU3mE,GACZyS,IAEEhU,EAAaf,KAAKc,OAAOmoE,EAAUl0D,EAAIg2B,GAAWlU,GAAUA,EAAQv0B,EAAK+mE,GAAkB/mE,EAAK0mE,EAAYX,KAC9GtzD,KAEOk0D,EAAU3mE,GACnByS,KAGGA,EAAIo0D,IAAap0D,EACtBsvB,EAAMnvC,KAAK,CAACa,MAAOiK,KAAKc,OAAOmoE,EAAUl0D,EAAIg2B,GAAWlU,GAAUA,IAWpE,OATIwE,GAAcstC,GAAiBO,IAAY3mE,EACzC8hC,EAAMxuC,QAAUkL,EAAasjC,EAAMA,EAAMxuC,OAAS,GAAGE,MAAOwM,EAAK8mE,GAAkB9mE,EAAKymE,EAAYX,IACtGhkC,EAAMA,EAAMxuC,OAAS,GAAGE,MAAQwM,EAEhC8hC,EAAMnvC,KAAK,CAACa,MAAOwM,IAEX84B,GAAc6tC,IAAY3mE,GACpC8hC,EAAMnvC,KAAK,CAACa,MAAOmzE,IAEd7kC,EAET,SAASglC,GAAkBtzE,EAAOizE,GAAY,WAAC/iC,EAAU,YAAEsW,IACzD,MAAM5/B,EAAMna,EAAU+5C,GAChBzmC,GAASmwB,EAAajmC,KAAKyE,IAAIkY,GAAO3c,KAAK0F,IAAIiX,KAAS,KACxD9mB,EAAS,IAAOmzE,GAAc,GAAKjzE,GAAOF,OAChD,OAAOmK,KAAKsC,IAAI0mE,EAAalzD,EAAOjgB,GA/FtC,GAAc2D,GAAK,WACnB,GAAc8gB,SAAW,CACvB+pB,MAAO,CACLtqC,SAAU,GAAcQ,UAAUinC,mBA8FtC,MAAM,WAAwB,GAC5B,YAAYvK,GACV8P,MAAM9P,GACNx/B,KAAK4D,WAAQ7H,EACbiE,KAAK6D,SAAM9H,EACXiE,KAAKswE,iBAAcv0E,EACnBiE,KAAK6xE,eAAY91E,EACjBiE,KAAKuwE,YAAc,EAErB,MAAMjrC,EAAK/mC,GACT,OAAI8F,EAAcihC,KAGE,kBAARA,GAAoBA,aAAejmC,UAAYqF,UAAU4gC,GAF5D,MAKDA,EAEV,yBACE,MAAM,YAAC3a,GAAe3qB,KAAKjC,SACrB,WAAC4lC,EAAU,WAAEC,GAAc5jC,KAAK0jC,gBACtC,IAAI,IAAC74B,EAAG,IAAEC,GAAO9K,KACjB,MAAM8xE,EAAS7iE,GAAMpE,EAAM84B,EAAa94B,EAAMoE,EACxC8iE,EAAS9iE,GAAMnE,EAAM84B,EAAa94B,EAAMmE,EAC9C,GAAI0b,EAAa,CACf,MAAMqnD,EAAU/oE,EAAK4B,GACfonE,EAAUhpE,EAAK6B,GACjBknE,EAAU,GAAKC,EAAU,EAC3BF,EAAO,GACEC,EAAU,GAAKC,EAAU,GAClCH,EAAO,GAGX,GAAIjnE,IAAQC,EAAK,CACf,IAAI4mC,EAAS,GACT5mC,GAAOzL,OAAO6yE,kBAAoBrnE,GAAOxL,OAAO8yE,oBAClDzgC,EAASnpC,KAAKgC,IAAU,IAANO,IAEpBinE,EAAOjnE,EAAM4mC,GACR/mB,GACHmnD,EAAOjnE,EAAM6mC,GAGjB1xC,KAAK6K,IAAMA,EACX7K,KAAK8K,IAAMA,EAEb,eACE,MAAMg4C,EAAW9iD,KAAKjC,QAAQ6uC,MAC9B,IACIokC,GADA,cAAChuB,EAAa,SAAEovB,GAAYtvB,EAehC,OAbIsvB,GACFpB,EAAWzoE,KAAK67C,KAAKpkD,KAAK8K,IAAMsnE,GAAY7pE,KAAKkB,MAAMzJ,KAAK6K,IAAMunE,GAAY,EAC1EpB,EAAW,MACb9mD,QAAQC,KAAK,UAAUnqB,KAAK+B,sBAAsBqwE,mCAA0CpB,8BAC5FA,EAAW,OAGbA,EAAWhxE,KAAKqyE,mBAChBrvB,EAAgBA,GAAiB,IAE/BA,IACFguB,EAAWzoE,KAAKsC,IAAIm4C,EAAeguB,IAE9BA,EAET,mBACE,OAAO3xE,OAAOsJ,kBAEhB,aACE,MAAMye,EAAOpnB,KAAKjC,QACZ+kD,EAAW17B,EAAKwlB,MACtB,IAAIokC,EAAWhxE,KAAKsyE,eACpBtB,EAAWzoE,KAAKuC,IAAI,EAAGkmE,GACvB,MAAMuB,EAA0B,CAC9BvB,WACAz2C,OAAQnT,EAAKmT,OACb1vB,IAAKuc,EAAKvc,IACVC,IAAKsc,EAAKtc,IACVimE,UAAWjuB,EAASiuB,UACpBtjB,KAAM3K,EAASsvB,SACfrhD,MAAO+xB,EAAS/xB,MAChBkgD,UAAWjxE,KAAKwyE,aAChBhkC,WAAYxuC,KAAKsuC,eACjBwW,YAAahC,EAASgC,aAAe,EACrCosB,eAA0C,IAA3BpuB,EAASouB,eAEpBL,EAAY7wE,KAAKonD,QAAUpnD,KAC3B4sC,EAAQ+jC,GAAgB4B,EAAyB1B,GAYvD,MAXoB,UAAhBzpD,EAAKmT,QACP7vB,EAAmBkiC,EAAO5sC,KAAM,SAE9BonB,EAAK/hB,SACPunC,EAAMvnC,UACNrF,KAAK4D,MAAQ5D,KAAK8K,IAClB9K,KAAK6D,IAAM7D,KAAK6K,MAEhB7K,KAAK4D,MAAQ5D,KAAK6K,IAClB7K,KAAK6D,IAAM7D,KAAK8K,KAEX8hC,EAET,YACE,MAAMA,EAAQ5sC,KAAK4sC,MACnB,IAAIhpC,EAAQ5D,KAAK6K,IACbhH,EAAM7D,KAAK8K,IAEf,GADAwkC,MAAMlO,YACFphC,KAAKjC,QAAQ2zC,QAAU9E,EAAMxuC,OAAQ,CACvC,MAAMszC,GAAU7tC,EAAMD,GAAS2E,KAAKuC,IAAI8hC,EAAMxuC,OAAS,EAAG,GAAK,EAC/DwF,GAAS8tC,EACT7tC,GAAO6tC,EAET1xC,KAAKswE,YAAc1sE,EACnB5D,KAAK6xE,UAAYhuE,EACjB7D,KAAKuwE,YAAc1sE,EAAMD,EAE3B,iBAAiBtF,GACf,OAAO06B,GAAa16B,EAAO0B,KAAK7D,MAAM4B,QAAQy6B,OAAQx4B,KAAKjC,QAAQ6uC,MAAM1T,SAI7E,MAAM,WAAoB,GACxB,sBACE,MAAM,IAACruB,EAAG,IAAEC,GAAO9K,KAAKmoD,WAAU,GAClCnoD,KAAK6K,IAAMpG,EAAeoG,GAAOA,EAAM,EACvC7K,KAAK8K,IAAMrG,EAAeqG,GAAOA,EAAM,EACvC9K,KAAKyyE,yBAEP,mBACE,MAAMjkC,EAAaxuC,KAAKsuC,eAClBlwC,EAASowC,EAAaxuC,KAAKZ,MAAQY,KAAKV,OACxCwlD,EAAc/5C,EAAU/K,KAAKjC,QAAQ6uC,MAAMkY,aAC3CzmC,GAASmwB,EAAajmC,KAAKyE,IAAI83C,GAAev8C,KAAK0F,IAAI62C,KAAiB,KACxE+G,EAAW7rD,KAAKksD,wBAAwB,GAC9C,OAAO3jD,KAAK67C,KAAKhmD,EAASmK,KAAKsC,IAAI,GAAIghD,EAAS/qC,WAAazC,IAE/D,iBAAiB/f,GACf,OAAiB,OAAVA,EAAiBirC,IAAMvpC,KAAK+wC,oBAAoBzyC,EAAQ0B,KAAKswE,aAAetwE,KAAKuwE,aAE1F,iBAAiBlsD,GACf,OAAOrkB,KAAKswE,YAActwE,KAAK0wE,mBAAmBrsD,GAASrkB,KAAKuwE,aAUpE,SAASmC,GAAQC,GACf,MAAMvyC,EAASuyC,EAAWpqE,KAAKiB,IAAI,GAAIjB,KAAKkB,MAAMT,EAAM2pE,KACxD,OAAkB,IAAXvyC,EAET,SAASwyC,GAAchC,EAAmBC,GACxC,MAAMgC,EAAStqE,KAAKkB,MAAMT,EAAM6nE,EAAU/lE,MACpCgoE,EAAiBvqE,KAAK67C,KAAKysB,EAAU/lE,IAAMvC,KAAKiB,IAAI,GAAIqpE,IACxDjmC,EAAQ,GACd,IAAI+lC,EAAUhuE,EAAgBisE,EAAkB/lE,IAAKtC,KAAKiB,IAAI,GAAIjB,KAAKkB,MAAMT,EAAM6nE,EAAUhmE,QACzFkoE,EAAMxqE,KAAKkB,MAAMT,EAAM2pE,IACvBK,EAAczqE,KAAKkB,MAAMkpE,EAAUpqE,KAAKiB,IAAI,GAAIupE,IAChDhC,EAAYgC,EAAM,EAAIxqE,KAAKiB,IAAI,GAAIjB,KAAKgC,IAAIwoE,IAAQ,EACxD,GACEnmC,EAAMnvC,KAAK,CAACa,MAAOq0E,EAASxvB,MAAOuvB,GAAQC,OACzCK,EACkB,KAAhBA,IACFA,EAAc,IACZD,EACFhC,EAAYgC,GAAO,EAAI,EAAIhC,GAE7B4B,EAAUpqE,KAAKc,MAAM2pE,EAAczqE,KAAKiB,IAAI,GAAIupE,GAAOhC,GAAaA,QAC7DgC,EAAMF,GAAWE,IAAQF,GAAUG,EAAcF,GAC1D,MAAMG,EAAWtuE,EAAgBisE,EAAkB9lE,IAAK6nE,GAExD,OADA/lC,EAAMnvC,KAAK,CAACa,MAAO20E,EAAU9vB,MAAOuvB,GAAQC,KACrC/lC,EA/BT,GAAY7qC,GAAK,SACjB,GAAY8gB,SAAW,CACrB+pB,MAAO,CACLtqC,SAAUsgD,GAAMV,WAAWS,UA8B/B,MAAM,WAAyB,GAC7B,YAAYnjB,GACV8P,MAAM9P,GACNx/B,KAAK4D,WAAQ7H,EACbiE,KAAK6D,SAAM9H,EACXiE,KAAKswE,iBAAcv0E,EACnBiE,KAAKuwE,YAAc,EAErB,MAAMjrC,EAAK/mC,GACT,MAAMD,EAAQ,GAAgBwE,UAAUquB,MAAMhuB,MAAMnD,KAAM,CAACslC,EAAK/mC,IAChE,GAAc,IAAVD,EAIJ,OAAOmG,EAAenG,IAAUA,EAAQ,EAAIA,EAAQ,KAHlD0B,KAAKkzE,OAAQ,EAKjB,sBACE,MAAM,IAACroE,EAAG,IAAEC,GAAO9K,KAAKmoD,WAAU,GAClCnoD,KAAK6K,IAAMpG,EAAeoG,GAAOtC,KAAKuC,IAAI,EAAGD,GAAO,KACpD7K,KAAK8K,IAAMrG,EAAeqG,GAAOvC,KAAKuC,IAAI,EAAGA,GAAO,KAChD9K,KAAKjC,QAAQ4sB,cACf3qB,KAAKkzE,OAAQ,GAEflzE,KAAKyyE,yBAEP,yBACE,MAAM,WAAC9uC,EAAU,WAAEC,GAAc5jC,KAAK0jC,gBACtC,IAAI74B,EAAM7K,KAAK6K,IACXC,EAAM9K,KAAK8K,IACf,MAAMgnE,EAAS7iE,GAAMpE,EAAM84B,EAAa94B,EAAMoE,EACxC8iE,EAAS9iE,GAAMnE,EAAM84B,EAAa94B,EAAMmE,EACxC8jE,EAAM,CAAC9jE,EAAGH,IAAMvG,KAAKiB,IAAI,GAAIjB,KAAKkB,MAAMT,EAAMiG,IAAMH,GACtDjE,IAAQC,IACND,GAAO,GACTinE,EAAO,GACPC,EAAO,MAEPD,EAAOiB,EAAIloE,GAAM,IACjBknE,EAAOgB,EAAIjoE,EAAK,MAGhBD,GAAO,GACTinE,EAAOiB,EAAIjoE,GAAM,IAEfA,GAAO,GACTinE,EAAOgB,EAAIloE,EAAK,IAEd7K,KAAKkzE,OAASlzE,KAAK6K,MAAQ7K,KAAK4nD,eAAiB/8C,IAAQkoE,EAAI/yE,KAAK6K,IAAK,IACzEinE,EAAOiB,EAAIloE,GAAM,IAEnB7K,KAAK6K,IAAMA,EACX7K,KAAK8K,IAAMA,EAEb,aACE,MAAMsc,EAAOpnB,KAAKjC,QACZ6yE,EAAoB,CACxB/lE,IAAK7K,KAAK0nD,SACV58C,IAAK9K,KAAKynD,UAEN7a,EAAQgmC,GAAchC,EAAmB5wE,MAY/C,MAXoB,UAAhBonB,EAAKmT,QACP7vB,EAAmBkiC,EAAO5sC,KAAM,SAE9BonB,EAAK/hB,SACPunC,EAAMvnC,UACNrF,KAAK4D,MAAQ5D,KAAK8K,IAClB9K,KAAK6D,IAAM7D,KAAK6K,MAEhB7K,KAAK4D,MAAQ5D,KAAK6K,IAClB7K,KAAK6D,IAAM7D,KAAK8K,KAEX8hC,EAET,iBAAiBtuC,GACf,YAAiBvC,IAAVuC,EACH,IACA06B,GAAa16B,EAAO0B,KAAK7D,MAAM4B,QAAQy6B,OAAQx4B,KAAKjC,QAAQ6uC,MAAM1T,QAExE,YACE,MAAMt1B,EAAQ5D,KAAK6K,IACnBykC,MAAMlO,YACNphC,KAAKswE,YAActnE,EAAMpF,GACzB5D,KAAKuwE,YAAcvnE,EAAMhJ,KAAK8K,KAAO9B,EAAMpF,GAE7C,iBAAiBtF,GAIf,YAHcvC,IAAVuC,GAAiC,IAAVA,IACzBA,EAAQ0B,KAAK6K,KAED,OAAVvM,GAAkB6L,MAAM7L,GACnBirC,IAEFvpC,KAAK+wC,mBAAmBzyC,IAAU0B,KAAK6K,IAC1C,GACC7B,EAAM1K,GAAS0B,KAAKswE,aAAetwE,KAAKuwE,aAE/C,iBAAiBlsD,GACf,MAAM+nC,EAAUpsD,KAAK0wE,mBAAmBrsD,GACxC,OAAO9b,KAAKiB,IAAI,GAAIxJ,KAAKswE,YAAclkB,EAAUpsD,KAAKuwE,cAa1D,SAAS4C,GAAsB/rD,GAC7B,MAAM07B,EAAW17B,EAAKwlB,MACtB,GAAIkW,EAAStL,SAAWpwB,EAAKowB,QAAS,CACpC,MAAMgG,EAAUzzB,GAAU+4B,EAAS2C,iBACnC,OAAO5gD,EAAei+C,EAASliC,MAAQkiC,EAASliC,KAAK3Y,KAAM4a,GAASjC,KAAK3Y,MAAQu1C,EAAQl+C,OAE3F,OAAO,EAET,SAAS8zE,GAAiBnyD,EAAKL,EAAM1iB,GAEnC,OADAA,EAAQoG,EAAQpG,GAASA,EAAQ,CAACA,GAC3B,CACLwT,EAAG+R,GAAaxC,EAAKL,EAAK0C,OAAQplB,GAClCkR,EAAGlR,EAAME,OAASwiB,EAAKE,YAG3B,SAASuyD,GAAgB1nE,EAAOpE,EAAKU,EAAM4C,EAAKC,GAC9C,OAAIa,IAAUd,GAAOc,IAAUb,EACtB,CACLlH,MAAO2D,EAAOU,EAAO,EACrBpE,IAAK0D,EAAOU,EAAO,GAEZ0D,EAAQd,GAAOc,EAAQb,EACzB,CACLlH,MAAO2D,EAAMU,EACbpE,IAAK0D,GAGF,CACL3D,MAAO2D,EACP1D,IAAK0D,EAAMU,GAGf,SAASqrE,GAAmBxxD,GAC1B,MAAMktB,EAAO,CACX7/B,EAAG2S,EAAM/d,KAAO+d,EAAM4lD,SAAS3jE,KAC/BkN,EAAG6Q,EAAM9d,MAAQ8d,EAAM4lD,SAAS1jE,MAChC8I,EAAGgV,EAAMqE,IAAMrE,EAAM4lD,SAASvhD,IAC9Bne,EAAG8Z,EAAMsE,OAAStE,EAAM4lD,SAASthD,QAE7BmtD,EAAS71E,OAAOC,OAAO,GAAIqxC,GAC3Bqb,EAAa,GACb7M,EAAU,GACVg2B,EAAa1xD,EAAM2xD,aAAar1E,OAChCs1E,EAAiB5xD,EAAM/jB,QAAQ25C,YAC/Bi8B,EAAkBD,EAAeE,kBAAoBtrE,EAAKkrE,EAAa,EAC7E,IAAK,IAAIluE,EAAI,EAAGA,EAAIkuE,EAAYluE,IAAK,CACnC,MAAM8hB,EAAOssD,EAAe9kD,WAAW9M,EAAM+xD,qBAAqBvuE,IAClEk4C,EAAQl4C,GAAK8hB,EAAKo2B,QAClB,MAAM5F,EAAgB91B,EAAMgyD,iBAAiBxuE,EAAGwc,EAAMiyD,YAAcv2B,EAAQl4C,GAAIquE,GAC1EK,EAAShqD,GAAO5C,EAAKxG,MACrB+mD,EAAWyL,GAAiBtxD,EAAMb,IAAK+yD,EAAQlyD,EAAM2xD,aAAanuE,IACxE+kD,EAAW/kD,GAAKqiE,EAChB,MAAM3c,EAAe9+C,GAAgB4V,EAAMo1B,cAAc5xC,GAAKquE,GACxDhoE,EAAQpD,KAAKc,MAAM4B,GAAU+/C,IAC7BipB,EAAUZ,GAAgB1nE,EAAOisC,EAAcxtC,EAAGu9D,EAASj2D,EAAG,EAAG,KACjEwiE,EAAUb,GAAgB1nE,EAAOisC,EAAcvtC,EAAGs9D,EAASv4D,EAAG,GAAI,KACxE+kE,GAAaZ,EAAQvkC,EAAMgc,EAAcipB,EAASC,GAEpDpyD,EAAMsyD,eACJplC,EAAK7/B,EAAIokE,EAAOpkE,EAChBokE,EAAOtiE,EAAI+9B,EAAK/9B,EAChB+9B,EAAKliC,EAAIymE,EAAOzmE,EAChBymE,EAAOvrE,EAAIgnC,EAAKhnC,GAElB8Z,EAAMuyD,iBAAmBC,GAAqBxyD,EAAOuoC,EAAY7M,GAEnE,SAAS22B,GAAaZ,EAAQvkC,EAAMrjC,EAAOsoE,EAASC,GAClD,MAAMlnE,EAAMzE,KAAKgC,IAAIhC,KAAKyE,IAAIrB,IACxBsC,EAAM1F,KAAKgC,IAAIhC,KAAK0F,IAAItC,IAC9B,IAAIvB,EAAI,EACJC,EAAI,EACJ4pE,EAAQrwE,MAAQorC,EAAK7/B,GACvB/E,GAAK4kC,EAAK7/B,EAAI8kE,EAAQrwE,OAASoJ,EAC/BumE,EAAOpkE,EAAI5G,KAAKsC,IAAI0oE,EAAOpkE,EAAG6/B,EAAK7/B,EAAI/E,IAC9B6pE,EAAQpwE,IAAMmrC,EAAK/9B,IAC5B7G,GAAK6pE,EAAQpwE,IAAMmrC,EAAK/9B,GAAKjE,EAC7BumE,EAAOtiE,EAAI1I,KAAKuC,IAAIyoE,EAAOtiE,EAAG+9B,EAAK/9B,EAAI7G,IAErC8pE,EAAQtwE,MAAQorC,EAAKliC,GACvBzC,GAAK2kC,EAAKliC,EAAIonE,EAAQtwE,OAASqK,EAC/BslE,EAAOzmE,EAAIvE,KAAKsC,IAAI0oE,EAAOzmE,EAAGkiC,EAAKliC,EAAIzC,IAC9B6pE,EAAQrwE,IAAMmrC,EAAKhnC,IAC5BqC,GAAK6pE,EAAQrwE,IAAMmrC,EAAKhnC,GAAKiG,EAC7BslE,EAAOvrE,EAAIO,KAAKuC,IAAIyoE,EAAOvrE,EAAGgnC,EAAKhnC,EAAIqC,IAG3C,SAASiqE,GAAqBxyD,EAAOuoC,EAAY7M,GAC/C,MAAM/wB,EAAQ,GACR+mD,EAAa1xD,EAAM2xD,aAAar1E,OAChCgpB,EAAOtF,EAAM/jB,QACbw2E,EAAQpB,GAAsB/rD,GAAQ,EACtCotD,EAAgB1yD,EAAMiyD,YACtBJ,EAAkBvsD,EAAKswB,YAAYk8B,kBAAoBtrE,EAAKkrE,EAAa,EAC/E,IAAK,IAAIluE,EAAI,EAAGA,EAAIkuE,EAAYluE,IAAK,CACnC,MAAMmvE,EAAqB3yD,EAAMgyD,iBAAiBxuE,EAAGkvE,EAAgBD,EAAQ/2B,EAAQl4C,GAAIquE,GACnFhoE,EAAQpD,KAAKc,MAAM4B,GAAUiB,GAAgBuoE,EAAmB9oE,MAAQ9C,KACxEZ,EAAOoiD,EAAW/kD,GAClB+E,EAAIqqE,GAAUD,EAAmBpqE,EAAGpC,EAAKmH,EAAGzD,GAC5Cuc,EAAYysD,GAAqBhpE,GACjC5H,EAAO6wE,GAAiBH,EAAmBrqE,EAAGnC,EAAKyJ,EAAGwW,GAC5DuE,EAAMhvB,KAAK,CACT2M,EAAGqqE,EAAmBrqE,EACtBC,IACA6d,YACAnkB,OACAoiB,IAAK9b,EACLrG,MAAOD,EAAOkE,EAAKyJ,EACnB0U,OAAQ/b,EAAIpC,EAAKmH,IAGrB,OAAOqd,EAET,SAASkoD,GAAqBhpE,GAC5B,OAAc,IAAVA,GAAyB,MAAVA,EACV,SACEA,EAAQ,IACV,OAEF,QAET,SAASipE,GAAiBxqE,EAAGsH,EAAGhO,GAM9B,MALc,UAAVA,EACF0G,GAAKsH,EACc,WAAVhO,IACT0G,GAAMsH,EAAI,GAELtH,EAET,SAASsqE,GAAUrqE,EAAG+E,EAAGzD,GAMvB,OALc,KAAVA,GAA0B,MAAVA,EAClBtB,GAAM+E,EAAI,GACDzD,EAAQ,KAAOA,EAAQ,MAChCtB,GAAK+E,GAEA/E,EAET,SAASwqE,GAAgB/yD,EAAOkuD,GAC9B,MAAM,IAAC/uD,EAAKljB,SAAS,YAAC25C,IAAgB51B,EACtC,IAAK,IAAIxc,EAAI0qE,EAAa,EAAG1qE,GAAK,EAAGA,IAAK,CACxC,MAAMooD,EAAchW,EAAY9oB,WAAW9M,EAAM+xD,qBAAqBvuE,IAChE0uE,EAAShqD,GAAO0jC,EAAY9sC,OAC5B,EAACxW,EAAC,EAAEC,EAAC,UAAE6d,EAAS,KAAEnkB,EAAI,IAAEoiB,EAAG,MAAEniB,EAAK,OAAEoiB,GAAUtE,EAAMuyD,iBAAiB/uE,IACrE,cAACkgD,GAAiBkI,EACxB,IAAKrpD,EAAcmhD,GAAgB,CACjC,MAAM0X,EAAepzC,GAAc4jC,EAAYwP,cACzC1f,EAAUzzB,GAAU2jC,EAAYjI,iBACtCxkC,EAAIgH,UAAYu9B,EAChB,MAAMsvB,EAAe/wE,EAAOy5C,EAAQz5C,KAC9BgxE,EAAc5uD,EAAMq3B,EAAQr3B,IAC5B6uD,EAAgBhxE,EAAQD,EAAOy5C,EAAQp+C,MACvC61E,EAAiB7uD,EAASD,EAAMq3B,EAAQl+C,OAC1C5B,OAAOuiB,OAAOi9C,GAAcrL,KAAK5iD,GAAW,IAANA,IACxCgS,EAAIoE,YACJwD,GAAmB5H,EAAK,CACtB7W,EAAG0qE,EACHzqE,EAAG0qE,EACHrjE,EAAGsjE,EACH5lE,EAAG6lE,EACHhwD,OAAQi4C,IAEVj8C,EAAI2E,QAEJ3E,EAAIutC,SAASsmB,EAAcC,EAAaC,EAAeC,GAG3D/tD,GACEjG,EACAa,EAAM2xD,aAAanuE,GACnB8E,EACAC,EAAK2pE,EAAOlzD,WAAa,EACzBkzD,EACA,CACEj1D,MAAO2uC,EAAY3uC,MACnBmJ,UAAWA,EACXC,aAAc,YAKtB,SAAS+sD,GAAepzD,EAAOmD,EAAQwyB,EAAUu4B,GAC/C,MAAM,IAAC/uD,GAAOa,EACd,GAAI21B,EACFx2B,EAAIqE,IAAIxD,EAAMi1B,QAASj1B,EAAMk1B,QAAS/xB,EAAQ,EAAGzc,OAC5C,CACL,IAAIovC,EAAgB91B,EAAMgyD,iBAAiB,EAAG7uD,GAC9ChE,EAAIuE,OAAOoyB,EAAcxtC,EAAGwtC,EAAcvtC,GAC1C,IAAK,IAAI/E,EAAI,EAAGA,EAAI0qE,EAAY1qE,IAC9BsyC,EAAgB91B,EAAMgyD,iBAAiBxuE,EAAG2f,GAC1ChE,EAAIwE,OAAOmyB,EAAcxtC,EAAGwtC,EAAcvtC,IAIhD,SAAS8qE,GAAerzD,EAAOszD,EAAcnwD,EAAQ+qD,GACnD,MAAM/uD,EAAMa,EAAMb,IACZw2B,EAAW29B,EAAa39B,UACxB,MAAC14B,EAAK,UAAE4I,GAAaytD,GACrB39B,IAAau4B,IAAgBjxD,IAAU4I,GAAa1C,EAAS,IAGnEhE,EAAI4C,OACJ5C,EAAIyG,YAAc3I,EAClBkC,EAAI0G,UAAYA,EAChB1G,EAAI2tC,YAAYwmB,EAAat4C,YAC7B7b,EAAI4tC,eAAiBumB,EAAar4C,iBAClC9b,EAAIoE,YACJ6vD,GAAepzD,EAAOmD,EAAQwyB,EAAUu4B,GACxC/uD,EAAIsE,YACJtE,EAAI6E,SACJ7E,EAAIgD,WAEN,SAASoxD,GAAwBhlD,EAAQ9xB,EAAOL,GAC9C,OAAO6sB,GAAcsF,EAAQ,CAC3BnyB,QACAK,QACAS,KAAM,eAhOV,GAAiB+C,GAAK,cACtB,GAAiB8gB,SAAW,CAC1B+pB,MAAO,CACLtqC,SAAUsgD,GAAMV,WAAWozB,YAC3BnyB,MAAO,CACLC,SAAS,KA8Nf,MAAM,WAA0B,GAC9B,YAAY5jB,GACV8P,MAAM9P,GACNx/B,KAAK+2C,aAAUh7C,EACfiE,KAAKg3C,aAAUj7C,EACfiE,KAAK+zE,iBAAch4E,EACnBiE,KAAKyzE,aAAe,GACpBzzE,KAAKq0E,iBAAmB,GAE1B,gBACE,MAAM72B,EAAUx9C,KAAK0nE,SAAW39C,GAAUopD,GAAsBnzE,KAAKjC,SAAW,GAC1E2T,EAAI1R,KAAKZ,MAAQY,KAAK6nB,SAAW21B,EAAQp+C,MACzCgQ,EAAIpP,KAAKV,OAASU,KAAKs2B,UAAYknB,EAAQl+C,OACjDU,KAAK+2C,QAAUxuC,KAAKkB,MAAMzJ,KAAK+D,KAAO2N,EAAI,EAAI8rC,EAAQz5C,MACtD/D,KAAKg3C,QAAUzuC,KAAKkB,MAAMzJ,KAAKmmB,IAAM/W,EAAI,EAAIouC,EAAQr3B,KACrDnmB,KAAK+zE,YAAcxrE,KAAKkB,MAAMlB,KAAKsC,IAAI6G,EAAGtC,GAAK,GAEjD,sBACE,MAAM,IAACvE,EAAG,IAAEC,GAAO9K,KAAKmoD,WAAU,GAClCnoD,KAAK6K,IAAMpG,EAAeoG,KAASV,MAAMU,GAAOA,EAAM,EACtD7K,KAAK8K,IAAMrG,EAAeqG,KAASX,MAAMW,GAAOA,EAAM,EACtD9K,KAAKyyE,yBAEP,mBACE,OAAOlqE,KAAK67C,KAAKpkD,KAAK+zE,YAAcZ,GAAsBnzE,KAAKjC,UAEjE,mBAAmB6uC,GACjB,GAAgB9pC,UAAU2oD,mBAAmBzoD,KAAKhD,KAAM4sC,GACxD5sC,KAAKyzE,aAAezzE,KAAKkpC,YACtB/rC,IAAI,CAACmB,EAAOC,KACX,MAAML,EAAQoE,EAAStC,KAAKjC,QAAQ25C,YAAYp1C,SAAU,CAAChE,EAAOC,GAAQyB,MAC1E,OAAO9B,GAAmB,IAAVA,EAAcA,EAAQ,KAEvC+xB,OAAO,CAAChhB,EAAG3J,IAAMtF,KAAK7D,MAAM00C,kBAAkBvrC,IAEnD,MACE,MAAM8hB,EAAOpnB,KAAKjC,QACdqpB,EAAKowB,SAAWpwB,EAAKswB,YAAYF,QACnC87B,GAAmBtzE,MAEnBA,KAAKo0E,eAAe,EAAG,EAAG,EAAG,GAGjC,eAAemB,EAAcC,EAAeC,EAAaC,GACvD11E,KAAK+2C,SAAWxuC,KAAKkB,OAAO8rE,EAAeC,GAAiB,GAC5Dx1E,KAAKg3C,SAAWzuC,KAAKkB,OAAOgsE,EAAcC,GAAkB,GAC5D11E,KAAK+zE,aAAexrE,KAAKsC,IAAI7K,KAAK+zE,YAAc,EAAGxrE,KAAKuC,IAAIyqE,EAAcC,EAAeC,EAAaC,IAExG,cAAcn3E,GACZ,MAAMo3E,EAAkBntE,GAAOxI,KAAKyzE,aAAar1E,QAAU,GACrD8zC,EAAalyC,KAAKjC,QAAQm0C,YAAc,EAC9C,OAAOhmC,GAAgB3N,EAAQo3E,EAAkB5qE,EAAUmnC,IAE7D,8BAA8B5zC,GAC5B,GAAI+F,EAAc/F,GAChB,OAAOirC,IAET,MAAMqsC,EAAgB51E,KAAK+zE,aAAe/zE,KAAK8K,IAAM9K,KAAK6K,KAC1D,OAAI7K,KAAKjC,QAAQsH,SACPrF,KAAK8K,IAAMxM,GAASs3E,GAEtBt3E,EAAQ0B,KAAK6K,KAAO+qE,EAE9B,8BAA8B/pE,GAC5B,GAAIxH,EAAcwH,GAChB,OAAO09B,IAET,MAAMssC,EAAiBhqE,GAAY7L,KAAK+zE,aAAe/zE,KAAK8K,IAAM9K,KAAK6K,MACvE,OAAO7K,KAAKjC,QAAQsH,QAAUrF,KAAK8K,IAAM+qE,EAAiB71E,KAAK6K,IAAMgrE,EAEvE,qBAAqBt3E,GACnB,MAAMm5C,EAAc13C,KAAKyzE,cAAgB,GACzC,GAAIl1E,GAAS,GAAKA,EAAQm5C,EAAYt5C,OAAQ,CAC5C,MAAM03E,EAAap+B,EAAYn5C,GAC/B,OAAO82E,GAAwBr1E,KAAKmB,aAAc5C,EAAOu3E,IAG7D,iBAAiBv3E,EAAOw3E,EAAoBpC,EAAkB,GAC5D,MAAMhoE,EAAQ3L,KAAKk3C,cAAc34C,GAASsK,EAAU8qE,EACpD,MAAO,CACLvpE,EAAG7B,KAAK0F,IAAItC,GAASoqE,EAAqB/1E,KAAK+2C,QAC/C1sC,EAAG9B,KAAKyE,IAAIrB,GAASoqE,EAAqB/1E,KAAKg3C,QAC/CrrC,SAGJ,yBAAyBpN,EAAOD,GAC9B,OAAO0B,KAAK8zE,iBAAiBv1E,EAAOyB,KAAKs3C,8BAA8Bh5C,IAEzE,gBAAgBC,GACd,OAAOyB,KAAK63C,yBAAyBt5C,GAAS,EAAGyB,KAAKqsD,gBAExD,sBAAsB9tD,GACpB,MAAM,KAACwF,EAAI,IAAEoiB,EAAG,MAAEniB,EAAK,OAAEoiB,GAAUpmB,KAAKq0E,iBAAiB91E,GACzD,MAAO,CACLwF,OACAoiB,MACAniB,QACAoiB,UAGJ,iBACE,MAAM,gBAAC/F,EAAiBsxB,MAAM,SAAC8F,IAAaz3C,KAAKjC,QACjD,GAAIsiB,EAAiB,CACnB,MAAMY,EAAMjhB,KAAKihB,IACjBA,EAAI4C,OACJ5C,EAAIoE,YACJ6vD,GAAel1E,KAAMA,KAAKs3C,8BAA8Bt3C,KAAK6xE,WAAYp6B,EAAUz3C,KAAKyzE,aAAar1E,QACrG6iB,EAAIsE,YACJtE,EAAIgH,UAAY5H,EAChBY,EAAI2E,OACJ3E,EAAIgD,WAGR,WACE,MAAMhD,EAAMjhB,KAAKihB,IACXmG,EAAOpnB,KAAKjC,SACZ,WAACw5C,EAAU,KAAE5F,GAAQvqB,EACrB4oD,EAAahwE,KAAKyzE,aAAar1E,OACrC,IAAIkH,EAAGosC,EAAQmH,EAaf,GAZIzxB,EAAKswB,YAAYF,SACnBq9B,GAAgB70E,KAAMgwE,GAEpBr+B,EAAK6F,SACPx3C,KAAK4sC,MAAM3gB,QAAQ,CAACoS,EAAM9/B,KACxB,GAAc,IAAVA,EAAa,CACfmzC,EAAS1xC,KAAKs3C,8BAA8BjZ,EAAK//B,OACjD,MAAMovD,EAAc/b,EAAK/iB,WAAW5uB,KAAKmB,WAAW5C,EAAQ,IAC5D42E,GAAen1E,KAAM0tD,EAAahc,EAAQs+B,MAI5Cz4B,EAAWC,QAAS,CAEtB,IADAv2B,EAAI4C,OACCve,EAAI0qE,EAAa,EAAG1qE,GAAK,EAAGA,IAAK,CACpC,MAAMooD,EAAcnW,EAAW3oB,WAAW5uB,KAAK6zE,qBAAqBvuE,KAC9D,MAACyZ,EAAK,UAAE4I,GAAa+lC,EACtB/lC,GAAc5I,IAGnBkC,EAAI0G,UAAYA,EAChB1G,EAAIyG,YAAc3I,EAClBkC,EAAI2tC,YAAYlB,EAAY5wB,YAC5B7b,EAAI4tC,eAAiBnB,EAAY3wB,iBACjC2U,EAAS1xC,KAAKs3C,8BAA8BlwB,EAAKwlB,MAAMvnC,QAAUrF,KAAK6K,IAAM7K,KAAK8K,KACjF+tC,EAAW74C,KAAK8zE,iBAAiBxuE,EAAGosC,GACpCzwB,EAAIoE,YACJpE,EAAIuE,OAAOxlB,KAAK+2C,QAAS/2C,KAAKg3C,SAC9B/1B,EAAIwE,OAAOozB,EAASzuC,EAAGyuC,EAASxuC,GAChC4W,EAAI6E,UAEN7E,EAAIgD,WAGR,cACA,aACE,MAAMhD,EAAMjhB,KAAKihB,IACXmG,EAAOpnB,KAAKjC,QACZ+kD,EAAW17B,EAAKwlB,MACtB,IAAKkW,EAAStL,QACZ,OAEF,MAAMtF,EAAalyC,KAAKk3C,cAAc,GACtC,IAAIxF,EAAQtyC,EACZ6hB,EAAI4C,OACJ5C,EAAIkE,UAAUnlB,KAAK+2C,QAAS/2C,KAAKg3C,SACjC/1B,EAAI1O,OAAO2/B,GACXjxB,EAAIiH,UAAY,SAChBjH,EAAIkH,aAAe,SACnBnoB,KAAK4sC,MAAM3gB,QAAQ,CAACoS,EAAM9/B,KACxB,GAAc,IAAVA,IAAgB6oB,EAAK/hB,QACvB,OAEF,MAAMqoD,EAAc5K,EAASl0B,WAAW5uB,KAAKmB,WAAW5C,IAClDstD,EAAW7hC,GAAO0jC,EAAY9sC,MAEpC,GADA8wB,EAAS1xC,KAAKs3C,8BAA8Bt3C,KAAK4sC,MAAMruC,GAAOD,OAC1DovD,EAAYnI,kBAAmB,CACjCtkC,EAAIL,KAAOirC,EAASvoC,OACpBlkB,EAAQ6hB,EAAIuC,YAAY6a,EAAKngC,OAAOkB,MACpC6hB,EAAIgH,UAAYylC,EAAYlI,cAC5B,MAAMhI,EAAUzzB,GAAU2jC,EAAYjI,iBACtCxkC,EAAIutC,UACDpvD,EAAQ,EAAIo+C,EAAQz5C,MACpB2tC,EAASma,EAAS5jD,KAAO,EAAIu1C,EAAQr3B,IACtC/mB,EAAQo+C,EAAQp+C,MAChBysD,EAAS5jD,KAAOu1C,EAAQl+C,QAG5B4nB,GAAWjG,EAAKod,EAAKngC,MAAO,GAAIwzC,EAAQma,EAAU,CAChD9sC,MAAO2uC,EAAY3uC,UAGvBkC,EAAIgD,UAEN,cAEF,GAAkBliB,GAAK,eACvB,GAAkB8gB,SAAW,CAC3B20B,SAAS,EACTw+B,SAAS,EACTn9B,SAAU,YACVtB,WAAY,CACVC,SAAS,EACT7vB,UAAW,EACXmV,WAAY,GACZC,iBAAkB,GAEpB4U,KAAM,CACJ8F,UAAU,GAEZvF,WAAY,EACZtF,MAAO,CACL2Y,mBAAmB,EACnBjjD,SAAUsgD,GAAMV,WAAWS,SAE7BjL,YAAa,CACX8N,mBAAezpD,EACf0pD,gBAAiB,EACjBjO,SAAS,EACT52B,KAAM,CACJ3Y,KAAM,IAER,SAAS/J,GACP,OAAOA,GAETs/C,QAAS,EACTo2B,mBAAmB,IAGvB,GAAkB3xB,cAAgB,CAChC,mBAAoB,cACpB,oBAAqB,QACrB,cAAe,SAEjB,GAAkBvyB,YAAc,CAC9B6nB,WAAY,CACVt0B,UAAW,SAIf,MAAMgzD,GAAY,CAChBC,YAAa,CAACC,QAAQ,EAAMluE,KAAM,EAAGmuE,MAAO,KAC5CC,OAAQ,CAACF,QAAQ,EAAMluE,KAAM,IAAMmuE,MAAO,IAC1CE,OAAQ,CAACH,QAAQ,EAAMluE,KAAM,IAAOmuE,MAAO,IAC3CG,KAAM,CAACJ,QAAQ,EAAMluE,KAAM,KAASmuE,MAAO,IAC3CI,IAAK,CAACL,QAAQ,EAAMluE,KAAM,MAAUmuE,MAAO,IAC3CK,KAAM,CAACN,QAAQ,EAAOluE,KAAM,OAAWmuE,MAAO,GAC9CM,MAAO,CAACP,QAAQ,EAAMluE,KAAM,OAASmuE,MAAO,IAC5CO,QAAS,CAACR,QAAQ,EAAOluE,KAAM,OAASmuE,MAAO,GAC/CQ,KAAM,CAACT,QAAQ,EAAMluE,KAAM,SAEvB4uE,GAASn5E,OAAO2D,KAAK40E,IAC3B,SAASa,GAAO/uE,EAAGC,GACjB,OAAOD,EAAIC,EAEb,SAASmpB,GAAMrP,EAAOpD,GACpB,GAAIra,EAAcqa,GAChB,OAAO,KAET,MAAMq4D,EAAUj1D,EAAMk1D,UAChB,OAACC,EAAM,MAAE5tE,EAAK,WAAE6tE,GAAcp1D,EAAMq1D,WAC1C,IAAI74E,EAAQogB,EASZ,MARsB,oBAAXu4D,IACT34E,EAAQ24E,EAAO34E,IAEZmG,EAAenG,KAClBA,EAA0B,kBAAX24E,EACXF,EAAQ5lD,MAAM7yB,EAAO24E,GACrBF,EAAQ5lD,MAAM7yB,IAEN,OAAVA,EACK,MAEL+K,IACF/K,EAAkB,SAAV+K,IAAqBY,EAASitE,KAA8B,IAAfA,EAEjDH,EAAQK,QAAQ94E,EAAO+K,GADvB0tE,EAAQK,QAAQ94E,EAAO,UAAW44E,KAGhC54E,GAEV,SAAS+4E,GAA0BC,EAASzsE,EAAKC,EAAKysE,GACpD,MAAM5xE,EAAOkxE,GAAMz4E,OACnB,IAAK,IAAIkH,EAAIuxE,GAAMtwE,QAAQ+wE,GAAUhyE,EAAIK,EAAO,IAAKL,EAAG,CACtD,MAAMkyE,EAAWvB,GAAUY,GAAMvxE,IAC3B85B,EAASo4C,EAASpB,MAAQoB,EAASpB,MAAQ/2E,OAAO6yE,iBACxD,GAAIsF,EAASrB,QAAU5tE,KAAK67C,MAAMt5C,EAAMD,IAAQu0B,EAASo4C,EAASvvE,QAAUsvE,EAC1E,OAAOV,GAAMvxE,GAGjB,OAAOuxE,GAAMlxE,EAAO,GAEtB,SAAS8xE,GAA2B31D,EAAOooC,EAAUotB,EAASzsE,EAAKC,GACjE,IAAK,IAAIxF,EAAIuxE,GAAMz4E,OAAS,EAAGkH,GAAKuxE,GAAMtwE,QAAQ+wE,GAAUhyE,IAAK,CAC/D,MAAM4yC,EAAO2+B,GAAMvxE,GACnB,GAAI2wE,GAAU/9B,GAAMi+B,QAAUr0D,EAAMk1D,SAASzyB,KAAKz5C,EAAKD,EAAKqtC,IAASgS,EAAW,EAC9E,OAAOhS,EAGX,OAAO2+B,GAAMS,EAAUT,GAAMtwE,QAAQ+wE,GAAW,GAElD,SAASI,GAAmBx/B,GAC1B,IAAK,IAAI5yC,EAAIuxE,GAAMtwE,QAAQ2xC,GAAQ,EAAGvyC,EAAOkxE,GAAMz4E,OAAQkH,EAAIK,IAAQL,EACrE,GAAI2wE,GAAUY,GAAMvxE,IAAI6wE,OACtB,OAAOU,GAAMvxE,GAInB,SAASqyE,GAAQ/qC,EAAOgrC,EAAMC,GAC5B,GAAKA,GAEE,GAAIA,EAAWz5E,OAAQ,CAC5B,MAAM,GAACktB,EAAE,GAAED,GAAMJ,GAAQ4sD,EAAYD,GAC/B5/B,EAAY6/B,EAAWvsD,IAAOssD,EAAOC,EAAWvsD,GAAMusD,EAAWxsD,GACvEuhB,EAAMoL,IAAa,QAJnBpL,EAAMgrC,IAAQ,EAOlB,SAASE,GAAch2D,EAAO8qB,EAAOzvC,EAAK46E,GACxC,MAAMhB,EAAUj1D,EAAMk1D,SAChBzzB,GAASwzB,EAAQK,QAAQxqC,EAAM,GAAGtuC,MAAOy5E,GACzCx8C,EAAOqR,EAAMA,EAAMxuC,OAAS,GAAGE,MACrC,IAAI6kD,EAAO5kD,EACX,IAAK4kD,EAAQI,EAAOJ,GAAS5nB,EAAM4nB,GAAS4zB,EAAQjsD,IAAIq4B,EAAO,EAAG40B,GAChEx5E,EAAQpB,EAAIgmD,GACR5kD,GAAS,IACXquC,EAAMruC,GAAO4kD,OAAQ,GAGzB,OAAOvW,EAET,SAASorC,GAAoBl2D,EAAO7B,EAAQ83D,GAC1C,MAAMnrC,EAAQ,GACRzvC,EAAM,GACNwI,EAAOsa,EAAO7hB,OACpB,IAAIkH,EAAGhH,EACP,IAAKgH,EAAI,EAAGA,EAAIK,IAAQL,EACtBhH,EAAQ2hB,EAAO3a,GACfnI,EAAImB,GAASgH,EACbsnC,EAAMnvC,KAAK,CACTa,QACA6kD,OAAO,IAGX,OAAiB,IAATx9C,GAAeoyE,EAAqBD,GAAch2D,EAAO8qB,EAAOzvC,EAAK46E,GAAzCnrC,EAEtC,MAAM,WAAkB,GACtB,YAAY7tC,GACVuwC,MAAMvwC,GACNiB,KAAKksC,OAAS,CACZxvC,KAAM,GACNG,OAAQ,GACRqlC,IAAK,IAEPliC,KAAKi4E,MAAQ,MACbj4E,KAAKk4E,gBAAan8E,EAClBiE,KAAKm4E,SAAW,GAChBn4E,KAAKo4E,aAAc,EACnBp4E,KAAKm3E,gBAAap7E,EAEpB,KAAK+7D,EAAW1wC,GACd,MAAMwwD,EAAO9f,EAAU8f,OAAS9f,EAAU8f,KAAO,IAC3Cb,EAAU/2E,KAAKg3E,SAAW,IAAI3+B,GAASC,MAAMwf,EAAUzf,SAAS/a,MACtEx2B,EAAQ8wE,EAAKS,eAAgBtB,EAAQuB,WACrCt4E,KAAKm3E,WAAa,CAChBF,OAAQW,EAAKX,OACb5tE,MAAOuuE,EAAKvuE,MACZ6tE,WAAYU,EAAKV,YAEnB5nC,MAAMgpB,KAAKR,GACX93D,KAAKo4E,YAAchxD,EAAKmxD,WAE1B,MAAMjzC,EAAK/mC,GACT,YAAYxC,IAARupC,EACK,KAEFnU,GAAMnxB,KAAMslC,GAErB,eACEgK,MAAM0O,eACNh+C,KAAKksC,OAAS,CACZxvC,KAAM,GACNG,OAAQ,GACRqlC,IAAK,IAGT,sBACE,MAAMnkC,EAAUiC,KAAKjC,QACfg5E,EAAU/2E,KAAKg3E,SACf9+B,EAAOn6C,EAAQ65E,KAAK1/B,MAAQ,MAClC,IAAI,IAACrtC,EAAG,IAAEC,EAAG,WAAE64B,EAAU,WAAEC,GAAc5jC,KAAK0jC,gBAC9C,SAAS80C,EAAaj+C,GACfoJ,GAAex5B,MAAMowB,EAAO1vB,OAC/BA,EAAMtC,KAAKsC,IAAIA,EAAK0vB,EAAO1vB,MAExB+4B,GAAez5B,MAAMowB,EAAOzvB,OAC/BA,EAAMvC,KAAKuC,IAAIA,EAAKyvB,EAAOzvB,MAG1B64B,GAAeC,IAClB40C,EAAax4E,KAAKy4E,mBACK,UAAnB16E,EAAQw8B,QAA+C,WAAzBx8B,EAAQ6uC,MAAM5mC,QAC9CwyE,EAAax4E,KAAKmoD,WAAU,KAGhCt9C,EAAMpG,EAAeoG,KAASV,MAAMU,GAAOA,GAAOksE,EAAQK,QAAQt5C,KAAKC,MAAOma,GAC9EptC,EAAMrG,EAAeqG,KAASX,MAAMW,GAAOA,GAAOisE,EAAQ2B,MAAM56C,KAAKC,MAAOma,GAAQ,EACpFl4C,KAAK6K,IAAMtC,KAAKsC,IAAIA,EAAKC,EAAM,GAC/B9K,KAAK8K,IAAMvC,KAAKuC,IAAID,EAAM,EAAGC,GAE/B,kBACE,MAAMklB,EAAMhwB,KAAK24E,qBACjB,IAAI9tE,EAAMxL,OAAOsJ,kBACbmC,EAAMzL,OAAOwkC,kBAKjB,OAJI7T,EAAI5xB,SACNyM,EAAMmlB,EAAI,GACVllB,EAAMklB,EAAIA,EAAI5xB,OAAS,IAElB,CAACyM,MAAKC,OAEf,aACE,MAAM/M,EAAUiC,KAAKjC,QACf66E,EAAW76E,EAAQ65E,KACnB90B,EAAW/kD,EAAQ6uC,MACnBirC,EAAiC,WAApB/0B,EAAS98C,OAAsBhG,KAAK24E,qBAAuB34E,KAAK64E,YAC5D,UAAnB96E,EAAQw8B,QAAsBs9C,EAAWz5E,SAC3C4B,KAAK6K,IAAM7K,KAAK0nD,UAAYmwB,EAAW,GACvC73E,KAAK8K,IAAM9K,KAAKynD,UAAYowB,EAAWA,EAAWz5E,OAAS,IAE7D,MAAMyM,EAAM7K,KAAK6K,IACXC,EAAM9K,KAAK8K,IACX8hC,EAAQnhB,GAAeosD,EAAYhtE,EAAKC,GAU9C,OATA9K,KAAKi4E,MAAQW,EAAS1gC,OAAS4K,EAASD,SACpCw0B,GAA0BuB,EAAStB,QAASt3E,KAAK6K,IAAK7K,KAAK8K,IAAK9K,KAAK84E,kBAAkBjuE,IACvF4sE,GAA2Bz3E,KAAM4sC,EAAMxuC,OAAQw6E,EAAStB,QAASt3E,KAAK6K,IAAK7K,KAAK8K,MACpF9K,KAAKk4E,WAAcp1B,EAASK,MAAMC,SAA0B,SAAfpjD,KAAKi4E,MAC9CP,GAAmB13E,KAAKi4E,YADyCl8E,EAErEiE,KAAK+4E,YAAYlB,GACb95E,EAAQsH,SACVunC,EAAMvnC,UAED2yE,GAAoBh4E,KAAM4sC,EAAO5sC,KAAKk4E,YAE/C,gBACMl4E,KAAKjC,QAAQi7E,qBACfh5E,KAAK+4E,YAAY/4E,KAAK4sC,MAAMzvC,IAAIkhC,IAASA,EAAK//B,QAGlD,YAAYu5E,GACV,IAEIt0B,EAAOhoB,EAFP33B,EAAQ,EACRC,EAAM,EAEN7D,KAAKjC,QAAQ2zC,QAAUmmC,EAAWz5E,SACpCmlD,EAAQvjD,KAAKi5E,mBAAmBpB,EAAW,IAEzCj0E,EADwB,IAAtBi0E,EAAWz5E,OACL,EAAImlD,GAEHvjD,KAAKi5E,mBAAmBpB,EAAW,IAAMt0B,GAAS,EAE7DhoB,EAAOv7B,KAAKi5E,mBAAmBpB,EAAWA,EAAWz5E,OAAS,IAE5DyF,EADwB,IAAtBg0E,EAAWz5E,OACPm9B,GAECA,EAAOv7B,KAAKi5E,mBAAmBpB,EAAWA,EAAWz5E,OAAS,KAAO,GAGhF,MAAMovD,EAAQqqB,EAAWz5E,OAAS,EAAI,GAAM,IAC5CwF,EAAQ8I,GAAY9I,EAAO,EAAG4pD,GAC9B3pD,EAAM6I,GAAY7I,EAAK,EAAG2pD,GAC1BxtD,KAAKm4E,SAAW,CAACv0E,QAAOC,MAAKu7B,OAAQ,GAAKx7B,EAAQ,EAAIC,IAExD,YACE,MAAMkzE,EAAU/2E,KAAKg3E,SACfnsE,EAAM7K,KAAK6K,IACXC,EAAM9K,KAAK8K,IACX/M,EAAUiC,KAAKjC,QACf66E,EAAW76E,EAAQ65E,KACnBvyB,EAAQuzB,EAAS1gC,MAAQm/B,GAA0BuB,EAAStB,QAASzsE,EAAKC,EAAK9K,KAAK84E,kBAAkBjuE,IACtGunE,EAAWvtE,EAAe+zE,EAASxG,SAAU,GAC7Cj6B,EAAoB,SAAVkN,GAAmBuzB,EAAS1B,WACtCgC,EAAajvE,EAASkuC,KAAwB,IAAZA,EAClCvL,EAAQ,GACd,IACIgrC,EAAM7mD,EADNwyB,EAAQ14C,EAMZ,GAJIquE,IACF31B,GAASwzB,EAAQK,QAAQ7zB,EAAO,UAAWpL,IAE7CoL,GAASwzB,EAAQK,QAAQ7zB,EAAO21B,EAAa,MAAQ7zB,GACjD0xB,EAAQxyB,KAAKz5C,EAAKD,EAAKw6C,GAAS,IAAS+sB,EAC3C,MAAM,IAAInxE,MAAM4J,EAAM,QAAUC,EAAM,uCAAyCsnE,EAAW,IAAM/sB,GAElG,MAAMwyB,EAAsC,SAAzB95E,EAAQ6uC,MAAM5mC,QAAqBhG,KAAKm5E,oBAC3D,IAAKvB,EAAOr0B,EAAOxyB,EAAQ,EAAG6mD,EAAO9sE,EAAK8sE,GAAQb,EAAQjsD,IAAI8sD,EAAMxF,EAAU/sB,GAAQt0B,IACpF4mD,GAAQ/qC,EAAOgrC,EAAMC,GAKvB,OAHID,IAAS9sE,GAA0B,UAAnB/M,EAAQw8B,QAAgC,IAAVxJ,GAChD4mD,GAAQ/qC,EAAOgrC,EAAMC,GAEhBn6E,OAAO2D,KAAKurC,GAAO7iC,KAAK,CAAChC,EAAGC,IAAMD,EAAIC,GAAG7K,IAAIiN,IAAMA,GAE5D,iBAAiB9L,GACf,MAAMy4E,EAAU/2E,KAAKg3E,SACf4B,EAAW54E,KAAKjC,QAAQ65E,KAC9B,OAAIgB,EAASQ,cACJrC,EAAQ79C,OAAO56B,EAAOs6E,EAASQ,eAEjCrC,EAAQ79C,OAAO56B,EAAOs6E,EAASP,eAAegB,UAEvD,oBAAoBzB,EAAMr5E,EAAOquC,EAAO1T,GACtC,MAAMn7B,EAAUiC,KAAKjC,QACfu6E,EAAUv6E,EAAQ65E,KAAKS,eACvBngC,EAAOl4C,KAAKi4E,MACZF,EAAY/3E,KAAKk4E,WACjBoB,EAAcphC,GAAQogC,EAAQpgC,GAC9BqhC,EAAcxB,GAAaO,EAAQP,GACnC15C,EAAOuO,EAAMruC,GACb4kD,EAAQ40B,GAAawB,GAAel7C,GAAQA,EAAK8kB,MACjDjlD,EAAQ8B,KAAKg3E,SAAS99C,OAAO0+C,EAAM1+C,IAAWiqB,EAAQo2B,EAAcD,IACpE1gD,EAAY76B,EAAQ6uC,MAAMtqC,SAChC,OAAOs2B,EAAYt2B,EAASs2B,EAAW,CAAC16B,EAAOK,EAAOquC,GAAQ5sC,MAAQ9B,EAExE,mBAAmB0uC,GACjB,IAAItnC,EAAGK,EAAM04B,EACb,IAAK/4B,EAAI,EAAGK,EAAOinC,EAAMxuC,OAAQkH,EAAIK,IAAQL,EAC3C+4B,EAAOuO,EAAMtnC,GACb+4B,EAAKngC,MAAQ8B,KAAKw5E,oBAAoBn7C,EAAK//B,MAAOgH,EAAGsnC,GAGzD,mBAAmBtuC,GACjB,OAAiB,OAAVA,EAAiBirC,KAAOjrC,EAAQ0B,KAAK6K,MAAQ7K,KAAK8K,IAAM9K,KAAK6K,KAEtE,iBAAiBvM,GACf,MAAMm7E,EAAUz5E,KAAKm4E,SACf5wE,EAAMvH,KAAKi5E,mBAAmB36E,GACpC,OAAO0B,KAAK+wC,oBAAoB0oC,EAAQ71E,MAAQ2D,GAAOkyE,EAAQr6C,QAEjE,iBAAiB/a,GACf,MAAMo1D,EAAUz5E,KAAKm4E,SACf5wE,EAAMvH,KAAK0wE,mBAAmBrsD,GAASo1D,EAAQr6C,OAASq6C,EAAQ51E,IACtE,OAAO7D,KAAK6K,IAAMtD,GAAOvH,KAAK8K,IAAM9K,KAAK6K,KAE3C,cAAc3M,GACZ,MAAMw7E,EAAY15E,KAAKjC,QAAQ6uC,MACzB+sC,EAAiB35E,KAAKihB,IAAIuC,YAAYtlB,GAAOkB,MAC7CuM,EAAQZ,EAAU/K,KAAKsuC,eAAiBorC,EAAU30B,YAAc20B,EAAU50B,aAC1E80B,EAAcrxE,KAAK0F,IAAItC,GACvBkuE,EAActxE,KAAKyE,IAAIrB,GACvBmuE,EAAe95E,KAAKksD,wBAAwB,GAAGjkD,KACrD,MAAO,CACLyJ,EAAIioE,EAAiBC,EAAgBE,EAAeD,EACpDzqE,EAAIuqE,EAAiBE,EAAgBC,EAAeF,GAGxD,kBAAkBG,GAChB,MAAMnB,EAAW54E,KAAKjC,QAAQ65E,KACxBS,EAAiBO,EAASP,eAC1Bn/C,EAASm/C,EAAeO,EAAS1gC,OAASmgC,EAAenC,YACzD8D,EAAeh6E,KAAKw5E,oBAAoBO,EAAa,EAAG/B,GAAoBh4E,KAAM,CAAC+5E,GAAc/5E,KAAKk4E,YAAah/C,GACnHjxB,EAAOjI,KAAKi6E,cAAcD,GAC1BzC,EAAWhvE,KAAKkB,MAAMzJ,KAAKsuC,eAAiBtuC,KAAKZ,MAAQ6I,EAAKyJ,EAAI1R,KAAKV,OAAS2I,EAAKmH,GAAK,EAChG,OAAOmoE,EAAW,EAAIA,EAAW,EAEnC,oBACE,IACIjyE,EAAGK,EADHkyE,EAAa73E,KAAKksC,OAAOxvC,MAAQ,GAErC,GAAIm7E,EAAWz5E,OACb,OAAOy5E,EAET,MAAM3vB,EAAQloD,KAAKskC,0BACnB,GAAItkC,KAAKo4E,aAAelwB,EAAM9pD,OAC5B,OAAQ4B,KAAKksC,OAAOxvC,KAAOwrD,EAAM,GAAG1jB,WAAW8H,mBAAmBtsC,MAEpE,IAAKsF,EAAI,EAAGK,EAAOuiD,EAAM9pD,OAAQkH,EAAIK,IAAQL,EAC3CuyE,EAAaA,EAAWxrC,OAAO6b,EAAM5iD,GAAGk/B,WAAW8H,mBAAmBtsC,OAExE,OAAQA,KAAKksC,OAAOxvC,KAAOsD,KAAKm6B,UAAU09C,GAE5C,qBACE,MAAMA,EAAa73E,KAAKksC,OAAOrvC,QAAU,GACzC,IAAIyI,EAAGK,EACP,GAAIkyE,EAAWz5E,OACb,OAAOy5E,EAET,MAAMh7E,EAASmD,KAAKkpC,YACpB,IAAK5jC,EAAI,EAAGK,EAAO9I,EAAOuB,OAAQkH,EAAIK,IAAQL,EAC5CuyE,EAAWp6E,KAAK0zB,GAAMnxB,KAAMnD,EAAOyI,KAErC,OAAQtF,KAAKksC,OAAOrvC,OAASmD,KAAKo4E,YAAcP,EAAa73E,KAAKm6B,UAAU09C,GAE9E,UAAU53D,GACR,OAAOuM,GAAavM,EAAOlW,KAAK+sE,MAuBpC,SAAS,GAAY5rD,EAAO7L,EAAKha,GAC/B,IAEI60E,EAAYC,EAAYC,EAAYC,EAFpC/uD,EAAK,EACLD,EAAKH,EAAM9sB,OAAS,EAEpBiH,GACEga,GAAO6L,EAAMI,GAAI/jB,KAAO8X,GAAO6L,EAAMG,GAAI9jB,OACzC+jB,KAAID,MAAME,GAAaL,EAAO,MAAO7L,MAEvC9X,IAAK2yE,EAAYtC,KAAMwC,GAAclvD,EAAMI,MAC3C/jB,IAAK4yE,EAAYvC,KAAMyC,GAAcnvD,EAAMG,MAEzChM,GAAO6L,EAAMI,GAAIssD,MAAQv4D,GAAO6L,EAAMG,GAAIusD,QAC1CtsD,KAAID,MAAME,GAAaL,EAAO,OAAQ7L,MAExCu4D,KAAMsC,EAAY3yE,IAAK6yE,GAAclvD,EAAMI,MAC3CssD,KAAMuC,EAAY5yE,IAAK8yE,GAAcnvD,EAAMG,KAE/C,MAAMivD,EAAOH,EAAaD,EAC1B,OAAOI,EAAOF,GAAcC,EAAaD,IAAe/6D,EAAM66D,GAAcI,EAAOF,EAtCrF,GAAUr4E,GAAK,OACf,GAAU8gB,SAAW,CACnB0X,OAAQ,OACR8d,SAAU,GACVu/B,KAAM,CACJX,QAAQ,EACR/+B,MAAM,EACN7uC,OAAO,EACP6tE,YAAY,EACZI,QAAS,cACTe,eAAgB,IAElBzrC,MAAO,CACL5mC,OAAQ,OACRm9C,MAAO,CACLC,SAAS,KAyBf,MAAMm3B,WAAwB,GAC5B,YAAYx7E,GACVuwC,MAAMvwC,GACNiB,KAAKw6E,OAAS,GACdx6E,KAAKy6E,aAAU1+E,EACfiE,KAAK06E,iBAAc3+E,EAErB,cACE,MAAM87E,EAAa73E,KAAK26E,yBAClBzvD,EAAQlrB,KAAKw6E,OAASx6E,KAAK46E,iBAAiB/C,GAClD73E,KAAKy6E,QAAU,GAAYvvD,EAAOlrB,KAAK6K,KACvC7K,KAAK06E,YAAc,GAAYxvD,EAAOlrB,KAAK8K,KAAO9K,KAAKy6E,QACvDnrC,MAAMypC,YAAYlB,GAEpB,iBAAiBA,GACf,MAAM,IAAChtE,EAAG,IAAEC,GAAO9K,KACbysB,EAAQ,GACRvB,EAAQ,GACd,IAAI5lB,EAAGK,EAAMsuB,EAAMuY,EAAM3a,EACzB,IAAKvsB,EAAI,EAAGK,EAAOkyE,EAAWz5E,OAAQkH,EAAIK,IAAQL,EAChDknC,EAAOqrC,EAAWvyE,GACdknC,GAAQ3hC,GAAO2hC,GAAQ1hC,GACzB2hB,EAAMhvB,KAAK+uC,GAGf,GAAI/f,EAAMruB,OAAS,EACjB,MAAO,CACL,CAACw5E,KAAM/sE,EAAKtD,IAAK,GACjB,CAACqwE,KAAM9sE,EAAKvD,IAAK,IAGrB,IAAKjC,EAAI,EAAGK,EAAO8mB,EAAMruB,OAAQkH,EAAIK,IAAQL,EAC3CusB,EAAOpF,EAAMnnB,EAAI,GACjB2uB,EAAOxH,EAAMnnB,EAAI,GACjBknC,EAAO/f,EAAMnnB,GACTiD,KAAKc,OAAOwoB,EAAOoC,GAAQ,KAAOuY,GACpCthB,EAAMztB,KAAK,CAACm6E,KAAMprC,EAAMjlC,IAAKjC,GAAKK,EAAO,KAG7C,OAAOulB,EAET,yBACE,IAAI2sD,EAAa73E,KAAKksC,OAAOhK,KAAO,GACpC,GAAI21C,EAAWz5E,OACb,OAAOy5E,EAET,MAAMn7E,EAAOsD,KAAKm5E,oBACZj7E,EAAQ8B,KAAK24E,qBAOnB,OALEd,EADEn7E,EAAK0B,QAAUF,EAAME,OACV4B,KAAKm6B,UAAUz9B,EAAK2vC,OAAOnuC,IAE3BxB,EAAK0B,OAAS1B,EAAOwB,EAEpC25E,EAAa73E,KAAKksC,OAAOhK,IAAM21C,EACxBA,EAET,mBAAmBv5E,GACjB,OAAQ,GAAY0B,KAAKw6E,OAAQl8E,GAAS0B,KAAKy6E,SAAWz6E,KAAK06E,YAEjE,iBAAiBr2D,GACf,MAAMo1D,EAAUz5E,KAAKm4E,SACf/rB,EAAUpsD,KAAK0wE,mBAAmBrsD,GAASo1D,EAAQr6C,OAASq6C,EAAQ51E,IAC1E,OAAO,GAAY7D,KAAKw6E,OAAQpuB,EAAUpsD,KAAK06E,YAAc16E,KAAKy6E,SAAS,IAG/EF,GAAgBx4E,GAAK,aACrBw4E,GAAgB13D,SAAW,GAAUA","file":"js/chunk-67736396.475d6f66.js","sourcesContent":["import { Chart, BarController, DoughnutController, LineController, PieController, PolarAreaController, RadarController, BubbleController, ScatterController } from 'chart.js';\n\nvar ChartEmits;\n(function(ChartEmits) {\n    ChartEmits[\"ChartRendered\"] = \"chart:rendered\";\n    ChartEmits[\"ChartUpdated\"] = \"chart:updated\";\n    ChartEmits[\"ChartDestroyed\"] = \"chart:destroyed\";\n    ChartEmits[\"LabelsUpdated\"] = \"labels:updated\";\n})(ChartEmits || (ChartEmits = {}));\nfunction chartCreate(createChartFunction, chartData, chartOptions, context) {\n    createChartFunction(chartData, chartOptions);\n    if (context !== undefined) {\n        context.emit(ChartEmits.ChartRendered);\n    }\n}\nfunction chartUpdate(chart, context) {\n    chart.update();\n    if (context !== undefined) {\n        context.emit(ChartEmits.ChartUpdated);\n    }\n}\nfunction chartDestroy(chart, context) {\n    chart.destroy();\n    if (context !== undefined) {\n        context.emit(ChartEmits.ChartDestroyed);\n    }\n}\nfunction getChartData(data, datasetIdKey) {\n    const nextData = {\n        labels: typeof data.labels === \"undefined\" ? [] : [\n            ...data.labels\n        ],\n        datasets: []\n    };\n    setChartDatasets(nextData, {\n        ...data\n    }, datasetIdKey);\n    return nextData;\n}\nfunction setChartDatasets(oldData, newData, datasetIdKey) {\n    const addedDatasets = [];\n    oldData.datasets = newData.datasets.map((nextDataset)=>{\n        // given the new set, find it's current match\n        const currentDataset = oldData.datasets.find((dataset)=>dataset[datasetIdKey] === nextDataset[datasetIdKey]\n        );\n        // There is no original to update, so simply add new one\n        if (!currentDataset || !nextDataset.data || addedDatasets.includes(currentDataset)) {\n            return {\n                ...nextDataset\n            };\n        }\n        addedDatasets.push(currentDataset);\n        Object.assign(currentDataset, nextDataset);\n        return currentDataset;\n    });\n}\nfunction setChartLabels(chart, labels, context) {\n    chart.data.labels = labels;\n    if (context !== undefined) {\n        context.emit(ChartEmits.LabelsUpdated);\n    }\n}\nfunction setChartOptions(chart, options) {\n    chart.options = {\n        ...options\n    };\n}\nfunction compareData(newData, oldData) {\n    // Get new and old DataSet Labels\n    const newDatasetLabels = newData.datasets.map((dataset)=>{\n        return dataset.label;\n    });\n    const oldDatasetLabels = oldData.datasets.map((dataset)=>{\n        return dataset.label;\n    });\n    // Check if Labels are equal and if dataset length is equal\n    return oldData.datasets.length === newData.datasets.length && newDatasetLabels.every((value, index)=>value === oldDatasetLabels[index]\n    );\n}\nconst templateError = \"Please remove the <template></template> tags from your chart component. See https://vue-chartjs.org/guide/#vue-single-file-components\";\n\nconst ANNOTATION_PLUGIN_KEY = \"annotation\";\nfunction generateChart(chartId, chartType, chartController) {\n    let _chartRef = null;\n    return {\n        props: {\n            chartData: {\n                type: Object,\n                required: true\n            },\n            chartOptions: {\n                type: Object,\n                default: ()=>{}\n            },\n            datasetIdKey: {\n                type: String,\n                default: \"label\"\n            },\n            chartId: {\n                type: String,\n                default: chartId\n            },\n            width: {\n                type: Number,\n                default: 400\n            },\n            height: {\n                type: Number,\n                default: 400\n            },\n            cssClasses: {\n                type: String,\n                default: \"\"\n            },\n            styles: {\n                type: Object,\n                default: ()=>{}\n            },\n            plugins: {\n                type: Array,\n                default: ()=>[]\n            }\n        },\n        data () {\n            return {\n                _chart: null\n            };\n        },\n        computed: {\n            hasAnnotationPlugin () {\n                var ref, ref1;\n                const pluginSettings = (ref = this.chartOptions) === null || ref === void 0 ? void 0 : (ref1 = ref.plugins) === null || ref1 === void 0 ? void 0 : ref1[ANNOTATION_PLUGIN_KEY];\n                return typeof pluginSettings !== \"undefined\";\n            }\n        },\n        created () {\n            Chart.register(chartController);\n        },\n        mounted () {\n            _chartRef = {\n                current: null\n            };\n            if (\"datasets\" in this.chartData && this.chartData.datasets.length > 0) {\n                chartCreate(this.renderChart, this.chartData, this.chartOptions);\n                this.$emit(ChartEmits.ChartRendered);\n            }\n        },\n        watch: {\n            chartData: {\n                handler: function(newValue, oldValue) {\n                    this.chartDataHandler(newValue, oldValue);\n                },\n                deep: true\n            },\n            chartOptions: {\n                handler: function(newValue) {\n                    this.chartOptionsHandler(newValue);\n                },\n                deep: true\n            }\n        },\n        methods: {\n            renderChart (data, options) {\n                const currentChart = this.getCurrentChart();\n                if (currentChart !== null) {\n                    chartDestroy(currentChart);\n                    this.$emit(ChartEmits.ChartDestroyed);\n                }\n                if (!this.$refs.canvas) {\n                    throw new Error(templateError);\n                } else {\n                    const chartData = getChartData(data, this.datasetIdKey);\n                    const canvasEl2DContext = this.$refs.canvas.getContext(\"2d\");\n                    if (canvasEl2DContext !== null) {\n                        this.setCurrentChart(new Chart(canvasEl2DContext, {\n                            type: chartType,\n                            data: chartData,\n                            options,\n                            plugins: this.plugins\n                        }));\n                    }\n                }\n            },\n            chartDataHandler (newValue, oldValue) {\n                const newData = {\n                    ...newValue\n                };\n                const oldData = {\n                    ...oldValue\n                };\n                const currentChart = this.getCurrentChart();\n                if (Object.keys(oldData).length > 0) {\n                    const isEqualLabelsAndDatasetsLength = compareData(newData, oldData);\n                    if (isEqualLabelsAndDatasetsLength && currentChart !== null) {\n                        setChartDatasets(currentChart.data, newData, this.datasetIdKey);\n                        if (newData.labels !== undefined) {\n                            setChartLabels(currentChart, newData.labels);\n                            this.$emit(ChartEmits.LabelsUpdated);\n                        }\n                        this.updateChart();\n                        this.$emit(ChartEmits.ChartUpdated);\n                    } else {\n                        if (currentChart !== null) {\n                            chartDestroy(currentChart);\n                            this.$emit(ChartEmits.ChartDestroyed);\n                        }\n                        chartCreate(this.renderChart, this.chartData, this.chartOptions);\n                        this.$emit(ChartEmits.ChartRendered);\n                    }\n                } else {\n                    if (currentChart !== null) {\n                        chartDestroy(currentChart);\n                        this.$emit(ChartEmits.ChartDestroyed);\n                    }\n                    chartCreate(this.renderChart, this.chartData, this.chartOptions);\n                    this.$emit(ChartEmits.ChartRendered);\n                }\n            },\n            chartOptionsHandler (options) {\n                const currentChart = this.getCurrentChart();\n                if (currentChart !== null) {\n                    setChartOptions(currentChart, options);\n                    this.updateChart();\n                } else {\n                    chartCreate(this.renderChart, this.chartData, this.chartOptions);\n                }\n            },\n            updateChart () {\n                const currentChart = this.getCurrentChart();\n                chartUpdate(currentChart);\n            },\n            getCurrentChart () {\n                return this.hasAnnotationPlugin ? _chartRef.current : this.$data._chart;\n            },\n            setCurrentChart (chart) {\n                this.hasAnnotationPlugin ? _chartRef.current = chart : this.$data._chart = chart;\n            }\n        },\n        beforeDestroy () {\n            const currentChart = this.getCurrentChart();\n            if (currentChart !== null) {\n                chartDestroy(currentChart);\n                this.$emit(ChartEmits.ChartDestroyed);\n            }\n        },\n        render: function(createElement) {\n            return createElement(\"div\", {\n                style: this.styles,\n                class: this.cssClasses\n            }, [\n                createElement(\"canvas\", {\n                    attrs: {\n                        id: this.chartId,\n                        width: this.width,\n                        height: this.height\n                    },\n                    ref: \"canvas\"\n                })\n            ]);\n        }\n    };\n}\n/** @type Object */ const Bar = /* #__PURE__ */ generateChart(\"bar-chart\", \"bar\", BarController);\n/** @type Object */ const Doughnut = /* #__PURE__ */ generateChart(\"doughnut-chart\", \"doughnut\", DoughnutController);\n/** @type Object */ const Line = /* #__PURE__ */ generateChart(\"line-chart\", \"line\", LineController);\n/** @type Object */ const Pie = /* #__PURE__ */ generateChart(\"pie-chart\", \"pie\", PieController);\n/** @type Object */ const PolarArea = /* #__PURE__ */ generateChart(\"polar-chart\", \"polarArea\", PolarAreaController);\n/** @type Object */ const Radar = /* #__PURE__ */ generateChart(\"radar-chart\", \"radar\", RadarController);\n/** @type Object */ const Bubble = /* #__PURE__ */ generateChart(\"bubble-chart\", \"bubble\", BubbleController);\n/** @type Object */ const Scatter = /* #__PURE__ */ generateChart(\"scatter-chart\", \"scatter\", ScatterController);\n\nexport { Bar, Bubble, Doughnut, Line, Pie, PolarArea, Radar, Scatter, generateChart };\n//# sourceMappingURL=index.js.map\n","/*!\n * Chart.js v3.8.0\n * https://www.chartjs.org\n * (c) 2022 Chart.js Contributors\n * Released under the MIT License\n */\nfunction fontString(pixelSize, fontStyle, fontFamily) {\n  return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n}\nconst requestAnimFrame = (function() {\n  if (typeof window === 'undefined') {\n    return function(callback) {\n      return callback();\n    };\n  }\n  return window.requestAnimationFrame;\n}());\nfunction throttled(fn, thisArg, updateFn) {\n  const updateArgs = updateFn || ((args) => Array.prototype.slice.call(args));\n  let ticking = false;\n  let args = [];\n  return function(...rest) {\n    args = updateArgs(rest);\n    if (!ticking) {\n      ticking = true;\n      requestAnimFrame.call(window, () => {\n        ticking = false;\n        fn.apply(thisArg, args);\n      });\n    }\n  };\n}\nfunction debounce(fn, delay) {\n  let timeout;\n  return function(...args) {\n    if (delay) {\n      clearTimeout(timeout);\n      timeout = setTimeout(fn, delay, args);\n    } else {\n      fn.apply(this, args);\n    }\n    return delay;\n  };\n}\nconst _toLeftRightCenter = (align) => align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\nconst _alignStartEnd = (align, start, end) => align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\nconst _textX = (align, left, right, rtl) => {\n  const check = rtl ? 'left' : 'right';\n  return align === check ? right : align === 'center' ? (left + right) / 2 : left;\n};\n\nfunction noop() {}\nconst uid = (function() {\n  let id = 0;\n  return function() {\n    return id++;\n  };\n}());\nfunction isNullOrUndef(value) {\n  return value === null || typeof value === 'undefined';\n}\nfunction isArray(value) {\n  if (Array.isArray && Array.isArray(value)) {\n    return true;\n  }\n  const type = Object.prototype.toString.call(value);\n  if (type.slice(0, 7) === '[object' && type.slice(-6) === 'Array]') {\n    return true;\n  }\n  return false;\n}\nfunction isObject(value) {\n  return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n}\nconst isNumberFinite = (value) => (typeof value === 'number' || value instanceof Number) && isFinite(+value);\nfunction finiteOrDefault(value, defaultValue) {\n  return isNumberFinite(value) ? value : defaultValue;\n}\nfunction valueOrDefault(value, defaultValue) {\n  return typeof value === 'undefined' ? defaultValue : value;\n}\nconst toPercentage = (value, dimension) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100\n    : value / dimension;\nconst toDimension = (value, dimension) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100 * dimension\n    : +value;\nfunction callback(fn, args, thisArg) {\n  if (fn && typeof fn.call === 'function') {\n    return fn.apply(thisArg, args);\n  }\n}\nfunction each(loopable, fn, thisArg, reverse) {\n  let i, len, keys;\n  if (isArray(loopable)) {\n    len = loopable.length;\n    if (reverse) {\n      for (i = len - 1; i >= 0; i--) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    } else {\n      for (i = 0; i < len; i++) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    }\n  } else if (isObject(loopable)) {\n    keys = Object.keys(loopable);\n    len = keys.length;\n    for (i = 0; i < len; i++) {\n      fn.call(thisArg, loopable[keys[i]], keys[i]);\n    }\n  }\n}\nfunction _elementsEqual(a0, a1) {\n  let i, ilen, v0, v1;\n  if (!a0 || !a1 || a0.length !== a1.length) {\n    return false;\n  }\n  for (i = 0, ilen = a0.length; i < ilen; ++i) {\n    v0 = a0[i];\n    v1 = a1[i];\n    if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction clone$1(source) {\n  if (isArray(source)) {\n    return source.map(clone$1);\n  }\n  if (isObject(source)) {\n    const target = Object.create(null);\n    const keys = Object.keys(source);\n    const klen = keys.length;\n    let k = 0;\n    for (; k < klen; ++k) {\n      target[keys[k]] = clone$1(source[keys[k]]);\n    }\n    return target;\n  }\n  return source;\n}\nfunction isValidKey(key) {\n  return ['__proto__', 'prototype', 'constructor'].indexOf(key) === -1;\n}\nfunction _merger(key, target, source, options) {\n  if (!isValidKey(key)) {\n    return;\n  }\n  const tval = target[key];\n  const sval = source[key];\n  if (isObject(tval) && isObject(sval)) {\n    merge(tval, sval, options);\n  } else {\n    target[key] = clone$1(sval);\n  }\n}\nfunction merge(target, source, options) {\n  const sources = isArray(source) ? source : [source];\n  const ilen = sources.length;\n  if (!isObject(target)) {\n    return target;\n  }\n  options = options || {};\n  const merger = options.merger || _merger;\n  for (let i = 0; i < ilen; ++i) {\n    source = sources[i];\n    if (!isObject(source)) {\n      continue;\n    }\n    const keys = Object.keys(source);\n    for (let k = 0, klen = keys.length; k < klen; ++k) {\n      merger(keys[k], target, source, options);\n    }\n  }\n  return target;\n}\nfunction mergeIf(target, source) {\n  return merge(target, source, {merger: _mergerIf});\n}\nfunction _mergerIf(key, target, source) {\n  if (!isValidKey(key)) {\n    return;\n  }\n  const tval = target[key];\n  const sval = source[key];\n  if (isObject(tval) && isObject(sval)) {\n    mergeIf(tval, sval);\n  } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n    target[key] = clone$1(sval);\n  }\n}\nfunction _deprecated(scope, value, previous, current) {\n  if (value !== undefined) {\n    console.warn(scope + ': \"' + previous +\n\t\t\t'\" is deprecated. Please use \"' + current + '\" instead');\n  }\n}\nconst emptyString = '';\nconst dot = '.';\nfunction indexOfDotOrLength(key, start) {\n  const idx = key.indexOf(dot, start);\n  return idx === -1 ? key.length : idx;\n}\nfunction resolveObjectKey(obj, key) {\n  if (key === emptyString) {\n    return obj;\n  }\n  let pos = 0;\n  let idx = indexOfDotOrLength(key, pos);\n  while (obj && idx > pos) {\n    obj = obj[key.slice(pos, idx)];\n    pos = idx + 1;\n    idx = indexOfDotOrLength(key, pos);\n  }\n  return obj;\n}\nfunction _capitalize(str) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\nconst defined = (value) => typeof value !== 'undefined';\nconst isFunction = (value) => typeof value === 'function';\nconst setsEqual = (a, b) => {\n  if (a.size !== b.size) {\n    return false;\n  }\n  for (const item of a) {\n    if (!b.has(item)) {\n      return false;\n    }\n  }\n  return true;\n};\nfunction _isClickEvent(e) {\n  return e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu';\n}\n\nconst PI = Math.PI;\nconst TAU = 2 * PI;\nconst PITAU = TAU + PI;\nconst INFINITY = Number.POSITIVE_INFINITY;\nconst RAD_PER_DEG = PI / 180;\nconst HALF_PI = PI / 2;\nconst QUARTER_PI = PI / 4;\nconst TWO_THIRDS_PI = PI * 2 / 3;\nconst log10 = Math.log10;\nconst sign = Math.sign;\nfunction niceNum(range) {\n  const roundedRange = Math.round(range);\n  range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;\n  const niceRange = Math.pow(10, Math.floor(log10(range)));\n  const fraction = range / niceRange;\n  const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n  return niceFraction * niceRange;\n}\nfunction _factorize(value) {\n  const result = [];\n  const sqrt = Math.sqrt(value);\n  let i;\n  for (i = 1; i < sqrt; i++) {\n    if (value % i === 0) {\n      result.push(i);\n      result.push(value / i);\n    }\n  }\n  if (sqrt === (sqrt | 0)) {\n    result.push(sqrt);\n  }\n  result.sort((a, b) => a - b).pop();\n  return result;\n}\nfunction isNumber(n) {\n  return !isNaN(parseFloat(n)) && isFinite(n);\n}\nfunction almostEquals(x, y, epsilon) {\n  return Math.abs(x - y) < epsilon;\n}\nfunction almostWhole(x, epsilon) {\n  const rounded = Math.round(x);\n  return ((rounded - epsilon) <= x) && ((rounded + epsilon) >= x);\n}\nfunction _setMinAndMaxByKey(array, target, property) {\n  let i, ilen, value;\n  for (i = 0, ilen = array.length; i < ilen; i++) {\n    value = array[i][property];\n    if (!isNaN(value)) {\n      target.min = Math.min(target.min, value);\n      target.max = Math.max(target.max, value);\n    }\n  }\n}\nfunction toRadians(degrees) {\n  return degrees * (PI / 180);\n}\nfunction toDegrees(radians) {\n  return radians * (180 / PI);\n}\nfunction _decimalPlaces(x) {\n  if (!isNumberFinite(x)) {\n    return;\n  }\n  let e = 1;\n  let p = 0;\n  while (Math.round(x * e) / e !== x) {\n    e *= 10;\n    p++;\n  }\n  return p;\n}\nfunction getAngleFromPoint(centrePoint, anglePoint) {\n  const distanceFromXCenter = anglePoint.x - centrePoint.x;\n  const distanceFromYCenter = anglePoint.y - centrePoint.y;\n  const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n  let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n  if (angle < (-0.5 * PI)) {\n    angle += TAU;\n  }\n  return {\n    angle,\n    distance: radialDistanceFromCenter\n  };\n}\nfunction distanceBetweenPoints(pt1, pt2) {\n  return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n}\nfunction _angleDiff(a, b) {\n  return (a - b + PITAU) % TAU - PI;\n}\nfunction _normalizeAngle(a) {\n  return (a % TAU + TAU) % TAU;\n}\nfunction _angleBetween(angle, start, end, sameAngleIsFullCircle) {\n  const a = _normalizeAngle(angle);\n  const s = _normalizeAngle(start);\n  const e = _normalizeAngle(end);\n  const angleToStart = _normalizeAngle(s - a);\n  const angleToEnd = _normalizeAngle(e - a);\n  const startToAngle = _normalizeAngle(a - s);\n  const endToAngle = _normalizeAngle(a - e);\n  return a === s || a === e || (sameAngleIsFullCircle && s === e)\n    || (angleToStart > angleToEnd && startToAngle < endToAngle);\n}\nfunction _limitValue(value, min, max) {\n  return Math.max(min, Math.min(max, value));\n}\nfunction _int16Range(value) {\n  return _limitValue(value, -32768, 32767);\n}\nfunction _isBetween(value, start, end, epsilon = 1e-6) {\n  return value >= Math.min(start, end) - epsilon && value <= Math.max(start, end) + epsilon;\n}\n\nconst atEdge = (t) => t === 0 || t === 1;\nconst elasticIn = (t, s, p) => -(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\nconst elasticOut = (t, s, p) => Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\nconst effects = {\n  linear: t => t,\n  easeInQuad: t => t * t,\n  easeOutQuad: t => -t * (t - 2),\n  easeInOutQuad: t => ((t /= 0.5) < 1)\n    ? 0.5 * t * t\n    : -0.5 * ((--t) * (t - 2) - 1),\n  easeInCubic: t => t * t * t,\n  easeOutCubic: t => (t -= 1) * t * t + 1,\n  easeInOutCubic: t => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t\n    : 0.5 * ((t -= 2) * t * t + 2),\n  easeInQuart: t => t * t * t * t,\n  easeOutQuart: t => -((t -= 1) * t * t * t - 1),\n  easeInOutQuart: t => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t\n    : -0.5 * ((t -= 2) * t * t * t - 2),\n  easeInQuint: t => t * t * t * t * t,\n  easeOutQuint: t => (t -= 1) * t * t * t * t + 1,\n  easeInOutQuint: t => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t * t\n    : 0.5 * ((t -= 2) * t * t * t * t + 2),\n  easeInSine: t => -Math.cos(t * HALF_PI) + 1,\n  easeOutSine: t => Math.sin(t * HALF_PI),\n  easeInOutSine: t => -0.5 * (Math.cos(PI * t) - 1),\n  easeInExpo: t => (t === 0) ? 0 : Math.pow(2, 10 * (t - 1)),\n  easeOutExpo: t => (t === 1) ? 1 : -Math.pow(2, -10 * t) + 1,\n  easeInOutExpo: t => atEdge(t) ? t : t < 0.5\n    ? 0.5 * Math.pow(2, 10 * (t * 2 - 1))\n    : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n  easeInCirc: t => (t >= 1) ? t : -(Math.sqrt(1 - t * t) - 1),\n  easeOutCirc: t => Math.sqrt(1 - (t -= 1) * t),\n  easeInOutCirc: t => ((t /= 0.5) < 1)\n    ? -0.5 * (Math.sqrt(1 - t * t) - 1)\n    : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n  easeInElastic: t => atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\n  easeOutElastic: t => atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\n  easeInOutElastic(t) {\n    const s = 0.1125;\n    const p = 0.45;\n    return atEdge(t) ? t :\n      t < 0.5\n        ? 0.5 * elasticIn(t * 2, s, p)\n        : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n  },\n  easeInBack(t) {\n    const s = 1.70158;\n    return t * t * ((s + 1) * t - s);\n  },\n  easeOutBack(t) {\n    const s = 1.70158;\n    return (t -= 1) * t * ((s + 1) * t + s) + 1;\n  },\n  easeInOutBack(t) {\n    let s = 1.70158;\n    if ((t /= 0.5) < 1) {\n      return 0.5 * (t * t * (((s *= (1.525)) + 1) * t - s));\n    }\n    return 0.5 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2);\n  },\n  easeInBounce: t => 1 - effects.easeOutBounce(1 - t),\n  easeOutBounce(t) {\n    const m = 7.5625;\n    const d = 2.75;\n    if (t < (1 / d)) {\n      return m * t * t;\n    }\n    if (t < (2 / d)) {\n      return m * (t -= (1.5 / d)) * t + 0.75;\n    }\n    if (t < (2.5 / d)) {\n      return m * (t -= (2.25 / d)) * t + 0.9375;\n    }\n    return m * (t -= (2.625 / d)) * t + 0.984375;\n  },\n  easeInOutBounce: t => (t < 0.5)\n    ? effects.easeInBounce(t * 2) * 0.5\n    : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5,\n};\n\n/*!\n * @kurkle/color v0.2.1\n * https://github.com/kurkle/color#readme\n * (c) 2022 Jukka Kurkela\n * Released under the MIT License\n */\nfunction round(v) {\n  return v + 0.5 | 0;\n}\nconst lim = (v, l, h) => Math.max(Math.min(v, h), l);\nfunction p2b(v) {\n  return lim(round(v * 2.55), 0, 255);\n}\nfunction n2b(v) {\n  return lim(round(v * 255), 0, 255);\n}\nfunction b2n(v) {\n  return lim(round(v / 2.55) / 100, 0, 1);\n}\nfunction n2p(v) {\n  return lim(round(v * 100), 0, 100);\n}\nconst map$1 = {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, A: 10, B: 11, C: 12, D: 13, E: 14, F: 15, a: 10, b: 11, c: 12, d: 13, e: 14, f: 15};\nconst hex = [...'0123456789ABCDEF'];\nconst h1 = b => hex[b & 0xF];\nconst h2 = b => hex[(b & 0xF0) >> 4] + hex[b & 0xF];\nconst eq = b => ((b & 0xF0) >> 4) === (b & 0xF);\nconst isShort = v => eq(v.r) && eq(v.g) && eq(v.b) && eq(v.a);\nfunction hexParse(str) {\n  var len = str.length;\n  var ret;\n  if (str[0] === '#') {\n    if (len === 4 || len === 5) {\n      ret = {\n        r: 255 & map$1[str[1]] * 17,\n        g: 255 & map$1[str[2]] * 17,\n        b: 255 & map$1[str[3]] * 17,\n        a: len === 5 ? map$1[str[4]] * 17 : 255\n      };\n    } else if (len === 7 || len === 9) {\n      ret = {\n        r: map$1[str[1]] << 4 | map$1[str[2]],\n        g: map$1[str[3]] << 4 | map$1[str[4]],\n        b: map$1[str[5]] << 4 | map$1[str[6]],\n        a: len === 9 ? (map$1[str[7]] << 4 | map$1[str[8]]) : 255\n      };\n    }\n  }\n  return ret;\n}\nconst alpha = (a, f) => a < 255 ? f(a) : '';\nfunction hexString(v) {\n  var f = isShort(v) ? h1 : h2;\n  return v\n    ? '#' + f(v.r) + f(v.g) + f(v.b) + alpha(v.a, f)\n    : undefined;\n}\nconst HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction hsl2rgbn(h, s, l) {\n  const a = s * Math.min(l, 1 - l);\n  const f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n  return [f(0), f(8), f(4)];\n}\nfunction hsv2rgbn(h, s, v) {\n  const f = (n, k = (n + h / 60) % 6) => v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n  return [f(5), f(3), f(1)];\n}\nfunction hwb2rgbn(h, w, b) {\n  const rgb = hsl2rgbn(h, 1, 0.5);\n  let i;\n  if (w + b > 1) {\n    i = 1 / (w + b);\n    w *= i;\n    b *= i;\n  }\n  for (i = 0; i < 3; i++) {\n    rgb[i] *= 1 - w - b;\n    rgb[i] += w;\n  }\n  return rgb;\n}\nfunction hueValue(r, g, b, d, max) {\n  if (r === max) {\n    return ((g - b) / d) + (g < b ? 6 : 0);\n  }\n  if (g === max) {\n    return (b - r) / d + 2;\n  }\n  return (r - g) / d + 4;\n}\nfunction rgb2hsl(v) {\n  const range = 255;\n  const r = v.r / range;\n  const g = v.g / range;\n  const b = v.b / range;\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  const l = (max + min) / 2;\n  let h, s, d;\n  if (max !== min) {\n    d = max - min;\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n    h = hueValue(r, g, b, d, max);\n    h = h * 60 + 0.5;\n  }\n  return [h | 0, s || 0, l];\n}\nfunction calln(f, a, b, c) {\n  return (\n    Array.isArray(a)\n      ? f(a[0], a[1], a[2])\n      : f(a, b, c)\n  ).map(n2b);\n}\nfunction hsl2rgb(h, s, l) {\n  return calln(hsl2rgbn, h, s, l);\n}\nfunction hwb2rgb(h, w, b) {\n  return calln(hwb2rgbn, h, w, b);\n}\nfunction hsv2rgb(h, s, v) {\n  return calln(hsv2rgbn, h, s, v);\n}\nfunction hue(h) {\n  return (h % 360 + 360) % 360;\n}\nfunction hueParse(str) {\n  const m = HUE_RE.exec(str);\n  let a = 255;\n  let v;\n  if (!m) {\n    return;\n  }\n  if (m[5] !== v) {\n    a = m[6] ? p2b(+m[5]) : n2b(+m[5]);\n  }\n  const h = hue(+m[2]);\n  const p1 = +m[3] / 100;\n  const p2 = +m[4] / 100;\n  if (m[1] === 'hwb') {\n    v = hwb2rgb(h, p1, p2);\n  } else if (m[1] === 'hsv') {\n    v = hsv2rgb(h, p1, p2);\n  } else {\n    v = hsl2rgb(h, p1, p2);\n  }\n  return {\n    r: v[0],\n    g: v[1],\n    b: v[2],\n    a: a\n  };\n}\nfunction rotate(v, deg) {\n  var h = rgb2hsl(v);\n  h[0] = hue(h[0] + deg);\n  h = hsl2rgb(h);\n  v.r = h[0];\n  v.g = h[1];\n  v.b = h[2];\n}\nfunction hslString(v) {\n  if (!v) {\n    return;\n  }\n  const a = rgb2hsl(v);\n  const h = a[0];\n  const s = n2p(a[1]);\n  const l = n2p(a[2]);\n  return v.a < 255\n    ? `hsla(${h}, ${s}%, ${l}%, ${b2n(v.a)})`\n    : `hsl(${h}, ${s}%, ${l}%)`;\n}\nconst map = {\n  x: 'dark',\n  Z: 'light',\n  Y: 're',\n  X: 'blu',\n  W: 'gr',\n  V: 'medium',\n  U: 'slate',\n  A: 'ee',\n  T: 'ol',\n  S: 'or',\n  B: 'ra',\n  C: 'lateg',\n  D: 'ights',\n  R: 'in',\n  Q: 'turquois',\n  E: 'hi',\n  P: 'ro',\n  O: 'al',\n  N: 'le',\n  M: 'de',\n  L: 'yello',\n  F: 'en',\n  K: 'ch',\n  G: 'arks',\n  H: 'ea',\n  I: 'ightg',\n  J: 'wh'\n};\nconst names$1 = {\n  OiceXe: 'f0f8ff',\n  antiquewEte: 'faebd7',\n  aqua: 'ffff',\n  aquamarRe: '7fffd4',\n  azuY: 'f0ffff',\n  beige: 'f5f5dc',\n  bisque: 'ffe4c4',\n  black: '0',\n  blanKedOmond: 'ffebcd',\n  Xe: 'ff',\n  XeviTet: '8a2be2',\n  bPwn: 'a52a2a',\n  burlywood: 'deb887',\n  caMtXe: '5f9ea0',\n  KartYuse: '7fff00',\n  KocTate: 'd2691e',\n  cSO: 'ff7f50',\n  cSnflowerXe: '6495ed',\n  cSnsilk: 'fff8dc',\n  crimson: 'dc143c',\n  cyan: 'ffff',\n  xXe: '8b',\n  xcyan: '8b8b',\n  xgTMnPd: 'b8860b',\n  xWay: 'a9a9a9',\n  xgYF: '6400',\n  xgYy: 'a9a9a9',\n  xkhaki: 'bdb76b',\n  xmagFta: '8b008b',\n  xTivegYF: '556b2f',\n  xSange: 'ff8c00',\n  xScEd: '9932cc',\n  xYd: '8b0000',\n  xsOmon: 'e9967a',\n  xsHgYF: '8fbc8f',\n  xUXe: '483d8b',\n  xUWay: '2f4f4f',\n  xUgYy: '2f4f4f',\n  xQe: 'ced1',\n  xviTet: '9400d3',\n  dAppRk: 'ff1493',\n  dApskyXe: 'bfff',\n  dimWay: '696969',\n  dimgYy: '696969',\n  dodgerXe: '1e90ff',\n  fiYbrick: 'b22222',\n  flSOwEte: 'fffaf0',\n  foYstWAn: '228b22',\n  fuKsia: 'ff00ff',\n  gaRsbSo: 'dcdcdc',\n  ghostwEte: 'f8f8ff',\n  gTd: 'ffd700',\n  gTMnPd: 'daa520',\n  Way: '808080',\n  gYF: '8000',\n  gYFLw: 'adff2f',\n  gYy: '808080',\n  honeyMw: 'f0fff0',\n  hotpRk: 'ff69b4',\n  RdianYd: 'cd5c5c',\n  Rdigo: '4b0082',\n  ivSy: 'fffff0',\n  khaki: 'f0e68c',\n  lavFMr: 'e6e6fa',\n  lavFMrXsh: 'fff0f5',\n  lawngYF: '7cfc00',\n  NmoncEffon: 'fffacd',\n  ZXe: 'add8e6',\n  ZcSO: 'f08080',\n  Zcyan: 'e0ffff',\n  ZgTMnPdLw: 'fafad2',\n  ZWay: 'd3d3d3',\n  ZgYF: '90ee90',\n  ZgYy: 'd3d3d3',\n  ZpRk: 'ffb6c1',\n  ZsOmon: 'ffa07a',\n  ZsHgYF: '20b2aa',\n  ZskyXe: '87cefa',\n  ZUWay: '778899',\n  ZUgYy: '778899',\n  ZstAlXe: 'b0c4de',\n  ZLw: 'ffffe0',\n  lime: 'ff00',\n  limegYF: '32cd32',\n  lRF: 'faf0e6',\n  magFta: 'ff00ff',\n  maPon: '800000',\n  VaquamarRe: '66cdaa',\n  VXe: 'cd',\n  VScEd: 'ba55d3',\n  VpurpN: '9370db',\n  VsHgYF: '3cb371',\n  VUXe: '7b68ee',\n  VsprRggYF: 'fa9a',\n  VQe: '48d1cc',\n  VviTetYd: 'c71585',\n  midnightXe: '191970',\n  mRtcYam: 'f5fffa',\n  mistyPse: 'ffe4e1',\n  moccasR: 'ffe4b5',\n  navajowEte: 'ffdead',\n  navy: '80',\n  Tdlace: 'fdf5e6',\n  Tive: '808000',\n  TivedBb: '6b8e23',\n  Sange: 'ffa500',\n  SangeYd: 'ff4500',\n  ScEd: 'da70d6',\n  pOegTMnPd: 'eee8aa',\n  pOegYF: '98fb98',\n  pOeQe: 'afeeee',\n  pOeviTetYd: 'db7093',\n  papayawEp: 'ffefd5',\n  pHKpuff: 'ffdab9',\n  peru: 'cd853f',\n  pRk: 'ffc0cb',\n  plum: 'dda0dd',\n  powMrXe: 'b0e0e6',\n  purpN: '800080',\n  YbeccapurpN: '663399',\n  Yd: 'ff0000',\n  Psybrown: 'bc8f8f',\n  PyOXe: '4169e1',\n  saddNbPwn: '8b4513',\n  sOmon: 'fa8072',\n  sandybPwn: 'f4a460',\n  sHgYF: '2e8b57',\n  sHshell: 'fff5ee',\n  siFna: 'a0522d',\n  silver: 'c0c0c0',\n  skyXe: '87ceeb',\n  UXe: '6a5acd',\n  UWay: '708090',\n  UgYy: '708090',\n  snow: 'fffafa',\n  sprRggYF: 'ff7f',\n  stAlXe: '4682b4',\n  tan: 'd2b48c',\n  teO: '8080',\n  tEstN: 'd8bfd8',\n  tomato: 'ff6347',\n  Qe: '40e0d0',\n  viTet: 'ee82ee',\n  JHt: 'f5deb3',\n  wEte: 'ffffff',\n  wEtesmoke: 'f5f5f5',\n  Lw: 'ffff00',\n  LwgYF: '9acd32'\n};\nfunction unpack() {\n  const unpacked = {};\n  const keys = Object.keys(names$1);\n  const tkeys = Object.keys(map);\n  let i, j, k, ok, nk;\n  for (i = 0; i < keys.length; i++) {\n    ok = nk = keys[i];\n    for (j = 0; j < tkeys.length; j++) {\n      k = tkeys[j];\n      nk = nk.replace(k, map[k]);\n    }\n    k = parseInt(names$1[ok], 16);\n    unpacked[nk] = [k >> 16 & 0xFF, k >> 8 & 0xFF, k & 0xFF];\n  }\n  return unpacked;\n}\nlet names;\nfunction nameParse(str) {\n  if (!names) {\n    names = unpack();\n    names.transparent = [0, 0, 0, 0];\n  }\n  const a = names[str.toLowerCase()];\n  return a && {\n    r: a[0],\n    g: a[1],\n    b: a[2],\n    a: a.length === 4 ? a[3] : 255\n  };\n}\nconst RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction rgbParse(str) {\n  const m = RGB_RE.exec(str);\n  let a = 255;\n  let r, g, b;\n  if (!m) {\n    return;\n  }\n  if (m[7] !== r) {\n    const v = +m[7];\n    a = m[8] ? p2b(v) : lim(v * 255, 0, 255);\n  }\n  r = +m[1];\n  g = +m[3];\n  b = +m[5];\n  r = 255 & (m[2] ? p2b(r) : lim(r, 0, 255));\n  g = 255 & (m[4] ? p2b(g) : lim(g, 0, 255));\n  b = 255 & (m[6] ? p2b(b) : lim(b, 0, 255));\n  return {\n    r: r,\n    g: g,\n    b: b,\n    a: a\n  };\n}\nfunction rgbString(v) {\n  return v && (\n    v.a < 255\n      ? `rgba(${v.r}, ${v.g}, ${v.b}, ${b2n(v.a)})`\n      : `rgb(${v.r}, ${v.g}, ${v.b})`\n  );\n}\nconst to = v => v <= 0.0031308 ? v * 12.92 : Math.pow(v, 1.0 / 2.4) * 1.055 - 0.055;\nconst from = v => v <= 0.04045 ? v / 12.92 : Math.pow((v + 0.055) / 1.055, 2.4);\nfunction interpolate(rgb1, rgb2, t) {\n  const r = from(b2n(rgb1.r));\n  const g = from(b2n(rgb1.g));\n  const b = from(b2n(rgb1.b));\n  return {\n    r: n2b(to(r + t * (from(b2n(rgb2.r)) - r))),\n    g: n2b(to(g + t * (from(b2n(rgb2.g)) - g))),\n    b: n2b(to(b + t * (from(b2n(rgb2.b)) - b))),\n    a: rgb1.a + t * (rgb2.a - rgb1.a)\n  };\n}\nfunction modHSL(v, i, ratio) {\n  if (v) {\n    let tmp = rgb2hsl(v);\n    tmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\n    tmp = hsl2rgb(tmp);\n    v.r = tmp[0];\n    v.g = tmp[1];\n    v.b = tmp[2];\n  }\n}\nfunction clone(v, proto) {\n  return v ? Object.assign(proto || {}, v) : v;\n}\nfunction fromObject(input) {\n  var v = {r: 0, g: 0, b: 0, a: 255};\n  if (Array.isArray(input)) {\n    if (input.length >= 3) {\n      v = {r: input[0], g: input[1], b: input[2], a: 255};\n      if (input.length > 3) {\n        v.a = n2b(input[3]);\n      }\n    }\n  } else {\n    v = clone(input, {r: 0, g: 0, b: 0, a: 1});\n    v.a = n2b(v.a);\n  }\n  return v;\n}\nfunction functionParse(str) {\n  if (str.charAt(0) === 'r') {\n    return rgbParse(str);\n  }\n  return hueParse(str);\n}\nclass Color {\n  constructor(input) {\n    if (input instanceof Color) {\n      return input;\n    }\n    const type = typeof input;\n    let v;\n    if (type === 'object') {\n      v = fromObject(input);\n    } else if (type === 'string') {\n      v = hexParse(input) || nameParse(input) || functionParse(input);\n    }\n    this._rgb = v;\n    this._valid = !!v;\n  }\n  get valid() {\n    return this._valid;\n  }\n  get rgb() {\n    var v = clone(this._rgb);\n    if (v) {\n      v.a = b2n(v.a);\n    }\n    return v;\n  }\n  set rgb(obj) {\n    this._rgb = fromObject(obj);\n  }\n  rgbString() {\n    return this._valid ? rgbString(this._rgb) : undefined;\n  }\n  hexString() {\n    return this._valid ? hexString(this._rgb) : undefined;\n  }\n  hslString() {\n    return this._valid ? hslString(this._rgb) : undefined;\n  }\n  mix(color, weight) {\n    if (color) {\n      const c1 = this.rgb;\n      const c2 = color.rgb;\n      let w2;\n      const p = weight === w2 ? 0.5 : weight;\n      const w = 2 * p - 1;\n      const a = c1.a - c2.a;\n      const w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      w2 = 1 - w1;\n      c1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\n      c1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\n      c1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\n      c1.a = p * c1.a + (1 - p) * c2.a;\n      this.rgb = c1;\n    }\n    return this;\n  }\n  interpolate(color, t) {\n    if (color) {\n      this._rgb = interpolate(this._rgb, color._rgb, t);\n    }\n    return this;\n  }\n  clone() {\n    return new Color(this.rgb);\n  }\n  alpha(a) {\n    this._rgb.a = n2b(a);\n    return this;\n  }\n  clearer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 - ratio;\n    return this;\n  }\n  greyscale() {\n    const rgb = this._rgb;\n    const val = round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\n    rgb.r = rgb.g = rgb.b = val;\n    return this;\n  }\n  opaquer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 + ratio;\n    return this;\n  }\n  negate() {\n    const v = this._rgb;\n    v.r = 255 - v.r;\n    v.g = 255 - v.g;\n    v.b = 255 - v.b;\n    return this;\n  }\n  lighten(ratio) {\n    modHSL(this._rgb, 2, ratio);\n    return this;\n  }\n  darken(ratio) {\n    modHSL(this._rgb, 2, -ratio);\n    return this;\n  }\n  saturate(ratio) {\n    modHSL(this._rgb, 1, ratio);\n    return this;\n  }\n  desaturate(ratio) {\n    modHSL(this._rgb, 1, -ratio);\n    return this;\n  }\n  rotate(deg) {\n    rotate(this._rgb, deg);\n    return this;\n  }\n}\nfunction index_esm(input) {\n  return new Color(input);\n}\n\nfunction isPatternOrGradient(value) {\n  if (value && typeof value === 'object') {\n    const type = value.toString();\n    return type === '[object CanvasPattern]' || type === '[object CanvasGradient]';\n  }\n  return false;\n}\nfunction color(value) {\n  return isPatternOrGradient(value) ? value : index_esm(value);\n}\nfunction getHoverColor(value) {\n  return isPatternOrGradient(value)\n    ? value\n    : index_esm(value).saturate(0.5).darken(0.1).hexString();\n}\n\nconst overrides = Object.create(null);\nconst descriptors = Object.create(null);\nfunction getScope$1(node, key) {\n  if (!key) {\n    return node;\n  }\n  const keys = key.split('.');\n  for (let i = 0, n = keys.length; i < n; ++i) {\n    const k = keys[i];\n    node = node[k] || (node[k] = Object.create(null));\n  }\n  return node;\n}\nfunction set(root, scope, values) {\n  if (typeof scope === 'string') {\n    return merge(getScope$1(root, scope), values);\n  }\n  return merge(getScope$1(root, ''), scope);\n}\nclass Defaults {\n  constructor(_descriptors) {\n    this.animation = undefined;\n    this.backgroundColor = 'rgba(0,0,0,0.1)';\n    this.borderColor = 'rgba(0,0,0,0.1)';\n    this.color = '#666';\n    this.datasets = {};\n    this.devicePixelRatio = (context) => context.chart.platform.getDevicePixelRatio();\n    this.elements = {};\n    this.events = [\n      'mousemove',\n      'mouseout',\n      'click',\n      'touchstart',\n      'touchmove'\n    ];\n    this.font = {\n      family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n      size: 12,\n      style: 'normal',\n      lineHeight: 1.2,\n      weight: null\n    };\n    this.hover = {};\n    this.hoverBackgroundColor = (ctx, options) => getHoverColor(options.backgroundColor);\n    this.hoverBorderColor = (ctx, options) => getHoverColor(options.borderColor);\n    this.hoverColor = (ctx, options) => getHoverColor(options.color);\n    this.indexAxis = 'x';\n    this.interaction = {\n      mode: 'nearest',\n      intersect: true,\n      includeInvisible: false\n    };\n    this.maintainAspectRatio = true;\n    this.onHover = null;\n    this.onClick = null;\n    this.parsing = true;\n    this.plugins = {};\n    this.responsive = true;\n    this.scale = undefined;\n    this.scales = {};\n    this.showLine = true;\n    this.drawActiveElementsOnTop = true;\n    this.describe(_descriptors);\n  }\n  set(scope, values) {\n    return set(this, scope, values);\n  }\n  get(scope) {\n    return getScope$1(this, scope);\n  }\n  describe(scope, values) {\n    return set(descriptors, scope, values);\n  }\n  override(scope, values) {\n    return set(overrides, scope, values);\n  }\n  route(scope, name, targetScope, targetName) {\n    const scopeObject = getScope$1(this, scope);\n    const targetScopeObject = getScope$1(this, targetScope);\n    const privateName = '_' + name;\n    Object.defineProperties(scopeObject, {\n      [privateName]: {\n        value: scopeObject[name],\n        writable: true\n      },\n      [name]: {\n        enumerable: true,\n        get() {\n          const local = this[privateName];\n          const target = targetScopeObject[targetName];\n          if (isObject(local)) {\n            return Object.assign({}, target, local);\n          }\n          return valueOrDefault(local, target);\n        },\n        set(value) {\n          this[privateName] = value;\n        }\n      }\n    });\n  }\n}\nvar defaults = new Defaults({\n  _scriptable: (name) => !name.startsWith('on'),\n  _indexable: (name) => name !== 'events',\n  hover: {\n    _fallback: 'interaction'\n  },\n  interaction: {\n    _scriptable: false,\n    _indexable: false,\n  }\n});\n\nfunction toFontString(font) {\n  if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n    return null;\n  }\n  return (font.style ? font.style + ' ' : '')\n\t\t+ (font.weight ? font.weight + ' ' : '')\n\t\t+ font.size + 'px '\n\t\t+ font.family;\n}\nfunction _measureText(ctx, data, gc, longest, string) {\n  let textWidth = data[string];\n  if (!textWidth) {\n    textWidth = data[string] = ctx.measureText(string).width;\n    gc.push(string);\n  }\n  if (textWidth > longest) {\n    longest = textWidth;\n  }\n  return longest;\n}\nfunction _longestText(ctx, font, arrayOfThings, cache) {\n  cache = cache || {};\n  let data = cache.data = cache.data || {};\n  let gc = cache.garbageCollect = cache.garbageCollect || [];\n  if (cache.font !== font) {\n    data = cache.data = {};\n    gc = cache.garbageCollect = [];\n    cache.font = font;\n  }\n  ctx.save();\n  ctx.font = font;\n  let longest = 0;\n  const ilen = arrayOfThings.length;\n  let i, j, jlen, thing, nestedThing;\n  for (i = 0; i < ilen; i++) {\n    thing = arrayOfThings[i];\n    if (thing !== undefined && thing !== null && isArray(thing) !== true) {\n      longest = _measureText(ctx, data, gc, longest, thing);\n    } else if (isArray(thing)) {\n      for (j = 0, jlen = thing.length; j < jlen; j++) {\n        nestedThing = thing[j];\n        if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n          longest = _measureText(ctx, data, gc, longest, nestedThing);\n        }\n      }\n    }\n  }\n  ctx.restore();\n  const gcLen = gc.length / 2;\n  if (gcLen > arrayOfThings.length) {\n    for (i = 0; i < gcLen; i++) {\n      delete data[gc[i]];\n    }\n    gc.splice(0, gcLen);\n  }\n  return longest;\n}\nfunction _alignPixel(chart, pixel, width) {\n  const devicePixelRatio = chart.currentDevicePixelRatio;\n  const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n  return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n}\nfunction clearCanvas(canvas, ctx) {\n  ctx = ctx || canvas.getContext('2d');\n  ctx.save();\n  ctx.resetTransform();\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\n  ctx.restore();\n}\nfunction drawPoint(ctx, options, x, y) {\n  let type, xOffset, yOffset, size, cornerRadius;\n  const style = options.pointStyle;\n  const rotation = options.rotation;\n  const radius = options.radius;\n  let rad = (rotation || 0) * RAD_PER_DEG;\n  if (style && typeof style === 'object') {\n    type = style.toString();\n    if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n      ctx.save();\n      ctx.translate(x, y);\n      ctx.rotate(rad);\n      ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n      ctx.restore();\n      return;\n    }\n  }\n  if (isNaN(radius) || radius <= 0) {\n    return;\n  }\n  ctx.beginPath();\n  switch (style) {\n  default:\n    ctx.arc(x, y, radius, 0, TAU);\n    ctx.closePath();\n    break;\n  case 'triangle':\n    ctx.moveTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n    rad += TWO_THIRDS_PI;\n    ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n    rad += TWO_THIRDS_PI;\n    ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n    ctx.closePath();\n    break;\n  case 'rectRounded':\n    cornerRadius = radius * 0.516;\n    size = radius - cornerRadius;\n    xOffset = Math.cos(rad + QUARTER_PI) * size;\n    yOffset = Math.sin(rad + QUARTER_PI) * size;\n    ctx.arc(x - xOffset, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n    ctx.arc(x + yOffset, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n    ctx.arc(x + xOffset, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n    ctx.arc(x - yOffset, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n    ctx.closePath();\n    break;\n  case 'rect':\n    if (!rotation) {\n      size = Math.SQRT1_2 * radius;\n      ctx.rect(x - size, y - size, 2 * size, 2 * size);\n      break;\n    }\n    rad += QUARTER_PI;\n  case 'rectRot':\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    ctx.closePath();\n    break;\n  case 'crossRot':\n    rad += QUARTER_PI;\n  case 'cross':\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.moveTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    break;\n  case 'star':\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.moveTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    rad += QUARTER_PI;\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.moveTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    break;\n  case 'line':\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    break;\n  case 'dash':\n    ctx.moveTo(x, y);\n    ctx.lineTo(x + Math.cos(rad) * radius, y + Math.sin(rad) * radius);\n    break;\n  }\n  ctx.fill();\n  if (options.borderWidth > 0) {\n    ctx.stroke();\n  }\n}\nfunction _isPointInArea(point, area, margin) {\n  margin = margin || 0.5;\n  return !area || (point && point.x > area.left - margin && point.x < area.right + margin &&\n\t\tpoint.y > area.top - margin && point.y < area.bottom + margin);\n}\nfunction clipArea(ctx, area) {\n  ctx.save();\n  ctx.beginPath();\n  ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n  ctx.clip();\n}\nfunction unclipArea(ctx) {\n  ctx.restore();\n}\nfunction _steppedLineTo(ctx, previous, target, flip, mode) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  if (mode === 'middle') {\n    const midpoint = (previous.x + target.x) / 2.0;\n    ctx.lineTo(midpoint, previous.y);\n    ctx.lineTo(midpoint, target.y);\n  } else if (mode === 'after' !== !!flip) {\n    ctx.lineTo(previous.x, target.y);\n  } else {\n    ctx.lineTo(target.x, previous.y);\n  }\n  ctx.lineTo(target.x, target.y);\n}\nfunction _bezierCurveTo(ctx, previous, target, flip) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  ctx.bezierCurveTo(\n    flip ? previous.cp1x : previous.cp2x,\n    flip ? previous.cp1y : previous.cp2y,\n    flip ? target.cp2x : target.cp1x,\n    flip ? target.cp2y : target.cp1y,\n    target.x,\n    target.y);\n}\nfunction renderText(ctx, text, x, y, font, opts = {}) {\n  const lines = isArray(text) ? text : [text];\n  const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n  let i, line;\n  ctx.save();\n  ctx.font = font.string;\n  setRenderOpts(ctx, opts);\n  for (i = 0; i < lines.length; ++i) {\n    line = lines[i];\n    if (stroke) {\n      if (opts.strokeColor) {\n        ctx.strokeStyle = opts.strokeColor;\n      }\n      if (!isNullOrUndef(opts.strokeWidth)) {\n        ctx.lineWidth = opts.strokeWidth;\n      }\n      ctx.strokeText(line, x, y, opts.maxWidth);\n    }\n    ctx.fillText(line, x, y, opts.maxWidth);\n    decorateText(ctx, x, y, line, opts);\n    y += font.lineHeight;\n  }\n  ctx.restore();\n}\nfunction setRenderOpts(ctx, opts) {\n  if (opts.translation) {\n    ctx.translate(opts.translation[0], opts.translation[1]);\n  }\n  if (!isNullOrUndef(opts.rotation)) {\n    ctx.rotate(opts.rotation);\n  }\n  if (opts.color) {\n    ctx.fillStyle = opts.color;\n  }\n  if (opts.textAlign) {\n    ctx.textAlign = opts.textAlign;\n  }\n  if (opts.textBaseline) {\n    ctx.textBaseline = opts.textBaseline;\n  }\n}\nfunction decorateText(ctx, x, y, line, opts) {\n  if (opts.strikethrough || opts.underline) {\n    const metrics = ctx.measureText(line);\n    const left = x - metrics.actualBoundingBoxLeft;\n    const right = x + metrics.actualBoundingBoxRight;\n    const top = y - metrics.actualBoundingBoxAscent;\n    const bottom = y + metrics.actualBoundingBoxDescent;\n    const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n    ctx.strokeStyle = ctx.fillStyle;\n    ctx.beginPath();\n    ctx.lineWidth = opts.decorationWidth || 2;\n    ctx.moveTo(left, yDecoration);\n    ctx.lineTo(right, yDecoration);\n    ctx.stroke();\n  }\n}\nfunction addRoundedRectPath(ctx, rect) {\n  const {x, y, w, h, radius} = rect;\n  ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, -HALF_PI, PI, true);\n  ctx.lineTo(x, y + h - radius.bottomLeft);\n  ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n  ctx.lineTo(x + w - radius.bottomRight, y + h);\n  ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n  ctx.lineTo(x + w, y + radius.topRight);\n  ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n  ctx.lineTo(x + radius.topLeft, y);\n}\n\nconst LINE_HEIGHT = new RegExp(/^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/);\nconst FONT_STYLE = new RegExp(/^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/);\nfunction toLineHeight(value, size) {\n  const matches = ('' + value).match(LINE_HEIGHT);\n  if (!matches || matches[1] === 'normal') {\n    return size * 1.2;\n  }\n  value = +matches[2];\n  switch (matches[3]) {\n  case 'px':\n    return value;\n  case '%':\n    value /= 100;\n    break;\n  }\n  return size * value;\n}\nconst numberOrZero = v => +v || 0;\nfunction _readValueToProps(value, props) {\n  const ret = {};\n  const objProps = isObject(props);\n  const keys = objProps ? Object.keys(props) : props;\n  const read = isObject(value)\n    ? objProps\n      ? prop => valueOrDefault(value[prop], value[props[prop]])\n      : prop => value[prop]\n    : () => value;\n  for (const prop of keys) {\n    ret[prop] = numberOrZero(read(prop));\n  }\n  return ret;\n}\nfunction toTRBL(value) {\n  return _readValueToProps(value, {top: 'y', right: 'x', bottom: 'y', left: 'x'});\n}\nfunction toTRBLCorners(value) {\n  return _readValueToProps(value, ['topLeft', 'topRight', 'bottomLeft', 'bottomRight']);\n}\nfunction toPadding(value) {\n  const obj = toTRBL(value);\n  obj.width = obj.left + obj.right;\n  obj.height = obj.top + obj.bottom;\n  return obj;\n}\nfunction toFont(options, fallback) {\n  options = options || {};\n  fallback = fallback || defaults.font;\n  let size = valueOrDefault(options.size, fallback.size);\n  if (typeof size === 'string') {\n    size = parseInt(size, 10);\n  }\n  let style = valueOrDefault(options.style, fallback.style);\n  if (style && !('' + style).match(FONT_STYLE)) {\n    console.warn('Invalid font style specified: \"' + style + '\"');\n    style = '';\n  }\n  const font = {\n    family: valueOrDefault(options.family, fallback.family),\n    lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n    size,\n    style,\n    weight: valueOrDefault(options.weight, fallback.weight),\n    string: ''\n  };\n  font.string = toFontString(font);\n  return font;\n}\nfunction resolve(inputs, context, index, info) {\n  let cacheable = true;\n  let i, ilen, value;\n  for (i = 0, ilen = inputs.length; i < ilen; ++i) {\n    value = inputs[i];\n    if (value === undefined) {\n      continue;\n    }\n    if (context !== undefined && typeof value === 'function') {\n      value = value(context);\n      cacheable = false;\n    }\n    if (index !== undefined && isArray(value)) {\n      value = value[index % value.length];\n      cacheable = false;\n    }\n    if (value !== undefined) {\n      if (info && !cacheable) {\n        info.cacheable = false;\n      }\n      return value;\n    }\n  }\n}\nfunction _addGrace(minmax, grace, beginAtZero) {\n  const {min, max} = minmax;\n  const change = toDimension(grace, (max - min) / 2);\n  const keepZero = (value, add) => beginAtZero && value === 0 ? 0 : value + add;\n  return {\n    min: keepZero(min, -Math.abs(change)),\n    max: keepZero(max, change)\n  };\n}\nfunction createContext(parentContext, context) {\n  return Object.assign(Object.create(parentContext), context);\n}\n\nfunction _lookup(table, value, cmp) {\n  cmp = cmp || ((index) => table[index] < value);\n  let hi = table.length - 1;\n  let lo = 0;\n  let mid;\n  while (hi - lo > 1) {\n    mid = (lo + hi) >> 1;\n    if (cmp(mid)) {\n      lo = mid;\n    } else {\n      hi = mid;\n    }\n  }\n  return {lo, hi};\n}\nconst _lookupByKey = (table, key, value) =>\n  _lookup(table, value, index => table[index][key] < value);\nconst _rlookupByKey = (table, key, value) =>\n  _lookup(table, value, index => table[index][key] >= value);\nfunction _filterBetween(values, min, max) {\n  let start = 0;\n  let end = values.length;\n  while (start < end && values[start] < min) {\n    start++;\n  }\n  while (end > start && values[end - 1] > max) {\n    end--;\n  }\n  return start > 0 || end < values.length\n    ? values.slice(start, end)\n    : values;\n}\nconst arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'];\nfunction listenArrayEvents(array, listener) {\n  if (array._chartjs) {\n    array._chartjs.listeners.push(listener);\n    return;\n  }\n  Object.defineProperty(array, '_chartjs', {\n    configurable: true,\n    enumerable: false,\n    value: {\n      listeners: [listener]\n    }\n  });\n  arrayEvents.forEach((key) => {\n    const method = '_onData' + _capitalize(key);\n    const base = array[key];\n    Object.defineProperty(array, key, {\n      configurable: true,\n      enumerable: false,\n      value(...args) {\n        const res = base.apply(this, args);\n        array._chartjs.listeners.forEach((object) => {\n          if (typeof object[method] === 'function') {\n            object[method](...args);\n          }\n        });\n        return res;\n      }\n    });\n  });\n}\nfunction unlistenArrayEvents(array, listener) {\n  const stub = array._chartjs;\n  if (!stub) {\n    return;\n  }\n  const listeners = stub.listeners;\n  const index = listeners.indexOf(listener);\n  if (index !== -1) {\n    listeners.splice(index, 1);\n  }\n  if (listeners.length > 0) {\n    return;\n  }\n  arrayEvents.forEach((key) => {\n    delete array[key];\n  });\n  delete array._chartjs;\n}\nfunction _arrayUnique(items) {\n  const set = new Set();\n  let i, ilen;\n  for (i = 0, ilen = items.length; i < ilen; ++i) {\n    set.add(items[i]);\n  }\n  if (set.size === ilen) {\n    return items;\n  }\n  return Array.from(set);\n}\n\nfunction _createResolver(scopes, prefixes = [''], rootScopes = scopes, fallback, getTarget = () => scopes[0]) {\n  if (!defined(fallback)) {\n    fallback = _resolve('_fallback', scopes);\n  }\n  const cache = {\n    [Symbol.toStringTag]: 'Object',\n    _cacheable: true,\n    _scopes: scopes,\n    _rootScopes: rootScopes,\n    _fallback: fallback,\n    _getTarget: getTarget,\n    override: (scope) => _createResolver([scope, ...scopes], prefixes, rootScopes, fallback),\n  };\n  return new Proxy(cache, {\n    deleteProperty(target, prop) {\n      delete target[prop];\n      delete target._keys;\n      delete scopes[0][prop];\n      return true;\n    },\n    get(target, prop) {\n      return _cached(target, prop,\n        () => _resolveWithPrefixes(prop, prefixes, scopes, target));\n    },\n    getOwnPropertyDescriptor(target, prop) {\n      return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n    },\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(scopes[0]);\n    },\n    has(target, prop) {\n      return getKeysFromAllScopes(target).includes(prop);\n    },\n    ownKeys(target) {\n      return getKeysFromAllScopes(target);\n    },\n    set(target, prop, value) {\n      const storage = target._storage || (target._storage = getTarget());\n      target[prop] = storage[prop] = value;\n      delete target._keys;\n      return true;\n    }\n  });\n}\nfunction _attachContext(proxy, context, subProxy, descriptorDefaults) {\n  const cache = {\n    _cacheable: false,\n    _proxy: proxy,\n    _context: context,\n    _subProxy: subProxy,\n    _stack: new Set(),\n    _descriptors: _descriptors(proxy, descriptorDefaults),\n    setContext: (ctx) => _attachContext(proxy, ctx, subProxy, descriptorDefaults),\n    override: (scope) => _attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\n  };\n  return new Proxy(cache, {\n    deleteProperty(target, prop) {\n      delete target[prop];\n      delete proxy[prop];\n      return true;\n    },\n    get(target, prop, receiver) {\n      return _cached(target, prop,\n        () => _resolveWithContext(target, prop, receiver));\n    },\n    getOwnPropertyDescriptor(target, prop) {\n      return target._descriptors.allKeys\n        ? Reflect.has(proxy, prop) ? {enumerable: true, configurable: true} : undefined\n        : Reflect.getOwnPropertyDescriptor(proxy, prop);\n    },\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(proxy);\n    },\n    has(target, prop) {\n      return Reflect.has(proxy, prop);\n    },\n    ownKeys() {\n      return Reflect.ownKeys(proxy);\n    },\n    set(target, prop, value) {\n      proxy[prop] = value;\n      delete target[prop];\n      return true;\n    }\n  });\n}\nfunction _descriptors(proxy, defaults = {scriptable: true, indexable: true}) {\n  const {_scriptable = defaults.scriptable, _indexable = defaults.indexable, _allKeys = defaults.allKeys} = proxy;\n  return {\n    allKeys: _allKeys,\n    scriptable: _scriptable,\n    indexable: _indexable,\n    isScriptable: isFunction(_scriptable) ? _scriptable : () => _scriptable,\n    isIndexable: isFunction(_indexable) ? _indexable : () => _indexable\n  };\n}\nconst readKey = (prefix, name) => prefix ? prefix + _capitalize(name) : name;\nconst needsSubResolver = (prop, value) => isObject(value) && prop !== 'adapters' &&\n  (Object.getPrototypeOf(value) === null || value.constructor === Object);\nfunction _cached(target, prop, resolve) {\n  if (Object.prototype.hasOwnProperty.call(target, prop)) {\n    return target[prop];\n  }\n  const value = resolve();\n  target[prop] = value;\n  return value;\n}\nfunction _resolveWithContext(target, prop, receiver) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n  let value = _proxy[prop];\n  if (isFunction(value) && descriptors.isScriptable(prop)) {\n    value = _resolveScriptable(prop, value, target, receiver);\n  }\n  if (isArray(value) && value.length) {\n    value = _resolveArray(prop, value, target, descriptors.isIndexable);\n  }\n  if (needsSubResolver(prop, value)) {\n    value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n  }\n  return value;\n}\nfunction _resolveScriptable(prop, value, target, receiver) {\n  const {_proxy, _context, _subProxy, _stack} = target;\n  if (_stack.has(prop)) {\n    throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\n  }\n  _stack.add(prop);\n  value = value(_context, _subProxy || receiver);\n  _stack.delete(prop);\n  if (needsSubResolver(prop, value)) {\n    value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n  }\n  return value;\n}\nfunction _resolveArray(prop, value, target, isIndexable) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n  if (defined(_context.index) && isIndexable(prop)) {\n    value = value[_context.index % value.length];\n  } else if (isObject(value[0])) {\n    const arr = value;\n    const scopes = _proxy._scopes.filter(s => s !== arr);\n    value = [];\n    for (const item of arr) {\n      const resolver = createSubResolver(scopes, _proxy, prop, item);\n      value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n    }\n  }\n  return value;\n}\nfunction resolveFallback(fallback, prop, value) {\n  return isFunction(fallback) ? fallback(prop, value) : fallback;\n}\nconst getScope = (key, parent) => key === true ? parent\n  : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\nfunction addScopes(set, parentScopes, key, parentFallback, value) {\n  for (const parent of parentScopes) {\n    const scope = getScope(key, parent);\n    if (scope) {\n      set.add(scope);\n      const fallback = resolveFallback(scope._fallback, key, value);\n      if (defined(fallback) && fallback !== key && fallback !== parentFallback) {\n        return fallback;\n      }\n    } else if (scope === false && defined(parentFallback) && key !== parentFallback) {\n      return null;\n    }\n  }\n  return false;\n}\nfunction createSubResolver(parentScopes, resolver, prop, value) {\n  const rootScopes = resolver._rootScopes;\n  const fallback = resolveFallback(resolver._fallback, prop, value);\n  const allScopes = [...parentScopes, ...rootScopes];\n  const set = new Set();\n  set.add(value);\n  let key = addScopesFromKey(set, allScopes, prop, fallback || prop, value);\n  if (key === null) {\n    return false;\n  }\n  if (defined(fallback) && fallback !== prop) {\n    key = addScopesFromKey(set, allScopes, fallback, key, value);\n    if (key === null) {\n      return false;\n    }\n  }\n  return _createResolver(Array.from(set), [''], rootScopes, fallback,\n    () => subGetTarget(resolver, prop, value));\n}\nfunction addScopesFromKey(set, allScopes, key, fallback, item) {\n  while (key) {\n    key = addScopes(set, allScopes, key, fallback, item);\n  }\n  return key;\n}\nfunction subGetTarget(resolver, prop, value) {\n  const parent = resolver._getTarget();\n  if (!(prop in parent)) {\n    parent[prop] = {};\n  }\n  const target = parent[prop];\n  if (isArray(target) && isObject(value)) {\n    return value;\n  }\n  return target;\n}\nfunction _resolveWithPrefixes(prop, prefixes, scopes, proxy) {\n  let value;\n  for (const prefix of prefixes) {\n    value = _resolve(readKey(prefix, prop), scopes);\n    if (defined(value)) {\n      return needsSubResolver(prop, value)\n        ? createSubResolver(scopes, proxy, prop, value)\n        : value;\n    }\n  }\n}\nfunction _resolve(key, scopes) {\n  for (const scope of scopes) {\n    if (!scope) {\n      continue;\n    }\n    const value = scope[key];\n    if (defined(value)) {\n      return value;\n    }\n  }\n}\nfunction getKeysFromAllScopes(target) {\n  let keys = target._keys;\n  if (!keys) {\n    keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n  }\n  return keys;\n}\nfunction resolveKeysFromAllScopes(scopes) {\n  const set = new Set();\n  for (const scope of scopes) {\n    for (const key of Object.keys(scope).filter(k => !k.startsWith('_'))) {\n      set.add(key);\n    }\n  }\n  return Array.from(set);\n}\nfunction _parseObjectDataRadialScale(meta, data, start, count) {\n  const {iScale} = meta;\n  const {key = 'r'} = this._parsing;\n  const parsed = new Array(count);\n  let i, ilen, index, item;\n  for (i = 0, ilen = count; i < ilen; ++i) {\n    index = i + start;\n    item = data[index];\n    parsed[i] = {\n      r: iScale.parse(resolveObjectKey(item, key), index)\n    };\n  }\n  return parsed;\n}\n\nconst EPSILON = Number.EPSILON || 1e-14;\nconst getPoint = (points, i) => i < points.length && !points[i].skip && points[i];\nconst getValueAxis = (indexAxis) => indexAxis === 'x' ? 'y' : 'x';\nfunction splineCurve(firstPoint, middlePoint, afterPoint, t) {\n  const previous = firstPoint.skip ? middlePoint : firstPoint;\n  const current = middlePoint;\n  const next = afterPoint.skip ? middlePoint : afterPoint;\n  const d01 = distanceBetweenPoints(current, previous);\n  const d12 = distanceBetweenPoints(next, current);\n  let s01 = d01 / (d01 + d12);\n  let s12 = d12 / (d01 + d12);\n  s01 = isNaN(s01) ? 0 : s01;\n  s12 = isNaN(s12) ? 0 : s12;\n  const fa = t * s01;\n  const fb = t * s12;\n  return {\n    previous: {\n      x: current.x - fa * (next.x - previous.x),\n      y: current.y - fa * (next.y - previous.y)\n    },\n    next: {\n      x: current.x + fb * (next.x - previous.x),\n      y: current.y + fb * (next.y - previous.y)\n    }\n  };\n}\nfunction monotoneAdjust(points, deltaK, mK) {\n  const pointsLen = points.length;\n  let alphaK, betaK, tauK, squaredMagnitude, pointCurrent;\n  let pointAfter = getPoint(points, 0);\n  for (let i = 0; i < pointsLen - 1; ++i) {\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent || !pointAfter) {\n      continue;\n    }\n    if (almostEquals(deltaK[i], 0, EPSILON)) {\n      mK[i] = mK[i + 1] = 0;\n      continue;\n    }\n    alphaK = mK[i] / deltaK[i];\n    betaK = mK[i + 1] / deltaK[i];\n    squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n    if (squaredMagnitude <= 9) {\n      continue;\n    }\n    tauK = 3 / Math.sqrt(squaredMagnitude);\n    mK[i] = alphaK * tauK * deltaK[i];\n    mK[i + 1] = betaK * tauK * deltaK[i];\n  }\n}\nfunction monotoneCompute(points, mK, indexAxis = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  let delta, pointBefore, pointCurrent;\n  let pointAfter = getPoint(points, 0);\n  for (let i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n    const iPixel = pointCurrent[indexAxis];\n    const vPixel = pointCurrent[valueAxis];\n    if (pointBefore) {\n      delta = (iPixel - pointBefore[indexAxis]) / 3;\n      pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\n      pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\n    }\n    if (pointAfter) {\n      delta = (pointAfter[indexAxis] - iPixel) / 3;\n      pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\n      pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\n    }\n  }\n}\nfunction splineCurveMonotone(points, indexAxis = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  const deltaK = Array(pointsLen).fill(0);\n  const mK = Array(pointsLen);\n  let i, pointBefore, pointCurrent;\n  let pointAfter = getPoint(points, 0);\n  for (i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n    if (pointAfter) {\n      const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n      deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n    }\n    mK[i] = !pointBefore ? deltaK[i]\n      : !pointAfter ? deltaK[i - 1]\n      : (sign(deltaK[i - 1]) !== sign(deltaK[i])) ? 0\n      : (deltaK[i - 1] + deltaK[i]) / 2;\n  }\n  monotoneAdjust(points, deltaK, mK);\n  monotoneCompute(points, mK, indexAxis);\n}\nfunction capControlPoint(pt, min, max) {\n  return Math.max(Math.min(pt, max), min);\n}\nfunction capBezierPoints(points, area) {\n  let i, ilen, point, inArea, inAreaPrev;\n  let inAreaNext = _isPointInArea(points[0], area);\n  for (i = 0, ilen = points.length; i < ilen; ++i) {\n    inAreaPrev = inArea;\n    inArea = inAreaNext;\n    inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n    if (!inArea) {\n      continue;\n    }\n    point = points[i];\n    if (inAreaPrev) {\n      point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n      point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n    }\n    if (inAreaNext) {\n      point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n      point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n    }\n  }\n}\nfunction _updateBezierControlPoints(points, options, area, loop, indexAxis) {\n  let i, ilen, point, controlPoints;\n  if (options.spanGaps) {\n    points = points.filter((pt) => !pt.skip);\n  }\n  if (options.cubicInterpolationMode === 'monotone') {\n    splineCurveMonotone(points, indexAxis);\n  } else {\n    let prev = loop ? points[points.length - 1] : points[0];\n    for (i = 0, ilen = points.length; i < ilen; ++i) {\n      point = points[i];\n      controlPoints = splineCurve(\n        prev,\n        point,\n        points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen],\n        options.tension\n      );\n      point.cp1x = controlPoints.previous.x;\n      point.cp1y = controlPoints.previous.y;\n      point.cp2x = controlPoints.next.x;\n      point.cp2y = controlPoints.next.y;\n      prev = point;\n    }\n  }\n  if (options.capBezierPoints) {\n    capBezierPoints(points, area);\n  }\n}\n\nfunction _isDomSupported() {\n  return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\nfunction _getParentNode(domNode) {\n  let parent = domNode.parentNode;\n  if (parent && parent.toString() === '[object ShadowRoot]') {\n    parent = parent.host;\n  }\n  return parent;\n}\nfunction parseMaxStyle(styleValue, node, parentProperty) {\n  let valueInPixels;\n  if (typeof styleValue === 'string') {\n    valueInPixels = parseInt(styleValue, 10);\n    if (styleValue.indexOf('%') !== -1) {\n      valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n    }\n  } else {\n    valueInPixels = styleValue;\n  }\n  return valueInPixels;\n}\nconst getComputedStyle = (element) => window.getComputedStyle(element, null);\nfunction getStyle(el, property) {\n  return getComputedStyle(el).getPropertyValue(property);\n}\nconst positions = ['top', 'right', 'bottom', 'left'];\nfunction getPositionedStyle(styles, style, suffix) {\n  const result = {};\n  suffix = suffix ? '-' + suffix : '';\n  for (let i = 0; i < 4; i++) {\n    const pos = positions[i];\n    result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n  }\n  result.width = result.left + result.right;\n  result.height = result.top + result.bottom;\n  return result;\n}\nconst useOffsetPos = (x, y, target) => (x > 0 || y > 0) && (!target || !target.shadowRoot);\nfunction getCanvasPosition(e, canvas) {\n  const touches = e.touches;\n  const source = touches && touches.length ? touches[0] : e;\n  const {offsetX, offsetY} = source;\n  let box = false;\n  let x, y;\n  if (useOffsetPos(offsetX, offsetY, e.target)) {\n    x = offsetX;\n    y = offsetY;\n  } else {\n    const rect = canvas.getBoundingClientRect();\n    x = source.clientX - rect.left;\n    y = source.clientY - rect.top;\n    box = true;\n  }\n  return {x, y, box};\n}\nfunction getRelativePosition(evt, chart) {\n  if ('native' in evt) {\n    return evt;\n  }\n  const {canvas, currentDevicePixelRatio} = chart;\n  const style = getComputedStyle(canvas);\n  const borderBox = style.boxSizing === 'border-box';\n  const paddings = getPositionedStyle(style, 'padding');\n  const borders = getPositionedStyle(style, 'border', 'width');\n  const {x, y, box} = getCanvasPosition(evt, canvas);\n  const xOffset = paddings.left + (box && borders.left);\n  const yOffset = paddings.top + (box && borders.top);\n  let {width, height} = chart;\n  if (borderBox) {\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  return {\n    x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n    y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n  };\n}\nfunction getContainerSize(canvas, width, height) {\n  let maxWidth, maxHeight;\n  if (width === undefined || height === undefined) {\n    const container = _getParentNode(canvas);\n    if (!container) {\n      width = canvas.clientWidth;\n      height = canvas.clientHeight;\n    } else {\n      const rect = container.getBoundingClientRect();\n      const containerStyle = getComputedStyle(container);\n      const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n      const containerPadding = getPositionedStyle(containerStyle, 'padding');\n      width = rect.width - containerPadding.width - containerBorder.width;\n      height = rect.height - containerPadding.height - containerBorder.height;\n      maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n      maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n    }\n  }\n  return {\n    width,\n    height,\n    maxWidth: maxWidth || INFINITY,\n    maxHeight: maxHeight || INFINITY\n  };\n}\nconst round1 = v => Math.round(v * 10) / 10;\nfunction getMaximumSize(canvas, bbWidth, bbHeight, aspectRatio) {\n  const style = getComputedStyle(canvas);\n  const margins = getPositionedStyle(style, 'margin');\n  const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n  const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n  const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n  let {width, height} = containerSize;\n  if (style.boxSizing === 'content-box') {\n    const borders = getPositionedStyle(style, 'border', 'width');\n    const paddings = getPositionedStyle(style, 'padding');\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  width = Math.max(0, width - margins.width);\n  height = Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height - margins.height);\n  width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n  height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n  if (width && !height) {\n    height = round1(width / 2);\n  }\n  return {\n    width,\n    height\n  };\n}\nfunction retinaScale(chart, forceRatio, forceStyle) {\n  const pixelRatio = forceRatio || 1;\n  const deviceHeight = Math.floor(chart.height * pixelRatio);\n  const deviceWidth = Math.floor(chart.width * pixelRatio);\n  chart.height = deviceHeight / pixelRatio;\n  chart.width = deviceWidth / pixelRatio;\n  const canvas = chart.canvas;\n  if (canvas.style && (forceStyle || (!canvas.style.height && !canvas.style.width))) {\n    canvas.style.height = `${chart.height}px`;\n    canvas.style.width = `${chart.width}px`;\n  }\n  if (chart.currentDevicePixelRatio !== pixelRatio\n      || canvas.height !== deviceHeight\n      || canvas.width !== deviceWidth) {\n    chart.currentDevicePixelRatio = pixelRatio;\n    canvas.height = deviceHeight;\n    canvas.width = deviceWidth;\n    chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n    return true;\n  }\n  return false;\n}\nconst supportsEventListenerOptions = (function() {\n  let passiveSupported = false;\n  try {\n    const options = {\n      get passive() {\n        passiveSupported = true;\n        return false;\n      }\n    };\n    window.addEventListener('test', null, options);\n    window.removeEventListener('test', null, options);\n  } catch (e) {\n  }\n  return passiveSupported;\n}());\nfunction readUsedSize(element, property) {\n  const value = getStyle(element, property);\n  const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n  return matches ? +matches[1] : undefined;\n}\n\nfunction _pointInLine(p1, p2, t, mode) {\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: p1.y + t * (p2.y - p1.y)\n  };\n}\nfunction _steppedInterpolation(p1, p2, t, mode) {\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y\n    : mode === 'after' ? t < 1 ? p1.y : p2.y\n    : t > 0 ? p2.y : p1.y\n  };\n}\nfunction _bezierInterpolation(p1, p2, t, mode) {\n  const cp1 = {x: p1.cp2x, y: p1.cp2y};\n  const cp2 = {x: p2.cp1x, y: p2.cp1y};\n  const a = _pointInLine(p1, cp1, t);\n  const b = _pointInLine(cp1, cp2, t);\n  const c = _pointInLine(cp2, p2, t);\n  const d = _pointInLine(a, b, t);\n  const e = _pointInLine(b, c, t);\n  return _pointInLine(d, e, t);\n}\n\nconst intlCache = new Map();\nfunction getNumberFormat(locale, options) {\n  options = options || {};\n  const cacheKey = locale + JSON.stringify(options);\n  let formatter = intlCache.get(cacheKey);\n  if (!formatter) {\n    formatter = new Intl.NumberFormat(locale, options);\n    intlCache.set(cacheKey, formatter);\n  }\n  return formatter;\n}\nfunction formatNumber(num, locale, options) {\n  return getNumberFormat(locale, options).format(num);\n}\n\nconst getRightToLeftAdapter = function(rectX, width) {\n  return {\n    x(x) {\n      return rectX + rectX + width - x;\n    },\n    setWidth(w) {\n      width = w;\n    },\n    textAlign(align) {\n      if (align === 'center') {\n        return align;\n      }\n      return align === 'right' ? 'left' : 'right';\n    },\n    xPlus(x, value) {\n      return x - value;\n    },\n    leftForLtr(x, itemWidth) {\n      return x - itemWidth;\n    },\n  };\n};\nconst getLeftToRightAdapter = function() {\n  return {\n    x(x) {\n      return x;\n    },\n    setWidth(w) {\n    },\n    textAlign(align) {\n      return align;\n    },\n    xPlus(x, value) {\n      return x + value;\n    },\n    leftForLtr(x, _itemWidth) {\n      return x;\n    },\n  };\n};\nfunction getRtlAdapter(rtl, rectX, width) {\n  return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n}\nfunction overrideTextDirection(ctx, direction) {\n  let style, original;\n  if (direction === 'ltr' || direction === 'rtl') {\n    style = ctx.canvas.style;\n    original = [\n      style.getPropertyValue('direction'),\n      style.getPropertyPriority('direction'),\n    ];\n    style.setProperty('direction', direction, 'important');\n    ctx.prevTextDirection = original;\n  }\n}\nfunction restoreTextDirection(ctx, original) {\n  if (original !== undefined) {\n    delete ctx.prevTextDirection;\n    ctx.canvas.style.setProperty('direction', original[0], original[1]);\n  }\n}\n\nfunction propertyFn(property) {\n  if (property === 'angle') {\n    return {\n      between: _angleBetween,\n      compare: _angleDiff,\n      normalize: _normalizeAngle,\n    };\n  }\n  return {\n    between: _isBetween,\n    compare: (a, b) => a - b,\n    normalize: x => x\n  };\n}\nfunction normalizeSegment({start, end, count, loop, style}) {\n  return {\n    start: start % count,\n    end: end % count,\n    loop: loop && (end - start + 1) % count === 0,\n    style\n  };\n}\nfunction getSegment(segment, points, bounds) {\n  const {property, start: startBound, end: endBound} = bounds;\n  const {between, normalize} = propertyFn(property);\n  const count = points.length;\n  let {start, end, loop} = segment;\n  let i, ilen;\n  if (loop) {\n    start += count;\n    end += count;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      if (!between(normalize(points[start % count][property]), startBound, endBound)) {\n        break;\n      }\n      start--;\n      end--;\n    }\n    start %= count;\n    end %= count;\n  }\n  if (end < start) {\n    end += count;\n  }\n  return {start, end, loop, style: segment.style};\n}\nfunction _boundSegment(segment, points, bounds) {\n  if (!bounds) {\n    return [segment];\n  }\n  const {property, start: startBound, end: endBound} = bounds;\n  const count = points.length;\n  const {compare, between, normalize} = propertyFn(property);\n  const {start, end, loop, style} = getSegment(segment, points, bounds);\n  const result = [];\n  let inside = false;\n  let subStart = null;\n  let value, point, prevValue;\n  const startIsBefore = () => between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\n  const endIsBefore = () => compare(endBound, value) === 0 || between(endBound, prevValue, value);\n  const shouldStart = () => inside || startIsBefore();\n  const shouldStop = () => !inside || endIsBefore();\n  for (let i = start, prev = start; i <= end; ++i) {\n    point = points[i % count];\n    if (point.skip) {\n      continue;\n    }\n    value = normalize(point[property]);\n    if (value === prevValue) {\n      continue;\n    }\n    inside = between(value, startBound, endBound);\n    if (subStart === null && shouldStart()) {\n      subStart = compare(value, startBound) === 0 ? i : prev;\n    }\n    if (subStart !== null && shouldStop()) {\n      result.push(normalizeSegment({start: subStart, end: i, loop, count, style}));\n      subStart = null;\n    }\n    prev = i;\n    prevValue = value;\n  }\n  if (subStart !== null) {\n    result.push(normalizeSegment({start: subStart, end, loop, count, style}));\n  }\n  return result;\n}\nfunction _boundSegments(line, bounds) {\n  const result = [];\n  const segments = line.segments;\n  for (let i = 0; i < segments.length; i++) {\n    const sub = _boundSegment(segments[i], line.points, bounds);\n    if (sub.length) {\n      result.push(...sub);\n    }\n  }\n  return result;\n}\nfunction findStartAndEnd(points, count, loop, spanGaps) {\n  let start = 0;\n  let end = count - 1;\n  if (loop && !spanGaps) {\n    while (start < count && !points[start].skip) {\n      start++;\n    }\n  }\n  while (start < count && points[start].skip) {\n    start++;\n  }\n  start %= count;\n  if (loop) {\n    end += start;\n  }\n  while (end > start && points[end % count].skip) {\n    end--;\n  }\n  end %= count;\n  return {start, end};\n}\nfunction solidSegments(points, start, max, loop) {\n  const count = points.length;\n  const result = [];\n  let last = start;\n  let prev = points[start];\n  let end;\n  for (end = start + 1; end <= max; ++end) {\n    const cur = points[end % count];\n    if (cur.skip || cur.stop) {\n      if (!prev.skip) {\n        loop = false;\n        result.push({start: start % count, end: (end - 1) % count, loop});\n        start = last = cur.stop ? end : null;\n      }\n    } else {\n      last = end;\n      if (prev.skip) {\n        start = end;\n      }\n    }\n    prev = cur;\n  }\n  if (last !== null) {\n    result.push({start: start % count, end: last % count, loop});\n  }\n  return result;\n}\nfunction _computeSegments(line, segmentOptions) {\n  const points = line.points;\n  const spanGaps = line.options.spanGaps;\n  const count = points.length;\n  if (!count) {\n    return [];\n  }\n  const loop = !!line._loop;\n  const {start, end} = findStartAndEnd(points, count, loop, spanGaps);\n  if (spanGaps === true) {\n    return splitByStyles(line, [{start, end, loop}], points, segmentOptions);\n  }\n  const max = end < start ? end + count : end;\n  const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\n  return splitByStyles(line, solidSegments(points, start, max, completeLoop), points, segmentOptions);\n}\nfunction splitByStyles(line, segments, points, segmentOptions) {\n  if (!segmentOptions || !segmentOptions.setContext || !points) {\n    return segments;\n  }\n  return doSplitByStyles(line, segments, points, segmentOptions);\n}\nfunction doSplitByStyles(line, segments, points, segmentOptions) {\n  const chartContext = line._chart.getContext();\n  const baseStyle = readStyle(line.options);\n  const {_datasetIndex: datasetIndex, options: {spanGaps}} = line;\n  const count = points.length;\n  const result = [];\n  let prevStyle = baseStyle;\n  let start = segments[0].start;\n  let i = start;\n  function addStyle(s, e, l, st) {\n    const dir = spanGaps ? -1 : 1;\n    if (s === e) {\n      return;\n    }\n    s += count;\n    while (points[s % count].skip) {\n      s -= dir;\n    }\n    while (points[e % count].skip) {\n      e += dir;\n    }\n    if (s % count !== e % count) {\n      result.push({start: s % count, end: e % count, loop: l, style: st});\n      prevStyle = st;\n      start = e % count;\n    }\n  }\n  for (const segment of segments) {\n    start = spanGaps ? start : segment.start;\n    let prev = points[start % count];\n    let style;\n    for (i = start + 1; i <= segment.end; i++) {\n      const pt = points[i % count];\n      style = readStyle(segmentOptions.setContext(createContext(chartContext, {\n        type: 'segment',\n        p0: prev,\n        p1: pt,\n        p0DataIndex: (i - 1) % count,\n        p1DataIndex: i % count,\n        datasetIndex\n      })));\n      if (styleChanged(style, prevStyle)) {\n        addStyle(start, i - 1, segment.loop, prevStyle);\n      }\n      prev = pt;\n      prevStyle = style;\n    }\n    if (start < i - 1) {\n      addStyle(start, i - 1, segment.loop, prevStyle);\n    }\n  }\n  return result;\n}\nfunction readStyle(options) {\n  return {\n    backgroundColor: options.backgroundColor,\n    borderCapStyle: options.borderCapStyle,\n    borderDash: options.borderDash,\n    borderDashOffset: options.borderDashOffset,\n    borderJoinStyle: options.borderJoinStyle,\n    borderWidth: options.borderWidth,\n    borderColor: options.borderColor\n  };\n}\nfunction styleChanged(style, prevStyle) {\n  return prevStyle && JSON.stringify(style) !== JSON.stringify(prevStyle);\n}\n\nexport { toFont as $, _rlookupByKey as A, _isPointInArea as B, getAngleFromPoint as C, toPadding as D, each as E, getMaximumSize as F, _getParentNode as G, HALF_PI as H, readUsedSize as I, throttled as J, supportsEventListenerOptions as K, _isDomSupported as L, log10 as M, _factorize as N, finiteOrDefault as O, PI as P, callback as Q, _addGrace as R, toDegrees as S, TAU as T, _measureText as U, _int16Range as V, _alignPixel as W, clipArea as X, renderText as Y, unclipArea as Z, _arrayUnique as _, resolve as a, QUARTER_PI as a$, _toLeftRightCenter as a0, _alignStartEnd as a1, overrides as a2, merge as a3, _capitalize as a4, descriptors as a5, isFunction as a6, _attachContext as a7, _createResolver as a8, _descriptors as a9, _textX as aA, restoreTextDirection as aB, noop as aC, distanceBetweenPoints as aD, _setMinAndMaxByKey as aE, niceNum as aF, almostWhole as aG, almostEquals as aH, _decimalPlaces as aI, _longestText as aJ, _filterBetween as aK, _lookup as aL, isPatternOrGradient as aM, getHoverColor as aN, clone$1 as aO, _merger as aP, _mergerIf as aQ, _deprecated as aR, toFontString as aS, splineCurve as aT, splineCurveMonotone as aU, getStyle as aV, fontString as aW, toLineHeight as aX, PITAU as aY, INFINITY as aZ, RAD_PER_DEG as a_, mergeIf as aa, uid as ab, debounce as ac, retinaScale as ad, clearCanvas as ae, setsEqual as af, _elementsEqual as ag, _isClickEvent as ah, _isBetween as ai, _readValueToProps as aj, _updateBezierControlPoints as ak, _computeSegments as al, _boundSegments as am, _steppedInterpolation as an, _bezierInterpolation as ao, _pointInLine as ap, _steppedLineTo as aq, _bezierCurveTo as ar, drawPoint as as, addRoundedRectPath as at, toTRBL as au, toTRBLCorners as av, _boundSegment as aw, _normalizeAngle as ax, getRtlAdapter as ay, overrideTextDirection as az, isArray as b, TWO_THIRDS_PI as b0, _angleDiff as b1, color as c, defaults as d, effects as e, resolveObjectKey as f, isNumberFinite as g, createContext as h, isObject as i, defined as j, isNullOrUndef as k, listenArrayEvents as l, toPercentage as m, toDimension as n, formatNumber as o, _angleBetween as p, isNumber as q, requestAnimFrame as r, sign as s, toRadians as t, unlistenArrayEvents as u, valueOrDefault as v, _limitValue as w, _lookupByKey as x, _parseObjectDataRadialScale as y, getRelativePosition as z };\n","/*!\n * Chart.js v3.8.0\n * https://www.chartjs.org\n * (c) 2022 Chart.js Contributors\n * Released under the MIT License\n */\nimport { r as requestAnimFrame, a as resolve, e as effects, c as color, d as defaults, i as isObject, b as isArray, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as createContext, j as defined, s as sign, k as isNullOrUndef, _ as _arrayUnique, t as toRadians, m as toPercentage, n as toDimension, T as TAU, o as formatNumber, p as _angleBetween, H as HALF_PI, P as PI, q as isNumber, w as _limitValue, x as _lookupByKey, y as _parseObjectDataRadialScale, z as getRelativePosition, A as _rlookupByKey, B as _isPointInArea, C as getAngleFromPoint, D as toPadding, E as each, F as getMaximumSize, G as _getParentNode, I as readUsedSize, J as throttled, K as supportsEventListenerOptions, L as _isDomSupported, M as log10, N as _factorize, O as finiteOrDefault, Q as callback, R as _addGrace, S as toDegrees, U as _measureText, V as _int16Range, W as _alignPixel, X as clipArea, Y as renderText, Z as unclipArea, $ as toFont, a0 as _toLeftRightCenter, a1 as _alignStartEnd, a2 as overrides, a3 as merge, a4 as _capitalize, a5 as descriptors, a6 as isFunction, a7 as _attachContext, a8 as _createResolver, a9 as _descriptors, aa as mergeIf, ab as uid, ac as debounce, ad as retinaScale, ae as clearCanvas, af as setsEqual, ag as _elementsEqual, ah as _isClickEvent, ai as _isBetween, aj as _readValueToProps, ak as _updateBezierControlPoints, al as _computeSegments, am as _boundSegments, an as _steppedInterpolation, ao as _bezierInterpolation, ap as _pointInLine, aq as _steppedLineTo, ar as _bezierCurveTo, as as drawPoint, at as addRoundedRectPath, au as toTRBL, av as toTRBLCorners, aw as _boundSegment, ax as _normalizeAngle, ay as getRtlAdapter, az as overrideTextDirection, aA as _textX, aB as restoreTextDirection, aC as noop, aD as distanceBetweenPoints, aE as _setMinAndMaxByKey, aF as niceNum, aG as almostWhole, aH as almostEquals, aI as _decimalPlaces, aJ as _longestText, aK as _filterBetween, aL as _lookup } from './chunks/helpers.segment.js';\nexport { d as defaults } from './chunks/helpers.segment.js';\n\nclass Animator {\n  constructor() {\n    this._request = null;\n    this._charts = new Map();\n    this._running = false;\n    this._lastDate = undefined;\n  }\n  _notify(chart, anims, date, type) {\n    const callbacks = anims.listeners[type];\n    const numSteps = anims.duration;\n    callbacks.forEach(fn => fn({\n      chart,\n      initial: anims.initial,\n      numSteps,\n      currentStep: Math.min(date - anims.start, numSteps)\n    }));\n  }\n  _refresh() {\n    if (this._request) {\n      return;\n    }\n    this._running = true;\n    this._request = requestAnimFrame.call(window, () => {\n      this._update();\n      this._request = null;\n      if (this._running) {\n        this._refresh();\n      }\n    });\n  }\n  _update(date = Date.now()) {\n    let remaining = 0;\n    this._charts.forEach((anims, chart) => {\n      if (!anims.running || !anims.items.length) {\n        return;\n      }\n      const items = anims.items;\n      let i = items.length - 1;\n      let draw = false;\n      let item;\n      for (; i >= 0; --i) {\n        item = items[i];\n        if (item._active) {\n          if (item._total > anims.duration) {\n            anims.duration = item._total;\n          }\n          item.tick(date);\n          draw = true;\n        } else {\n          items[i] = items[items.length - 1];\n          items.pop();\n        }\n      }\n      if (draw) {\n        chart.draw();\n        this._notify(chart, anims, date, 'progress');\n      }\n      if (!items.length) {\n        anims.running = false;\n        this._notify(chart, anims, date, 'complete');\n        anims.initial = false;\n      }\n      remaining += items.length;\n    });\n    this._lastDate = date;\n    if (remaining === 0) {\n      this._running = false;\n    }\n  }\n  _getAnims(chart) {\n    const charts = this._charts;\n    let anims = charts.get(chart);\n    if (!anims) {\n      anims = {\n        running: false,\n        initial: true,\n        items: [],\n        listeners: {\n          complete: [],\n          progress: []\n        }\n      };\n      charts.set(chart, anims);\n    }\n    return anims;\n  }\n  listen(chart, event, cb) {\n    this._getAnims(chart).listeners[event].push(cb);\n  }\n  add(chart, items) {\n    if (!items || !items.length) {\n      return;\n    }\n    this._getAnims(chart).items.push(...items);\n  }\n  has(chart) {\n    return this._getAnims(chart).items.length > 0;\n  }\n  start(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims) {\n      return;\n    }\n    anims.running = true;\n    anims.start = Date.now();\n    anims.duration = anims.items.reduce((acc, cur) => Math.max(acc, cur._duration), 0);\n    this._refresh();\n  }\n  running(chart) {\n    if (!this._running) {\n      return false;\n    }\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.running || !anims.items.length) {\n      return false;\n    }\n    return true;\n  }\n  stop(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.items.length) {\n      return;\n    }\n    const items = anims.items;\n    let i = items.length - 1;\n    for (; i >= 0; --i) {\n      items[i].cancel();\n    }\n    anims.items = [];\n    this._notify(chart, anims, Date.now(), 'complete');\n  }\n  remove(chart) {\n    return this._charts.delete(chart);\n  }\n}\nvar animator = new Animator();\n\nconst transparent = 'transparent';\nconst interpolators = {\n  boolean(from, to, factor) {\n    return factor > 0.5 ? to : from;\n  },\n  color(from, to, factor) {\n    const c0 = color(from || transparent);\n    const c1 = c0.valid && color(to || transparent);\n    return c1 && c1.valid\n      ? c1.mix(c0, factor).hexString()\n      : to;\n  },\n  number(from, to, factor) {\n    return from + (to - from) * factor;\n  }\n};\nclass Animation {\n  constructor(cfg, target, prop, to) {\n    const currentValue = target[prop];\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\n    const from = resolve([cfg.from, currentValue, to]);\n    this._active = true;\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n    this._easing = effects[cfg.easing] || effects.linear;\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\n    this._duration = this._total = Math.floor(cfg.duration);\n    this._loop = !!cfg.loop;\n    this._target = target;\n    this._prop = prop;\n    this._from = from;\n    this._to = to;\n    this._promises = undefined;\n  }\n  active() {\n    return this._active;\n  }\n  update(cfg, to, date) {\n    if (this._active) {\n      this._notify(false);\n      const currentValue = this._target[this._prop];\n      const elapsed = date - this._start;\n      const remain = this._duration - elapsed;\n      this._start = date;\n      this._duration = Math.floor(Math.max(remain, cfg.duration));\n      this._total += elapsed;\n      this._loop = !!cfg.loop;\n      this._to = resolve([cfg.to, to, currentValue, cfg.from]);\n      this._from = resolve([cfg.from, currentValue, to]);\n    }\n  }\n  cancel() {\n    if (this._active) {\n      this.tick(Date.now());\n      this._active = false;\n      this._notify(false);\n    }\n  }\n  tick(date) {\n    const elapsed = date - this._start;\n    const duration = this._duration;\n    const prop = this._prop;\n    const from = this._from;\n    const loop = this._loop;\n    const to = this._to;\n    let factor;\n    this._active = from !== to && (loop || (elapsed < duration));\n    if (!this._active) {\n      this._target[prop] = to;\n      this._notify(true);\n      return;\n    }\n    if (elapsed < 0) {\n      this._target[prop] = from;\n      return;\n    }\n    factor = (elapsed / duration) % 2;\n    factor = loop && factor > 1 ? 2 - factor : factor;\n    factor = this._easing(Math.min(1, Math.max(0, factor)));\n    this._target[prop] = this._fn(from, to, factor);\n  }\n  wait() {\n    const promises = this._promises || (this._promises = []);\n    return new Promise((res, rej) => {\n      promises.push({res, rej});\n    });\n  }\n  _notify(resolved) {\n    const method = resolved ? 'res' : 'rej';\n    const promises = this._promises || [];\n    for (let i = 0; i < promises.length; i++) {\n      promises[i][method]();\n    }\n  }\n}\n\nconst numbers = ['x', 'y', 'borderWidth', 'radius', 'tension'];\nconst colors = ['color', 'borderColor', 'backgroundColor'];\ndefaults.set('animation', {\n  delay: undefined,\n  duration: 1000,\n  easing: 'easeOutQuart',\n  fn: undefined,\n  from: undefined,\n  loop: undefined,\n  to: undefined,\n  type: undefined,\n});\nconst animationOptions = Object.keys(defaults.animation);\ndefaults.describe('animation', {\n  _fallback: false,\n  _indexable: false,\n  _scriptable: (name) => name !== 'onProgress' && name !== 'onComplete' && name !== 'fn',\n});\ndefaults.set('animations', {\n  colors: {\n    type: 'color',\n    properties: colors\n  },\n  numbers: {\n    type: 'number',\n    properties: numbers\n  },\n});\ndefaults.describe('animations', {\n  _fallback: 'animation',\n});\ndefaults.set('transitions', {\n  active: {\n    animation: {\n      duration: 400\n    }\n  },\n  resize: {\n    animation: {\n      duration: 0\n    }\n  },\n  show: {\n    animations: {\n      colors: {\n        from: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        duration: 0\n      },\n    }\n  },\n  hide: {\n    animations: {\n      colors: {\n        to: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        easing: 'linear',\n        fn: v => v | 0\n      },\n    }\n  }\n});\nclass Animations {\n  constructor(chart, config) {\n    this._chart = chart;\n    this._properties = new Map();\n    this.configure(config);\n  }\n  configure(config) {\n    if (!isObject(config)) {\n      return;\n    }\n    const animatedProps = this._properties;\n    Object.getOwnPropertyNames(config).forEach(key => {\n      const cfg = config[key];\n      if (!isObject(cfg)) {\n        return;\n      }\n      const resolved = {};\n      for (const option of animationOptions) {\n        resolved[option] = cfg[option];\n      }\n      (isArray(cfg.properties) && cfg.properties || [key]).forEach((prop) => {\n        if (prop === key || !animatedProps.has(prop)) {\n          animatedProps.set(prop, resolved);\n        }\n      });\n    });\n  }\n  _animateOptions(target, values) {\n    const newOptions = values.options;\n    const options = resolveTargetOptions(target, newOptions);\n    if (!options) {\n      return [];\n    }\n    const animations = this._createAnimations(options, newOptions);\n    if (newOptions.$shared) {\n      awaitAll(target.options.$animations, newOptions).then(() => {\n        target.options = newOptions;\n      }, () => {\n      });\n    }\n    return animations;\n  }\n  _createAnimations(target, values) {\n    const animatedProps = this._properties;\n    const animations = [];\n    const running = target.$animations || (target.$animations = {});\n    const props = Object.keys(values);\n    const date = Date.now();\n    let i;\n    for (i = props.length - 1; i >= 0; --i) {\n      const prop = props[i];\n      if (prop.charAt(0) === '$') {\n        continue;\n      }\n      if (prop === 'options') {\n        animations.push(...this._animateOptions(target, values));\n        continue;\n      }\n      const value = values[prop];\n      let animation = running[prop];\n      const cfg = animatedProps.get(prop);\n      if (animation) {\n        if (cfg && animation.active()) {\n          animation.update(cfg, value, date);\n          continue;\n        } else {\n          animation.cancel();\n        }\n      }\n      if (!cfg || !cfg.duration) {\n        target[prop] = value;\n        continue;\n      }\n      running[prop] = animation = new Animation(cfg, target, prop, value);\n      animations.push(animation);\n    }\n    return animations;\n  }\n  update(target, values) {\n    if (this._properties.size === 0) {\n      Object.assign(target, values);\n      return;\n    }\n    const animations = this._createAnimations(target, values);\n    if (animations.length) {\n      animator.add(this._chart, animations);\n      return true;\n    }\n  }\n}\nfunction awaitAll(animations, properties) {\n  const running = [];\n  const keys = Object.keys(properties);\n  for (let i = 0; i < keys.length; i++) {\n    const anim = animations[keys[i]];\n    if (anim && anim.active()) {\n      running.push(anim.wait());\n    }\n  }\n  return Promise.all(running);\n}\nfunction resolveTargetOptions(target, newOptions) {\n  if (!newOptions) {\n    return;\n  }\n  let options = target.options;\n  if (!options) {\n    target.options = newOptions;\n    return;\n  }\n  if (options.$shared) {\n    target.options = options = Object.assign({}, options, {$shared: false, $animations: {}});\n  }\n  return options;\n}\n\nfunction scaleClip(scale, allowedOverflow) {\n  const opts = scale && scale.options || {};\n  const reverse = opts.reverse;\n  const min = opts.min === undefined ? allowedOverflow : 0;\n  const max = opts.max === undefined ? allowedOverflow : 0;\n  return {\n    start: reverse ? max : min,\n    end: reverse ? min : max\n  };\n}\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n  if (allowedOverflow === false) {\n    return false;\n  }\n  const x = scaleClip(xScale, allowedOverflow);\n  const y = scaleClip(yScale, allowedOverflow);\n  return {\n    top: y.end,\n    right: x.end,\n    bottom: y.start,\n    left: x.start\n  };\n}\nfunction toClip(value) {\n  let t, r, b, l;\n  if (isObject(value)) {\n    t = value.top;\n    r = value.right;\n    b = value.bottom;\n    l = value.left;\n  } else {\n    t = r = b = l = value;\n  }\n  return {\n    top: t,\n    right: r,\n    bottom: b,\n    left: l,\n    disabled: value === false\n  };\n}\nfunction getSortedDatasetIndices(chart, filterVisible) {\n  const keys = [];\n  const metasets = chart._getSortedDatasetMetas(filterVisible);\n  let i, ilen;\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n    keys.push(metasets[i].index);\n  }\n  return keys;\n}\nfunction applyStack(stack, value, dsIndex, options = {}) {\n  const keys = stack.keys;\n  const singleMode = options.mode === 'single';\n  let i, ilen, datasetIndex, otherValue;\n  if (value === null) {\n    return;\n  }\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    datasetIndex = +keys[i];\n    if (datasetIndex === dsIndex) {\n      if (options.all) {\n        continue;\n      }\n      break;\n    }\n    otherValue = stack.values[datasetIndex];\n    if (isNumberFinite(otherValue) && (singleMode || (value === 0 || sign(value) === sign(otherValue)))) {\n      value += otherValue;\n    }\n  }\n  return value;\n}\nfunction convertObjectDataToArray(data) {\n  const keys = Object.keys(data);\n  const adata = new Array(keys.length);\n  let i, ilen, key;\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    adata[i] = {\n      x: key,\n      y: data[key]\n    };\n  }\n  return adata;\n}\nfunction isStacked(scale, meta) {\n  const stacked = scale && scale.options.stacked;\n  return stacked || (stacked === undefined && meta.stack !== undefined);\n}\nfunction getStackKey(indexScale, valueScale, meta) {\n  return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\nfunction getUserBounds(scale) {\n  const {min, max, minDefined, maxDefined} = scale.getUserBounds();\n  return {\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\n  };\n}\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n  const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n  return subStack[indexValue] || (subStack[indexValue] = {});\n}\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n  for (const meta of vScale.getMatchingVisibleMetas(type).reverse()) {\n    const value = stack[meta.index];\n    if ((positive && value > 0) || (!positive && value < 0)) {\n      return meta.index;\n    }\n  }\n  return null;\n}\nfunction updateStacks(controller, parsed) {\n  const {chart, _cachedMeta: meta} = controller;\n  const stacks = chart._stacks || (chart._stacks = {});\n  const {iScale, vScale, index: datasetIndex} = meta;\n  const iAxis = iScale.axis;\n  const vAxis = vScale.axis;\n  const key = getStackKey(iScale, vScale, meta);\n  const ilen = parsed.length;\n  let stack;\n  for (let i = 0; i < ilen; ++i) {\n    const item = parsed[i];\n    const {[iAxis]: index, [vAxis]: value} = item;\n    const itemStacks = item._stacks || (item._stacks = {});\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n    stack[datasetIndex] = value;\n    stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n    stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n  }\n}\nfunction getFirstScaleId(chart, axis) {\n  const scales = chart.scales;\n  return Object.keys(scales).filter(key => scales[key].axis === axis).shift();\n}\nfunction createDatasetContext(parent, index) {\n  return createContext(parent,\n    {\n      active: false,\n      dataset: undefined,\n      datasetIndex: index,\n      index,\n      mode: 'default',\n      type: 'dataset'\n    }\n  );\n}\nfunction createDataContext(parent, index, element) {\n  return createContext(parent, {\n    active: false,\n    dataIndex: index,\n    parsed: undefined,\n    raw: undefined,\n    element,\n    index,\n    mode: 'default',\n    type: 'data'\n  });\n}\nfunction clearStacks(meta, items) {\n  const datasetIndex = meta.controller.index;\n  const axis = meta.vScale && meta.vScale.axis;\n  if (!axis) {\n    return;\n  }\n  items = items || meta._parsed;\n  for (const parsed of items) {\n    const stacks = parsed._stacks;\n    if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n      return;\n    }\n    delete stacks[axis][datasetIndex];\n  }\n}\nconst isDirectUpdateMode = (mode) => mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared) => shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart) => canStack && !meta.hidden && meta._stacked\n  && {keys: getSortedDatasetIndices(chart, true), values: null};\nclass DatasetController {\n  constructor(chart, datasetIndex) {\n    this.chart = chart;\n    this._ctx = chart.ctx;\n    this.index = datasetIndex;\n    this._cachedDataOpts = {};\n    this._cachedMeta = this.getMeta();\n    this._type = this._cachedMeta.type;\n    this.options = undefined;\n    this._parsing = false;\n    this._data = undefined;\n    this._objectData = undefined;\n    this._sharedOptions = undefined;\n    this._drawStart = undefined;\n    this._drawCount = undefined;\n    this.enableOptionSharing = false;\n    this.supportsDecimation = false;\n    this.$context = undefined;\n    this._syncList = [];\n    this.initialize();\n  }\n  initialize() {\n    const meta = this._cachedMeta;\n    this.configure();\n    this.linkScales();\n    meta._stacked = isStacked(meta.vScale, meta);\n    this.addElements();\n  }\n  updateIndex(datasetIndex) {\n    if (this.index !== datasetIndex) {\n      clearStacks(this._cachedMeta);\n    }\n    this.index = datasetIndex;\n  }\n  linkScales() {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n    const chooseId = (axis, x, y, r) => axis === 'x' ? x : axis === 'r' ? r : y;\n    const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n    const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n    const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n    const indexAxis = meta.indexAxis;\n    const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n    const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n    meta.xScale = this.getScaleForId(xid);\n    meta.yScale = this.getScaleForId(yid);\n    meta.rScale = this.getScaleForId(rid);\n    meta.iScale = this.getScaleForId(iid);\n    meta.vScale = this.getScaleForId(vid);\n  }\n  getDataset() {\n    return this.chart.data.datasets[this.index];\n  }\n  getMeta() {\n    return this.chart.getDatasetMeta(this.index);\n  }\n  getScaleForId(scaleID) {\n    return this.chart.scales[scaleID];\n  }\n  _getOtherScale(scale) {\n    const meta = this._cachedMeta;\n    return scale === meta.iScale\n      ? meta.vScale\n      : meta.iScale;\n  }\n  reset() {\n    this._update('reset');\n  }\n  _destroy() {\n    const meta = this._cachedMeta;\n    if (this._data) {\n      unlistenArrayEvents(this._data, this);\n    }\n    if (meta._stacked) {\n      clearStacks(meta);\n    }\n  }\n  _dataCheck() {\n    const dataset = this.getDataset();\n    const data = dataset.data || (dataset.data = []);\n    const _data = this._data;\n    if (isObject(data)) {\n      this._data = convertObjectDataToArray(data);\n    } else if (_data !== data) {\n      if (_data) {\n        unlistenArrayEvents(_data, this);\n        const meta = this._cachedMeta;\n        clearStacks(meta);\n        meta._parsed = [];\n      }\n      if (data && Object.isExtensible(data)) {\n        listenArrayEvents(data, this);\n      }\n      this._syncList = [];\n      this._data = data;\n    }\n  }\n  addElements() {\n    const meta = this._cachedMeta;\n    this._dataCheck();\n    if (this.datasetElementType) {\n      meta.dataset = new this.datasetElementType();\n    }\n  }\n  buildOrUpdateElements(resetNewElements) {\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n    let stackChanged = false;\n    this._dataCheck();\n    const oldStacked = meta._stacked;\n    meta._stacked = isStacked(meta.vScale, meta);\n    if (meta.stack !== dataset.stack) {\n      stackChanged = true;\n      clearStacks(meta);\n      meta.stack = dataset.stack;\n    }\n    this._resyncElements(resetNewElements);\n    if (stackChanged || oldStacked !== meta._stacked) {\n      updateStacks(this, meta._parsed);\n    }\n  }\n  configure() {\n    const config = this.chart.config;\n    const scopeKeys = config.datasetScopeKeys(this._type);\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n    this.options = config.createResolver(scopes, this.getContext());\n    this._parsing = this.options.parsing;\n    this._cachedDataOpts = {};\n  }\n  parse(start, count) {\n    const {_cachedMeta: meta, _data: data} = this;\n    const {iScale, _stacked} = meta;\n    const iAxis = iScale.axis;\n    let sorted = start === 0 && count === data.length ? true : meta._sorted;\n    let prev = start > 0 && meta._parsed[start - 1];\n    let i, cur, parsed;\n    if (this._parsing === false) {\n      meta._parsed = data;\n      meta._sorted = true;\n      parsed = data;\n    } else {\n      if (isArray(data[start])) {\n        parsed = this.parseArrayData(meta, data, start, count);\n      } else if (isObject(data[start])) {\n        parsed = this.parseObjectData(meta, data, start, count);\n      } else {\n        parsed = this.parsePrimitiveData(meta, data, start, count);\n      }\n      const isNotInOrderComparedToPrev = () => cur[iAxis] === null || (prev && cur[iAxis] < prev[iAxis]);\n      for (i = 0; i < count; ++i) {\n        meta._parsed[i + start] = cur = parsed[i];\n        if (sorted) {\n          if (isNotInOrderComparedToPrev()) {\n            sorted = false;\n          }\n          prev = cur;\n        }\n      }\n      meta._sorted = sorted;\n    }\n    if (_stacked) {\n      updateStacks(this, parsed);\n    }\n  }\n  parsePrimitiveData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = new Array(count);\n    let i, ilen, index;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      parsed[i] = {\n        [iAxis]: singleScale || iScale.parse(labels[index], index),\n        [vAxis]: vScale.parse(data[index], index)\n      };\n    }\n    return parsed;\n  }\n  parseArrayData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(item[0], index),\n        y: yScale.parse(item[1], index)\n      };\n    }\n    return parsed;\n  }\n  parseObjectData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n      };\n    }\n    return parsed;\n  }\n  getParsed(index) {\n    return this._cachedMeta._parsed[index];\n  }\n  getDataElement(index) {\n    return this._cachedMeta.data[index];\n  }\n  applyStack(scale, parsed, mode) {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const value = parsed[scale.axis];\n    const stack = {\n      keys: getSortedDatasetIndices(chart, true),\n      values: parsed._stacks[scale.axis]\n    };\n    return applyStack(stack, value, meta.index, {mode});\n  }\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    const parsedValue = parsed[scale.axis];\n    let value = parsedValue === null ? NaN : parsedValue;\n    const values = stack && parsed._stacks[scale.axis];\n    if (stack && values) {\n      stack.values = values;\n      value = applyStack(stack, parsedValue, this._cachedMeta.index);\n    }\n    range.min = Math.min(range.min, value);\n    range.max = Math.max(range.max, value);\n  }\n  getMinMax(scale, canStack) {\n    const meta = this._cachedMeta;\n    const _parsed = meta._parsed;\n    const sorted = meta._sorted && scale === meta.iScale;\n    const ilen = _parsed.length;\n    const otherScale = this._getOtherScale(scale);\n    const stack = createStack(canStack, meta, this.chart);\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n    const {min: otherMin, max: otherMax} = getUserBounds(otherScale);\n    let i, parsed;\n    function _skip() {\n      parsed = _parsed[i];\n      const otherValue = parsed[otherScale.axis];\n      return !isNumberFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n    }\n    for (i = 0; i < ilen; ++i) {\n      if (_skip()) {\n        continue;\n      }\n      this.updateRangeFromParsed(range, scale, parsed, stack);\n      if (sorted) {\n        break;\n      }\n    }\n    if (sorted) {\n      for (i = ilen - 1; i >= 0; --i) {\n        if (_skip()) {\n          continue;\n        }\n        this.updateRangeFromParsed(range, scale, parsed, stack);\n        break;\n      }\n    }\n    return range;\n  }\n  getAllParsedValues(scale) {\n    const parsed = this._cachedMeta._parsed;\n    const values = [];\n    let i, ilen, value;\n    for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n      value = parsed[i][scale.axis];\n      if (isNumberFinite(value)) {\n        values.push(value);\n      }\n    }\n    return values;\n  }\n  getMaxOverflow() {\n    return false;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const parsed = this.getParsed(index);\n    return {\n      label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n      value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n    };\n  }\n  _update(mode) {\n    const meta = this._cachedMeta;\n    this.update(mode || 'default');\n    meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n  }\n  update(mode) {}\n  draw() {\n    const ctx = this._ctx;\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const elements = meta.data || [];\n    const area = chart.chartArea;\n    const active = [];\n    const start = this._drawStart || 0;\n    const count = this._drawCount || (elements.length - start);\n    const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n    let i;\n    if (meta.dataset) {\n      meta.dataset.draw(ctx, area, start, count);\n    }\n    for (i = start; i < start + count; ++i) {\n      const element = elements[i];\n      if (element.hidden) {\n        continue;\n      }\n      if (element.active && drawActiveElementsOnTop) {\n        active.push(element);\n      } else {\n        element.draw(ctx, area);\n      }\n    }\n    for (i = 0; i < active.length; ++i) {\n      active[i].draw(ctx, area);\n    }\n  }\n  getStyle(index, active) {\n    const mode = active ? 'active' : 'default';\n    return index === undefined && this._cachedMeta.dataset\n      ? this.resolveDatasetElementOptions(mode)\n      : this.resolveDataElementOptions(index || 0, mode);\n  }\n  getContext(index, active, mode) {\n    const dataset = this.getDataset();\n    let context;\n    if (index >= 0 && index < this._cachedMeta.data.length) {\n      const element = this._cachedMeta.data[index];\n      context = element.$context ||\n        (element.$context = createDataContext(this.getContext(), index, element));\n      context.parsed = this.getParsed(index);\n      context.raw = dataset.data[index];\n      context.index = context.dataIndex = index;\n    } else {\n      context = this.$context ||\n        (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n      context.dataset = dataset;\n      context.index = context.datasetIndex = this.index;\n    }\n    context.active = !!active;\n    context.mode = mode;\n    return context;\n  }\n  resolveDatasetElementOptions(mode) {\n    return this._resolveElementOptions(this.datasetElementType.id, mode);\n  }\n  resolveDataElementOptions(index, mode) {\n    return this._resolveElementOptions(this.dataElementType.id, mode, index);\n  }\n  _resolveElementOptions(elementType, mode = 'default', index) {\n    const active = mode === 'active';\n    const cache = this._cachedDataOpts;\n    const cacheKey = elementType + '-' + mode;\n    const cached = cache[cacheKey];\n    const sharing = this.enableOptionSharing && defined(index);\n    if (cached) {\n      return cloneIfNotShared(cached, sharing);\n    }\n    const config = this.chart.config;\n    const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n    const prefixes = active ? [`${elementType}Hover`, 'hover', elementType, ''] : [elementType, ''];\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n    const names = Object.keys(defaults.elements[elementType]);\n    const context = () => this.getContext(index, active);\n    const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n    if (values.$shared) {\n      values.$shared = sharing;\n      cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n    }\n    return values;\n  }\n  _resolveAnimations(index, transition, active) {\n    const chart = this.chart;\n    const cache = this._cachedDataOpts;\n    const cacheKey = `animation-${transition}`;\n    const cached = cache[cacheKey];\n    if (cached) {\n      return cached;\n    }\n    let options;\n    if (chart.options.animation !== false) {\n      const config = this.chart.config;\n      const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n      const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n      options = config.createResolver(scopes, this.getContext(index, active, transition));\n    }\n    const animations = new Animations(chart, options && options.animations);\n    if (options && options._cacheable) {\n      cache[cacheKey] = Object.freeze(animations);\n    }\n    return animations;\n  }\n  getSharedOptions(options) {\n    if (!options.$shared) {\n      return;\n    }\n    return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n  }\n  includeOptions(mode, sharedOptions) {\n    return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n  }\n  updateElement(element, index, properties, mode) {\n    if (isDirectUpdateMode(mode)) {\n      Object.assign(element, properties);\n    } else {\n      this._resolveAnimations(index, mode).update(element, properties);\n    }\n  }\n  updateSharedOptions(sharedOptions, mode, newOptions) {\n    if (sharedOptions && !isDirectUpdateMode(mode)) {\n      this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n    }\n  }\n  _setStyle(element, index, mode, active) {\n    element.active = active;\n    const options = this.getStyle(index, active);\n    this._resolveAnimations(index, mode, active).update(element, {\n      options: (!active && this.getSharedOptions(options)) || options\n    });\n  }\n  removeHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', false);\n  }\n  setHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', true);\n  }\n  _removeDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n    if (element) {\n      this._setStyle(element, undefined, 'active', false);\n    }\n  }\n  _setDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n    if (element) {\n      this._setStyle(element, undefined, 'active', true);\n    }\n  }\n  _resyncElements(resetNewElements) {\n    const data = this._data;\n    const elements = this._cachedMeta.data;\n    for (const [method, arg1, arg2] of this._syncList) {\n      this[method](arg1, arg2);\n    }\n    this._syncList = [];\n    const numMeta = elements.length;\n    const numData = data.length;\n    const count = Math.min(numData, numMeta);\n    if (count) {\n      this.parse(0, count);\n    }\n    if (numData > numMeta) {\n      this._insertElements(numMeta, numData - numMeta, resetNewElements);\n    } else if (numData < numMeta) {\n      this._removeElements(numData, numMeta - numData);\n    }\n  }\n  _insertElements(start, count, resetNewElements = true) {\n    const meta = this._cachedMeta;\n    const data = meta.data;\n    const end = start + count;\n    let i;\n    const move = (arr) => {\n      arr.length += count;\n      for (i = arr.length - 1; i >= end; i--) {\n        arr[i] = arr[i - count];\n      }\n    };\n    move(data);\n    for (i = start; i < end; ++i) {\n      data[i] = new this.dataElementType();\n    }\n    if (this._parsing) {\n      move(meta._parsed);\n    }\n    this.parse(start, count);\n    if (resetNewElements) {\n      this.updateElements(data, start, count, 'reset');\n    }\n  }\n  updateElements(element, start, count, mode) {}\n  _removeElements(start, count) {\n    const meta = this._cachedMeta;\n    if (this._parsing) {\n      const removed = meta._parsed.splice(start, count);\n      if (meta._stacked) {\n        clearStacks(meta, removed);\n      }\n    }\n    meta.data.splice(start, count);\n  }\n  _sync(args) {\n    if (this._parsing) {\n      this._syncList.push(args);\n    } else {\n      const [method, arg1, arg2] = args;\n      this[method](arg1, arg2);\n    }\n    this.chart._dataChanges.push([this.index, ...args]);\n  }\n  _onDataPush() {\n    const count = arguments.length;\n    this._sync(['_insertElements', this.getDataset().data.length - count, count]);\n  }\n  _onDataPop() {\n    this._sync(['_removeElements', this._cachedMeta.data.length - 1, 1]);\n  }\n  _onDataShift() {\n    this._sync(['_removeElements', 0, 1]);\n  }\n  _onDataSplice(start, count) {\n    if (count) {\n      this._sync(['_removeElements', start, count]);\n    }\n    const newCount = arguments.length - 2;\n    if (newCount) {\n      this._sync(['_insertElements', start, newCount]);\n    }\n  }\n  _onDataUnshift() {\n    this._sync(['_insertElements', 0, arguments.length]);\n  }\n}\nDatasetController.defaults = {};\nDatasetController.prototype.datasetElementType = null;\nDatasetController.prototype.dataElementType = null;\n\nfunction getAllScaleValues(scale, type) {\n  if (!scale._cache.$bar) {\n    const visibleMetas = scale.getMatchingVisibleMetas(type);\n    let values = [];\n    for (let i = 0, ilen = visibleMetas.length; i < ilen; i++) {\n      values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n    }\n    scale._cache.$bar = _arrayUnique(values.sort((a, b) => a - b));\n  }\n  return scale._cache.$bar;\n}\nfunction computeMinSampleSize(meta) {\n  const scale = meta.iScale;\n  const values = getAllScaleValues(scale, meta.type);\n  let min = scale._length;\n  let i, ilen, curr, prev;\n  const updateMinAndPrev = () => {\n    if (curr === 32767 || curr === -32768) {\n      return;\n    }\n    if (defined(prev)) {\n      min = Math.min(min, Math.abs(curr - prev) || min);\n    }\n    prev = curr;\n  };\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    curr = scale.getPixelForValue(values[i]);\n    updateMinAndPrev();\n  }\n  prev = undefined;\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    updateMinAndPrev();\n  }\n  return min;\n}\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\n  const thickness = options.barThickness;\n  let size, ratio;\n  if (isNullOrUndef(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    size = thickness * stackCount;\n    ratio = 1;\n  }\n  return {\n    chunk: size / stackCount,\n    ratio,\n    start: ruler.pixels[index] - (size / 2)\n  };\n}\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\n  const pixels = ruler.pixels;\n  const curr = pixels[index];\n  let prev = index > 0 ? pixels[index - 1] : null;\n  let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  const percent = options.categoryPercentage;\n  if (prev === null) {\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n  }\n  if (next === null) {\n    next = curr + curr - prev;\n  }\n  const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n  const size = Math.abs(next - prev) / 2 * percent;\n  return {\n    chunk: size / stackCount,\n    ratio: options.barPercentage,\n    start\n  };\n}\nfunction parseFloatBar(entry, item, vScale, i) {\n  const startValue = vScale.parse(entry[0], i);\n  const endValue = vScale.parse(entry[1], i);\n  const min = Math.min(startValue, endValue);\n  const max = Math.max(startValue, endValue);\n  let barStart = min;\n  let barEnd = max;\n  if (Math.abs(min) > Math.abs(max)) {\n    barStart = max;\n    barEnd = min;\n  }\n  item[vScale.axis] = barEnd;\n  item._custom = {\n    barStart,\n    barEnd,\n    start: startValue,\n    end: endValue,\n    min,\n    max\n  };\n}\nfunction parseValue(entry, item, vScale, i) {\n  if (isArray(entry)) {\n    parseFloatBar(entry, item, vScale, i);\n  } else {\n    item[vScale.axis] = vScale.parse(entry, i);\n  }\n  return item;\n}\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n  const iScale = meta.iScale;\n  const vScale = meta.vScale;\n  const labels = iScale.getLabels();\n  const singleScale = iScale === vScale;\n  const parsed = [];\n  let i, ilen, item, entry;\n  for (i = start, ilen = start + count; i < ilen; ++i) {\n    entry = data[i];\n    item = {};\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n    parsed.push(parseValue(entry, item, vScale, i));\n  }\n  return parsed;\n}\nfunction isFloatBar(custom) {\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\nfunction barSign(size, vScale, actualBase) {\n  if (size !== 0) {\n    return sign(size);\n  }\n  return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\nfunction borderProps(properties) {\n  let reverse, start, end, top, bottom;\n  if (properties.horizontal) {\n    reverse = properties.base > properties.x;\n    start = 'left';\n    end = 'right';\n  } else {\n    reverse = properties.base < properties.y;\n    start = 'bottom';\n    end = 'top';\n  }\n  if (reverse) {\n    top = 'end';\n    bottom = 'start';\n  } else {\n    top = 'start';\n    bottom = 'end';\n  }\n  return {start, end, reverse, top, bottom};\n}\nfunction setBorderSkipped(properties, options, stack, index) {\n  let edge = options.borderSkipped;\n  const res = {};\n  if (!edge) {\n    properties.borderSkipped = res;\n    return;\n  }\n  const {start, end, reverse, top, bottom} = borderProps(properties);\n  if (edge === 'middle' && stack) {\n    properties.enableBorderRadius = true;\n    if ((stack._top || 0) === index) {\n      edge = top;\n    } else if ((stack._bottom || 0) === index) {\n      edge = bottom;\n    } else {\n      res[parseEdge(bottom, start, end, reverse)] = true;\n      edge = top;\n    }\n  }\n  res[parseEdge(edge, start, end, reverse)] = true;\n  properties.borderSkipped = res;\n}\nfunction parseEdge(edge, a, b, reverse) {\n  if (reverse) {\n    edge = swap(edge, a, b);\n    edge = startEnd(edge, b, a);\n  } else {\n    edge = startEnd(edge, a, b);\n  }\n  return edge;\n}\nfunction swap(orig, v1, v2) {\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\nfunction startEnd(v, start, end) {\n  return v === 'start' ? start : v === 'end' ? end : v;\n}\nfunction setInflateAmount(properties, {inflateAmount}, ratio) {\n  properties.inflateAmount = inflateAmount === 'auto'\n    ? ratio === 1 ? 0.33 : 0\n    : inflateAmount;\n}\nclass BarController extends DatasetController {\n  parsePrimitiveData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n  parseArrayData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n  parseObjectData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const parsed = [];\n    let i, ilen, item, obj;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      obj = data[i];\n      item = {};\n      item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n      parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n    }\n    return parsed;\n  }\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    super.updateRangeFromParsed(range, scale, parsed, stack);\n    const custom = parsed._custom;\n    if (custom && scale === this._cachedMeta.vScale) {\n      range.min = Math.min(range.min, custom.min);\n      range.max = Math.max(range.max, custom.max);\n    }\n  }\n  getMaxOverflow() {\n    return 0;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const {iScale, vScale} = meta;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const value = isFloatBar(custom)\n      ? '[' + custom.start + ', ' + custom.end + ']'\n      : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n    return {\n      label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n      value\n    };\n  }\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n    const meta = this._cachedMeta;\n    meta.stack = this.getDataset().stack;\n  }\n  update(mode) {\n    const meta = this._cachedMeta;\n    this.updateElements(meta.data, 0, meta.data.length, mode);\n  }\n  updateElements(bars, start, count, mode) {\n    const reset = mode === 'reset';\n    const {index, _cachedMeta: {vScale}} = this;\n    const base = vScale.getBasePixel();\n    const horizontal = vScale.isHorizontal();\n    const ruler = this._getRuler();\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    for (let i = start; i < start + count; i++) {\n      const parsed = this.getParsed(i);\n      const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {base, head: base} : this._calculateBarValuePixels(i);\n      const ipixels = this._calculateBarIndexPixels(i, ruler);\n      const stack = (parsed._stacks || {})[vScale.axis];\n      const properties = {\n        horizontal,\n        base: vpixels.base,\n        enableBorderRadius: !stack || isFloatBar(parsed._custom) || (index === stack._top || index === stack._bottom),\n        x: horizontal ? vpixels.head : ipixels.center,\n        y: horizontal ? ipixels.center : vpixels.head,\n        height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n        width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n      }\n      const options = properties.options || bars[i].options;\n      setBorderSkipped(properties, options, stack, index);\n      setInflateAmount(properties, options, ruler.ratio);\n      this.updateElement(bars[i], i, properties, mode);\n    }\n  }\n  _getStacks(last, dataIndex) {\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const metasets = iScale.getMatchingVisibleMetas(this._type);\n    const stacked = iScale.options.stacked;\n    const ilen = metasets.length;\n    const stacks = [];\n    let i, item;\n    for (i = 0; i < ilen; ++i) {\n      item = metasets[i];\n      if (!item.controller.options.grouped) {\n        continue;\n      }\n      if (typeof dataIndex !== 'undefined') {\n        const val = item.controller.getParsed(dataIndex)[\n          item.controller._cachedMeta.vScale.axis\n        ];\n        if (isNullOrUndef(val) || isNaN(val)) {\n          continue;\n        }\n      }\n      if (stacked === false || stacks.indexOf(item.stack) === -1 ||\n\t\t\t\t(stacked === undefined && item.stack === undefined)) {\n        stacks.push(item.stack);\n      }\n      if (item.index === last) {\n        break;\n      }\n    }\n    if (!stacks.length) {\n      stacks.push(undefined);\n    }\n    return stacks;\n  }\n  _getStackCount(index) {\n    return this._getStacks(undefined, index).length;\n  }\n  _getStackIndex(datasetIndex, name, dataIndex) {\n    const stacks = this._getStacks(datasetIndex, dataIndex);\n    const index = (name !== undefined)\n      ? stacks.indexOf(name)\n      : -1;\n    return (index === -1)\n      ? stacks.length - 1\n      : index;\n  }\n  _getRuler() {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const pixels = [];\n    let i, ilen;\n    for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\n      pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n    }\n    const barThickness = opts.barThickness;\n    const min = barThickness || computeMinSampleSize(meta);\n    return {\n      min,\n      pixels,\n      start: iScale._startPixel,\n      end: iScale._endPixel,\n      stackCount: this._getStackCount(),\n      scale: iScale,\n      grouped: opts.grouped,\n      ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n    };\n  }\n  _calculateBarValuePixels(index) {\n    const {_cachedMeta: {vScale, _stacked}, options: {base: baseValue, minBarLength}} = this;\n    const actualBase = baseValue || 0;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const floating = isFloatBar(custom);\n    let value = parsed[vScale.axis];\n    let start = 0;\n    let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n    let head, size;\n    if (length !== value) {\n      start = length - value;\n      length = value;\n    }\n    if (floating) {\n      value = custom.barStart;\n      length = custom.barEnd - custom.barStart;\n      if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n        start = 0;\n      }\n      start += value;\n    }\n    const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n    let base = vScale.getPixelForValue(startValue);\n    if (this.chart.getDataVisibility(index)) {\n      head = vScale.getPixelForValue(start + length);\n    } else {\n      head = base;\n    }\n    size = head - base;\n    if (Math.abs(size) < minBarLength) {\n      size = barSign(size, vScale, actualBase) * minBarLength;\n      if (value === actualBase) {\n        base -= size / 2;\n      }\n      const startPixel = vScale.getPixelForDecimal(0);\n      const endPixel = vScale.getPixelForDecimal(1);\n      const min = Math.min(startPixel, endPixel);\n      const max = Math.max(startPixel, endPixel);\n      base = Math.max(Math.min(base, max), min);\n      head = base + size;\n    }\n    if (base === vScale.getPixelForValue(actualBase)) {\n      const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n      base += halfGrid;\n      size -= halfGrid;\n    }\n    return {\n      size,\n      base,\n      head,\n      center: head + size / 2\n    };\n  }\n  _calculateBarIndexPixels(index, ruler) {\n    const scale = ruler.scale;\n    const options = this.options;\n    const skipNull = options.skipNull;\n    const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n    let center, size;\n    if (ruler.grouped) {\n      const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n      const range = options.barThickness === 'flex'\n        ? computeFlexCategoryTraits(index, ruler, options, stackCount)\n        : computeFitCategoryTraits(index, ruler, options, stackCount);\n      const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n      center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);\n      size = Math.min(maxBarThickness, range.chunk * range.ratio);\n    } else {\n      center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n      size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n    }\n    return {\n      base: center - size / 2,\n      head: center + size / 2,\n      center,\n      size\n    };\n  }\n  draw() {\n    const meta = this._cachedMeta;\n    const vScale = meta.vScale;\n    const rects = meta.data;\n    const ilen = rects.length;\n    let i = 0;\n    for (; i < ilen; ++i) {\n      if (this.getParsed(i)[vScale.axis] !== null) {\n        rects[i].draw(this._ctx);\n      }\n    }\n  }\n}\nBarController.id = 'bar';\nBarController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'bar',\n  categoryPercentage: 0.8,\n  barPercentage: 0.9,\n  grouped: true,\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'base', 'width', 'height']\n    }\n  }\n};\nBarController.overrides = {\n  scales: {\n    _index_: {\n      type: 'category',\n      offset: true,\n      grid: {\n        offset: true\n      }\n    },\n    _value_: {\n      type: 'linear',\n      beginAtZero: true,\n    }\n  }\n};\n\nclass BubbleController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n  parsePrimitiveData(meta, data, start, count) {\n    const parsed = super.parsePrimitiveData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n    }\n    return parsed;\n  }\n  parseArrayData(meta, data, start, count) {\n    const parsed = super.parseArrayData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n  parseObjectData(meta, data, start, count) {\n    const parsed = super.parseObjectData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n  getMaxOverflow() {\n    const data = this._cachedMeta.data;\n    let max = 0;\n    for (let i = data.length - 1; i >= 0; --i) {\n      max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n    }\n    return max > 0 && max;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const {xScale, yScale} = meta;\n    const parsed = this.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n    const r = parsed._custom;\n    return {\n      label: meta.label,\n      value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n    };\n  }\n  update(mode) {\n    const points = this._cachedMeta.data;\n    this.updateElements(points, 0, points.length, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale} = this._cachedMeta;\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const parsed = !reset && this.getParsed(i);\n      const properties = {};\n      const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n      const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel);\n      if (includeOptions) {\n        properties.options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n        if (reset) {\n          properties.options.radius = 0;\n        }\n      }\n      this.updateElement(point, i, properties, mode);\n    }\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  resolveDataElementOptions(index, mode) {\n    const parsed = this.getParsed(index);\n    let values = super.resolveDataElementOptions(index, mode);\n    if (values.$shared) {\n      values = Object.assign({}, values, {$shared: false});\n    }\n    const radius = values.radius;\n    if (mode !== 'active') {\n      values.radius = 0;\n    }\n    values.radius += valueOrDefault(parsed && parsed._custom, radius);\n    return values;\n  }\n}\nBubbleController.id = 'bubble';\nBubbleController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'point',\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'borderWidth', 'radius']\n    }\n  }\n};\nBubbleController.overrides = {\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        }\n      }\n    }\n  }\n};\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n  let ratioX = 1;\n  let ratioY = 1;\n  let offsetX = 0;\n  let offsetY = 0;\n  if (circumference < TAU) {\n    const startAngle = rotation;\n    const endAngle = startAngle + circumference;\n    const startX = Math.cos(startAngle);\n    const startY = Math.sin(startAngle);\n    const endX = Math.cos(endAngle);\n    const endY = Math.sin(endAngle);\n    const calcMax = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n    const calcMin = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n    const maxX = calcMax(0, startX, endX);\n    const maxY = calcMax(HALF_PI, startY, endY);\n    const minX = calcMin(PI, startX, endX);\n    const minY = calcMin(PI + HALF_PI, startY, endY);\n    ratioX = (maxX - minX) / 2;\n    ratioY = (maxY - minY) / 2;\n    offsetX = -(maxX + minX) / 2;\n    offsetY = -(maxY + minY) / 2;\n  }\n  return {ratioX, ratioY, offsetX, offsetY};\n}\nclass DoughnutController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.enableOptionSharing = true;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.offsetX = undefined;\n    this.offsetY = undefined;\n  }\n  linkScales() {}\n  parse(start, count) {\n    const data = this.getDataset().data;\n    const meta = this._cachedMeta;\n    if (this._parsing === false) {\n      meta._parsed = data;\n    } else {\n      let getter = (i) => +data[i];\n      if (isObject(data[start])) {\n        const {key = 'value'} = this._parsing;\n        getter = (i) => +resolveObjectKey(data[i], key);\n      }\n      let i, ilen;\n      for (i = start, ilen = start + count; i < ilen; ++i) {\n        meta._parsed[i] = getter(i);\n      }\n    }\n  }\n  _getRotation() {\n    return toRadians(this.options.rotation - 90);\n  }\n  _getCircumference() {\n    return toRadians(this.options.circumference);\n  }\n  _getRotationExtents() {\n    let min = TAU;\n    let max = -TAU;\n    for (let i = 0; i < this.chart.data.datasets.length; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        const controller = this.chart.getDatasetMeta(i).controller;\n        const rotation = controller._getRotation();\n        const circumference = controller._getCircumference();\n        min = Math.min(min, rotation);\n        max = Math.max(max, rotation + circumference);\n      }\n    }\n    return {\n      rotation: min,\n      circumference: max - min,\n    };\n  }\n  update(mode) {\n    const chart = this.chart;\n    const {chartArea} = chart;\n    const meta = this._cachedMeta;\n    const arcs = meta.data;\n    const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n    const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n    const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n    const chartWeight = this._getRingWeight(this.index);\n    const {circumference, rotation} = this._getRotationExtents();\n    const {ratioX, ratioY, offsetX, offsetY} = getRatioAndOffset(rotation, circumference, cutout);\n    const maxWidth = (chartArea.width - spacing) / ratioX;\n    const maxHeight = (chartArea.height - spacing) / ratioY;\n    const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n    const outerRadius = toDimension(this.options.radius, maxRadius);\n    const innerRadius = Math.max(outerRadius * cutout, 0);\n    const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n    this.offsetX = offsetX * outerRadius;\n    this.offsetY = offsetY * outerRadius;\n    meta.total = this.calculateTotal();\n    this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n    this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n  _circumference(i, reset) {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const circumference = this._getCircumference();\n    if ((reset && opts.animation.animateRotate) || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n      return 0;\n    }\n    return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n  }\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const centerX = (chartArea.left + chartArea.right) / 2;\n    const centerY = (chartArea.top + chartArea.bottom) / 2;\n    const animateScale = reset && animationOpts.animateScale;\n    const innerRadius = animateScale ? 0 : this.innerRadius;\n    const outerRadius = animateScale ? 0 : this.outerRadius;\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    let startAngle = this._getRotation();\n    let i;\n    for (i = 0; i < start; ++i) {\n      startAngle += this._circumference(i, reset);\n    }\n    for (i = start; i < start + count; ++i) {\n      const circumference = this._circumference(i, reset);\n      const arc = arcs[i];\n      const properties = {\n        x: centerX + this.offsetX,\n        y: centerY + this.offsetY,\n        startAngle,\n        endAngle: startAngle + circumference,\n        circumference,\n        outerRadius,\n        innerRadius\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n      }\n      startAngle += circumference;\n      this.updateElement(arc, i, properties, mode);\n    }\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  calculateTotal() {\n    const meta = this._cachedMeta;\n    const metaData = meta.data;\n    let total = 0;\n    let i;\n    for (i = 0; i < metaData.length; i++) {\n      const value = meta._parsed[i];\n      if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n        total += Math.abs(value);\n      }\n    }\n    return total;\n  }\n  calculateCircumference(value) {\n    const total = this._cachedMeta.total;\n    if (total > 0 && !isNaN(value)) {\n      return TAU * (Math.abs(value) / total);\n    }\n    return 0;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index], chart.options.locale);\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n  getMaxBorderWidth(arcs) {\n    let max = 0;\n    const chart = this.chart;\n    let i, ilen, meta, controller, options;\n    if (!arcs) {\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n          arcs = meta.data;\n          controller = meta.controller;\n          break;\n        }\n      }\n    }\n    if (!arcs) {\n      return 0;\n    }\n    for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n      options = controller.resolveDataElementOptions(i);\n      if (options.borderAlign !== 'inner') {\n        max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n      }\n    }\n    return max;\n  }\n  getMaxOffset(arcs) {\n    let max = 0;\n    for (let i = 0, ilen = arcs.length; i < ilen; ++i) {\n      const options = this.resolveDataElementOptions(i);\n      max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n    }\n    return max;\n  }\n  _getRingWeightOffset(datasetIndex) {\n    let ringWeightOffset = 0;\n    for (let i = 0; i < datasetIndex; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        ringWeightOffset += this._getRingWeight(i);\n      }\n    }\n    return ringWeightOffset;\n  }\n  _getRingWeight(datasetIndex) {\n    return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n  }\n  _getVisibleDatasetWeightTotal() {\n    return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n  }\n}\nDoughnutController.id = 'doughnut';\nDoughnutController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: false\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth', 'spacing']\n    },\n  },\n  cutout: '50%',\n  rotation: 0,\n  circumference: 360,\n  radius: '100%',\n  spacing: 0,\n  indexAxis: 'r',\n};\nDoughnutController.descriptors = {\n  _scriptable: (name) => name !== 'spacing',\n  _indexable: (name) => name !== 'spacing',\n};\nDoughnutController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            const {labels: {pointStyle}} = chart.legend.options;\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                pointStyle: pointStyle,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(tooltipItem) {\n          let dataLabel = tooltipItem.label;\n          const value = ': ' + tooltipItem.formattedValue;\n          if (isArray(dataLabel)) {\n            dataLabel = dataLabel.slice();\n            dataLabel[0] += value;\n          } else {\n            dataLabel += value;\n          }\n          return dataLabel;\n        }\n      }\n    }\n  }\n};\n\nclass LineController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    this.supportsDecimation = true;\n    super.initialize();\n  }\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {dataset: line, data: points = [], _dataset} = meta;\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n    this._drawStart = start;\n    this._drawCount = count;\n    if (scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n    line._chart = this.chart;\n    line._datasetIndex = this.index;\n    line._decimated = !!_dataset._decimated;\n    line.points = points;\n    const options = this.resolveDatasetElementOptions(mode);\n    if (!this.options.showLine) {\n      options.borderWidth = 0;\n    }\n    options.segment = this.options.segment;\n    this.updateElement(line, undefined, {\n      animated: !animationsDisabled,\n      options\n    }, mode);\n    this.updateElements(points, start, count, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n    for (let i = start; i < start + count; ++i) {\n      const point = points[i];\n      const parsed = this.getParsed(i);\n      const properties = directUpdate ? point : {};\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (Math.abs(parsed[iAxis] - prevParsed[iAxis])) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n      prevParsed = parsed;\n    }\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n    const data = meta.data || [];\n    if (!data.length) {\n      return border;\n    }\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n  draw() {\n    const meta = this._cachedMeta;\n    meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n    super.draw();\n  }\n}\nLineController.id = 'line';\nLineController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  showLine: true,\n  spanGaps: false,\n};\nLineController.overrides = {\n  scales: {\n    _index_: {\n      type: 'category',\n    },\n    _value_: {\n      type: 'linear',\n    },\n  }\n};\nfunction getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\n  const pointCount = points.length;\n  let start = 0;\n  let count = pointCount;\n  if (meta._sorted) {\n    const {iScale, _parsed} = meta;\n    const axis = iScale.axis;\n    const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n    if (minDefined) {\n      start = _limitValue(Math.min(\n        _lookupByKey(_parsed, iScale.axis, min).lo,\n        animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo),\n      0, pointCount - 1);\n    }\n    if (maxDefined) {\n      count = _limitValue(Math.max(\n        _lookupByKey(_parsed, iScale.axis, max).hi + 1,\n        animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max)).hi + 1),\n      start, pointCount) - start;\n    } else {\n      count = pointCount - start;\n    }\n  }\n  return {start, count};\n}\nfunction scaleRangesChanged(meta) {\n  const {xScale, yScale, _scaleRanges} = meta;\n  const newRanges = {\n    xmin: xScale.min,\n    xmax: xScale.max,\n    ymin: yScale.min,\n    ymax: yScale.max\n  };\n  if (!_scaleRanges) {\n    meta._scaleRanges = newRanges;\n    return true;\n  }\n  const changed = _scaleRanges.xmin !== xScale.min\n\t\t|| _scaleRanges.xmax !== xScale.max\n\t\t|| _scaleRanges.ymin !== yScale.min\n\t\t|| _scaleRanges.ymax !== yScale.max;\n  Object.assign(_scaleRanges, newRanges);\n  return changed;\n}\n\nclass PolarAreaController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n  update(mode) {\n    const arcs = this._cachedMeta.data;\n    this._updateRadius();\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n  getMinMax() {\n    const meta = this._cachedMeta;\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n    meta.data.forEach((element, index) => {\n      const parsed = this.getParsed(index).r;\n      if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\n        if (parsed < range.min) {\n          range.min = parsed;\n        }\n        if (parsed > range.max) {\n          range.max = parsed;\n        }\n      }\n    });\n    return range;\n  }\n  _updateRadius() {\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n    const outerRadius = Math.max(minSize / 2, 0);\n    const innerRadius = Math.max(opts.cutoutPercentage ? (outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);\n    const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n    this.outerRadius = outerRadius - (radiusLength * this.index);\n    this.innerRadius = this.outerRadius - radiusLength;\n  }\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const scale = this._cachedMeta.rScale;\n    const centerX = scale.xCenter;\n    const centerY = scale.yCenter;\n    const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n    let angle = datasetStartAngle;\n    let i;\n    const defaultAngle = 360 / this.countVisibleElements();\n    for (i = 0; i < start; ++i) {\n      angle += this._computeAngle(i, mode, defaultAngle);\n    }\n    for (i = start; i < start + count; i++) {\n      const arc = arcs[i];\n      let startAngle = angle;\n      let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n      let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n      angle = endAngle;\n      if (reset) {\n        if (animationOpts.animateScale) {\n          outerRadius = 0;\n        }\n        if (animationOpts.animateRotate) {\n          startAngle = endAngle = datasetStartAngle;\n        }\n      }\n      const properties = {\n        x: centerX,\n        y: centerY,\n        innerRadius: 0,\n        outerRadius,\n        startAngle,\n        endAngle,\n        options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n      };\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n  countVisibleElements() {\n    const meta = this._cachedMeta;\n    let count = 0;\n    meta.data.forEach((element, index) => {\n      if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\n        count++;\n      }\n    });\n    return count;\n  }\n  _computeAngle(index, mode, defaultAngle) {\n    return this.chart.getDataVisibility(index)\n      ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle)\n      : 0;\n  }\n}\nPolarAreaController.id = 'polarArea';\nPolarAreaController.defaults = {\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: true\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\n    },\n  },\n  indexAxis: 'r',\n  startAngle: 0,\n};\nPolarAreaController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            const {labels: {pointStyle}} = chart.legend.options;\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                pointStyle: pointStyle,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(context) {\n          return context.chart.data.labels[context.dataIndex] + ': ' + context.formattedValue;\n        }\n      }\n    }\n  },\n  scales: {\n    r: {\n      type: 'radialLinear',\n      angleLines: {\n        display: false\n      },\n      beginAtZero: true,\n      grid: {\n        circular: true\n      },\n      pointLabels: {\n        display: false\n      },\n      startAngle: 0\n    }\n  }\n};\n\nclass PieController extends DoughnutController {\n}\nPieController.id = 'pie';\nPieController.defaults = {\n  cutout: 0,\n  rotation: 0,\n  circumference: 360,\n  radius: '100%'\n};\n\nclass RadarController extends DatasetController {\n  getLabelAndValue(index) {\n    const vScale = this._cachedMeta.vScale;\n    const parsed = this.getParsed(index);\n    return {\n      label: vScale.getLabels()[index],\n      value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n    };\n  }\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n  update(mode) {\n    const meta = this._cachedMeta;\n    const line = meta.dataset;\n    const points = meta.data || [];\n    const labels = meta.iScale.getLabels();\n    line.points = points;\n    if (mode !== 'resize') {\n      const options = this.resolveDatasetElementOptions(mode);\n      if (!this.options.showLine) {\n        options.borderWidth = 0;\n      }\n      const properties = {\n        _loop: true,\n        _fullLoop: labels.length === points.length,\n        options\n      };\n      this.updateElement(line, undefined, properties, mode);\n    }\n    this.updateElements(points, 0, points.length, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const scale = this._cachedMeta.rScale;\n    const reset = mode === 'reset';\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n      const x = reset ? scale.xCenter : pointPosition.x;\n      const y = reset ? scale.yCenter : pointPosition.y;\n      const properties = {\n        x,\n        y,\n        angle: pointPosition.angle,\n        skip: isNaN(x) || isNaN(y),\n        options\n      };\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n}\nRadarController.id = 'radar';\nRadarController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  indexAxis: 'r',\n  showLine: true,\n  elements: {\n    line: {\n      fill: 'start'\n    }\n  },\n};\nRadarController.overrides = {\n  aspectRatio: 1,\n  scales: {\n    r: {\n      type: 'radialLinear',\n    }\n  }\n};\n\nclass ScatterController extends LineController {\n}\nScatterController.id = 'scatter';\nScatterController.defaults = {\n  showLine: false,\n  fill: false\n};\nScatterController.overrides = {\n  interaction: {\n    mode: 'point'\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(item) {\n          return '(' + item.label + ', ' + item.formattedValue + ')';\n        }\n      }\n    }\n  },\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  }\n};\n\nvar controllers = /*#__PURE__*/Object.freeze({\n__proto__: null,\nBarController: BarController,\nBubbleController: BubbleController,\nDoughnutController: DoughnutController,\nLineController: LineController,\nPolarAreaController: PolarAreaController,\nPieController: PieController,\nRadarController: RadarController,\nScatterController: ScatterController\n});\n\nfunction abstract() {\n  throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\nclass DateAdapter {\n  constructor(options) {\n    this.options = options || {};\n  }\n  formats() {\n    return abstract();\n  }\n  parse(value, format) {\n    return abstract();\n  }\n  format(timestamp, format) {\n    return abstract();\n  }\n  add(timestamp, amount, unit) {\n    return abstract();\n  }\n  diff(a, b, unit) {\n    return abstract();\n  }\n  startOf(timestamp, unit, weekday) {\n    return abstract();\n  }\n  endOf(timestamp, unit) {\n    return abstract();\n  }\n}\nDateAdapter.override = function(members) {\n  Object.assign(DateAdapter.prototype, members);\n};\nvar adapters = {\n  _date: DateAdapter\n};\n\nfunction binarySearch(metaset, axis, value, intersect) {\n  const {controller, data, _sorted} = metaset;\n  const iScale = controller._cachedMeta.iScale;\n  if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n    const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n    if (!intersect) {\n      return lookupMethod(data, axis, value);\n    } else if (controller._sharedOptions) {\n      const el = data[0];\n      const range = typeof el.getRange === 'function' && el.getRange(axis);\n      if (range) {\n        const start = lookupMethod(data, axis, value - range);\n        const end = lookupMethod(data, axis, value + range);\n        return {lo: start.lo, hi: end.hi};\n      }\n    }\n  }\n  return {lo: 0, hi: data.length - 1};\n}\nfunction evaluateInteractionItems(chart, axis, position, handler, intersect) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  const value = position[axis];\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    const {index, data} = metasets[i];\n    const {lo, hi} = binarySearch(metasets[i], axis, value, intersect);\n    for (let j = lo; j <= hi; ++j) {\n      const element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\nfunction getDistanceMetricForAxis(axis) {\n  const useX = axis.indexOf('x') !== -1;\n  const useY = axis.indexOf('y') !== -1;\n  return function(pt1, pt2) {\n    const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\nfunction getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n  const items = [];\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return items;\n  }\n  const evaluationFunc = function(element, datasetIndex, index) {\n    if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n      return;\n    }\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n  };\n  evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n  return items;\n}\nfunction getNearestRadialItems(chart, position, axis, useFinalPosition) {\n  let items = [];\n  function evaluationFunc(element, datasetIndex, index) {\n    const {startAngle, endAngle} = element.getProps(['startAngle', 'endAngle'], useFinalPosition);\n    const {angle} = getAngleFromPoint(element, {x: position.x, y: position.y});\n    if (_angleBetween(angle, startAngle, endAngle)) {\n      items.push({element, datasetIndex, index});\n    }\n  }\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\nfunction getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  let items = [];\n  const distanceMetric = getDistanceMetricForAxis(axis);\n  let minDistance = Number.POSITIVE_INFINITY;\n  function evaluationFunc(element, datasetIndex, index) {\n    const inRange = element.inRange(position.x, position.y, useFinalPosition);\n    if (intersect && !inRange) {\n      return;\n    }\n    const center = element.getCenterPoint(useFinalPosition);\n    const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n    if (!pointInArea && !inRange) {\n      return;\n    }\n    const distance = distanceMetric(position, center);\n    if (distance < minDistance) {\n      items = [{element, datasetIndex, index}];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      items.push({element, datasetIndex, index});\n    }\n  }\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return [];\n  }\n  return axis === 'r' && !intersect\n    ? getNearestRadialItems(chart, position, axis, useFinalPosition)\n    : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\nfunction getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n  const items = [];\n  const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n  let intersectsItem = false;\n  evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index) => {\n    if (element[rangeMethod](position[axis], useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n      intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n    }\n  });\n  if (intersect && !intersectsItem) {\n    return [];\n  }\n  return items;\n}\nvar Interaction = {\n  evaluateInteractionItems,\n  modes: {\n    index(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'x';\n      const includeInvisible = options.includeInvisible || false;\n      const items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible)\n        : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n      const elements = [];\n      if (!items.length) {\n        return [];\n      }\n      chart.getSortedVisibleDatasetMetas().forEach((meta) => {\n        const index = items[0].index;\n        const element = meta.data[index];\n        if (element && !element.skip) {\n          elements.push({element, datasetIndex: meta.index, index});\n        }\n      });\n      return elements;\n    },\n    dataset(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      let items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) :\n        getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n      if (items.length > 0) {\n        const datasetIndex = items[0].datasetIndex;\n        const data = chart.getDatasetMeta(datasetIndex).data;\n        items = [];\n        for (let i = 0; i < data.length; ++i) {\n          items.push({element: data[i], datasetIndex, index: i});\n        }\n      }\n      return items;\n    },\n    point(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n    },\n    nearest(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n    },\n    x(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n    },\n    y(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n    }\n  }\n};\n\nconst STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\nfunction filterByPosition(array, position) {\n  return array.filter(v => v.pos === position);\n}\nfunction filterDynamicPositionByAxis(array, axis) {\n  return array.filter(v => STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\nfunction sortByWeight(array, reverse) {\n  return array.sort((a, b) => {\n    const v0 = reverse ? b : a;\n    const v1 = reverse ? a : b;\n    return v0.weight === v1.weight ?\n      v0.index - v1.index :\n      v0.weight - v1.weight;\n  });\n}\nfunction wrapBoxes(boxes) {\n  const layoutBoxes = [];\n  let i, ilen, box, pos, stack, stackWeight;\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n    box = boxes[i];\n    ({position: pos, options: {stack, stackWeight = 1}} = box);\n    layoutBoxes.push({\n      index: i,\n      box,\n      pos,\n      horizontal: box.isHorizontal(),\n      weight: box.weight,\n      stack: stack && (pos + stack),\n      stackWeight\n    });\n  }\n  return layoutBoxes;\n}\nfunction buildStacks(layouts) {\n  const stacks = {};\n  for (const wrap of layouts) {\n    const {stack, pos, stackWeight} = wrap;\n    if (!stack || !STATIC_POSITIONS.includes(pos)) {\n      continue;\n    }\n    const _stack = stacks[stack] || (stacks[stack] = {count: 0, placed: 0, weight: 0, size: 0});\n    _stack.count++;\n    _stack.weight += stackWeight;\n  }\n  return stacks;\n}\nfunction setLayoutDims(layouts, params) {\n  const stacks = buildStacks(layouts);\n  const {vBoxMaxWidth, hBoxMaxHeight} = params;\n  let i, ilen, layout;\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n    layout = layouts[i];\n    const {fullSize} = layout.box;\n    const stack = stacks[layout.stack];\n    const factor = stack && layout.stackWeight / stack.weight;\n    if (layout.horizontal) {\n      layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n      layout.height = hBoxMaxHeight;\n    } else {\n      layout.width = vBoxMaxWidth;\n      layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n    }\n  }\n  return stacks;\n}\nfunction buildLayoutBoxes(boxes) {\n  const layoutBoxes = wrapBoxes(boxes);\n  const fullSize = sortByWeight(layoutBoxes.filter(wrap => wrap.box.fullSize), true);\n  const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n  const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n  const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n  const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n  const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n  const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n  return {\n    fullSize,\n    leftAndTop: left.concat(top),\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n    vertical: left.concat(right).concat(centerVertical),\n    horizontal: top.concat(bottom).concat(centerHorizontal)\n  };\n}\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\nfunction updateMaxPadding(maxPadding, boxPadding) {\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\nfunction updateDims(chartArea, params, layout, stacks) {\n  const {pos, box} = layout;\n  const maxPadding = chartArea.maxPadding;\n  if (!isObject(pos)) {\n    if (layout.size) {\n      chartArea[pos] -= layout.size;\n    }\n    const stack = stacks[layout.stack] || {size: 0, count: 1};\n    stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n    layout.size = stack.size / stack.count;\n    chartArea[pos] += layout.size;\n  }\n  if (box.getPadding) {\n    updateMaxPadding(maxPadding, box.getPadding());\n  }\n  const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n  const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n  const widthChanged = newWidth !== chartArea.w;\n  const heightChanged = newHeight !== chartArea.h;\n  chartArea.w = newWidth;\n  chartArea.h = newHeight;\n  return layout.horizontal\n    ? {same: widthChanged, other: heightChanged}\n    : {same: heightChanged, other: widthChanged};\n}\nfunction handleMaxPadding(chartArea) {\n  const maxPadding = chartArea.maxPadding;\n  function updatePos(pos) {\n    const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n    chartArea[pos] += change;\n    return change;\n  }\n  chartArea.y += updatePos('top');\n  chartArea.x += updatePos('left');\n  updatePos('right');\n  updatePos('bottom');\n}\nfunction getMargins(horizontal, chartArea) {\n  const maxPadding = chartArea.maxPadding;\n  function marginForPositions(positions) {\n    const margin = {left: 0, top: 0, right: 0, bottom: 0};\n    positions.forEach((pos) => {\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n    });\n    return margin;\n  }\n  return horizontal\n    ? marginForPositions(['left', 'right'])\n    : marginForPositions(['top', 'bottom']);\n}\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n  const refitBoxes = [];\n  let i, ilen, layout, box, refit, changed;\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n    box.update(\n      layout.width || chartArea.w,\n      layout.height || chartArea.h,\n      getMargins(layout.horizontal, chartArea)\n    );\n    const {same, other} = updateDims(chartArea, params, layout, stacks);\n    refit |= same && refitBoxes.length;\n    changed = changed || other;\n    if (!box.fullSize) {\n      refitBoxes.push(layout);\n    }\n  }\n  return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\nfunction setBoxDims(box, left, top, width, height) {\n  box.top = top;\n  box.left = left;\n  box.right = left + width;\n  box.bottom = top + height;\n  box.width = width;\n  box.height = height;\n}\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n  const userPadding = params.padding;\n  let {x, y} = chartArea;\n  for (const layout of boxes) {\n    const box = layout.box;\n    const stack = stacks[layout.stack] || {count: 1, placed: 0, weight: 1};\n    const weight = (layout.stackWeight / stack.weight) || 1;\n    if (layout.horizontal) {\n      const width = chartArea.w * weight;\n      const height = stack.size || box.height;\n      if (defined(stack.start)) {\n        y = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n      } else {\n        setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n      }\n      stack.start = y;\n      stack.placed += width;\n      y = box.bottom;\n    } else {\n      const height = chartArea.h * weight;\n      const width = stack.size || box.width;\n      if (defined(stack.start)) {\n        x = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n      } else {\n        setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n      }\n      stack.start = x;\n      stack.placed += height;\n      x = box.right;\n    }\n  }\n  chartArea.x = x;\n  chartArea.y = y;\n}\ndefaults.set('layout', {\n  autoPadding: true,\n  padding: {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0\n  }\n});\nvar layouts = {\n  addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    }\n    item.fullSize = item.fullSize || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n    item._layers = item._layers || function() {\n      return [{\n        z: 0,\n        draw(chartArea) {\n          item.draw(chartArea);\n        }\n      }];\n    };\n    chart.boxes.push(item);\n  },\n  removeBox(chart, layoutItem) {\n    const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n  configure(chart, item, options) {\n    item.fullSize = options.fullSize;\n    item.position = options.position;\n    item.weight = options.weight;\n  },\n  update(chart, width, height, minPadding) {\n    if (!chart) {\n      return;\n    }\n    const padding = toPadding(chart.options.layout.padding);\n    const availableWidth = Math.max(width - padding.width, 0);\n    const availableHeight = Math.max(height - padding.height, 0);\n    const boxes = buildLayoutBoxes(chart.boxes);\n    const verticalBoxes = boxes.vertical;\n    const horizontalBoxes = boxes.horizontal;\n    each(chart.boxes, box => {\n      if (typeof box.beforeLayout === 'function') {\n        box.beforeLayout();\n      }\n    });\n    const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap) =>\n      wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n    const params = Object.freeze({\n      outerWidth: width,\n      outerHeight: height,\n      padding,\n      availableWidth,\n      availableHeight,\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n      hBoxMaxHeight: availableHeight / 2\n    });\n    const maxPadding = Object.assign({}, padding);\n    updateMaxPadding(maxPadding, toPadding(minPadding));\n    const chartArea = Object.assign({\n      maxPadding,\n      w: availableWidth,\n      h: availableHeight,\n      x: padding.left,\n      y: padding.top\n    }, padding);\n    const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n    fitBoxes(boxes.fullSize, chartArea, params, stacks);\n    fitBoxes(verticalBoxes, chartArea, params, stacks);\n    if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n      fitBoxes(verticalBoxes, chartArea, params, stacks);\n    }\n    handleMaxPadding(chartArea);\n    placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n    chartArea.x += chartArea.w;\n    chartArea.y += chartArea.h;\n    placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n    chart.chartArea = {\n      left: chartArea.left,\n      top: chartArea.top,\n      right: chartArea.left + chartArea.w,\n      bottom: chartArea.top + chartArea.h,\n      height: chartArea.h,\n      width: chartArea.w,\n    };\n    each(boxes.chartArea, (layout) => {\n      const box = layout.box;\n      Object.assign(box, chart.chartArea);\n      box.update(chartArea.w, chartArea.h, {left: 0, top: 0, right: 0, bottom: 0});\n    });\n  }\n};\n\nclass BasePlatform {\n  acquireContext(canvas, aspectRatio) {}\n  releaseContext(context) {\n    return false;\n  }\n  addEventListener(chart, type, listener) {}\n  removeEventListener(chart, type, listener) {}\n  getDevicePixelRatio() {\n    return 1;\n  }\n  getMaximumSize(element, width, height, aspectRatio) {\n    width = Math.max(0, width || element.width);\n    height = height || element.height;\n    return {\n      width,\n      height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n    };\n  }\n  isAttached(canvas) {\n    return true;\n  }\n  updateConfig(config) {\n  }\n}\n\nclass BasicPlatform extends BasePlatform {\n  acquireContext(item) {\n    return item && item.getContext && item.getContext('2d') || null;\n  }\n  updateConfig(config) {\n    config.options.animation = false;\n  }\n}\n\nconst EXPANDO_KEY = '$chartjs';\nconst EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\nconst isNullOrEmpty = value => value === null || value === '';\nfunction initCanvas(canvas, aspectRatio) {\n  const style = canvas.style;\n  const renderHeight = canvas.getAttribute('height');\n  const renderWidth = canvas.getAttribute('width');\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  };\n  style.display = style.display || 'block';\n  style.boxSizing = style.boxSizing || 'border-box';\n  if (isNullOrEmpty(renderWidth)) {\n    const displayWidth = readUsedSize(canvas, 'width');\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n  if (isNullOrEmpty(renderHeight)) {\n    if (canvas.style.height === '') {\n      canvas.height = canvas.width / (aspectRatio || 2);\n    } else {\n      const displayHeight = readUsedSize(canvas, 'height');\n      if (displayHeight !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n  return canvas;\n}\nconst eventListenerOptions = supportsEventListenerOptions ? {passive: true} : false;\nfunction addListener(node, type, listener) {\n  node.addEventListener(type, listener, eventListenerOptions);\n}\nfunction removeListener(chart, type, listener) {\n  chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n}\nfunction fromNativeEvent(event, chart) {\n  const type = EVENT_TYPES[event.type] || event.type;\n  const {x, y} = getRelativePosition(event, chart);\n  return {\n    type,\n    chart,\n    native: event,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null,\n  };\n}\nfunction nodeListContains(nodeList, canvas) {\n  for (const node of nodeList) {\n    if (node === canvas || node.contains(canvas)) {\n      return true;\n    }\n  }\n}\nfunction createAttachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\nfunction createDetachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\nfunction onWindowResize() {\n  const dpr = window.devicePixelRatio;\n  if (dpr === oldDevicePixelRatio) {\n    return;\n  }\n  oldDevicePixelRatio = dpr;\n  drpListeningCharts.forEach((resize, chart) => {\n    if (chart.currentDevicePixelRatio !== dpr) {\n      resize();\n    }\n  });\n}\nfunction listenDevicePixelRatioChanges(chart, resize) {\n  if (!drpListeningCharts.size) {\n    window.addEventListener('resize', onWindowResize);\n  }\n  drpListeningCharts.set(chart, resize);\n}\nfunction unlistenDevicePixelRatioChanges(chart) {\n  drpListeningCharts.delete(chart);\n  if (!drpListeningCharts.size) {\n    window.removeEventListener('resize', onWindowResize);\n  }\n}\nfunction createResizeObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  const resize = throttled((width, height) => {\n    const w = container.clientWidth;\n    listener(width, height);\n    if (w < container.clientWidth) {\n      listener();\n    }\n  }, window);\n  const observer = new ResizeObserver(entries => {\n    const entry = entries[0];\n    const width = entry.contentRect.width;\n    const height = entry.contentRect.height;\n    if (width === 0 && height === 0) {\n      return;\n    }\n    resize(width, height);\n  });\n  observer.observe(container);\n  listenDevicePixelRatioChanges(chart, resize);\n  return observer;\n}\nfunction releaseObserver(chart, type, observer) {\n  if (observer) {\n    observer.disconnect();\n  }\n  if (type === 'resize') {\n    unlistenDevicePixelRatioChanges(chart);\n  }\n}\nfunction createProxyAndListen(chart, type, listener) {\n  const canvas = chart.canvas;\n  const proxy = throttled((event) => {\n    if (chart.ctx !== null) {\n      listener(fromNativeEvent(event, chart));\n    }\n  }, chart, (args) => {\n    const event = args[0];\n    return [event, event.offsetX, event.offsetY];\n  });\n  addListener(canvas, type, proxy);\n  return proxy;\n}\nclass DomPlatform extends BasePlatform {\n  acquireContext(canvas, aspectRatio) {\n    const context = canvas && canvas.getContext && canvas.getContext('2d');\n    if (context && context.canvas === canvas) {\n      initCanvas(canvas, aspectRatio);\n      return context;\n    }\n    return null;\n  }\n  releaseContext(context) {\n    const canvas = context.canvas;\n    if (!canvas[EXPANDO_KEY]) {\n      return false;\n    }\n    const initial = canvas[EXPANDO_KEY].initial;\n    ['height', 'width'].forEach((prop) => {\n      const value = initial[prop];\n      if (isNullOrUndef(value)) {\n        canvas.removeAttribute(prop);\n      } else {\n        canvas.setAttribute(prop, value);\n      }\n    });\n    const style = initial.style || {};\n    Object.keys(style).forEach((key) => {\n      canvas.style[key] = style[key];\n    });\n    canvas.width = canvas.width;\n    delete canvas[EXPANDO_KEY];\n    return true;\n  }\n  addEventListener(chart, type, listener) {\n    this.removeEventListener(chart, type);\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const handlers = {\n      attach: createAttachObserver,\n      detach: createDetachObserver,\n      resize: createResizeObserver\n    };\n    const handler = handlers[type] || createProxyAndListen;\n    proxies[type] = handler(chart, type, listener);\n  }\n  removeEventListener(chart, type) {\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const proxy = proxies[type];\n    if (!proxy) {\n      return;\n    }\n    const handlers = {\n      attach: releaseObserver,\n      detach: releaseObserver,\n      resize: releaseObserver\n    };\n    const handler = handlers[type] || removeListener;\n    handler(chart, type, proxy);\n    proxies[type] = undefined;\n  }\n  getDevicePixelRatio() {\n    return window.devicePixelRatio;\n  }\n  getMaximumSize(canvas, width, height, aspectRatio) {\n    return getMaximumSize(canvas, width, height, aspectRatio);\n  }\n  isAttached(canvas) {\n    const container = _getParentNode(canvas);\n    return !!(container && container.isConnected);\n  }\n}\n\nfunction _detectPlatform(canvas) {\n  if (!_isDomSupported() || (typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas)) {\n    return BasicPlatform;\n  }\n  return DomPlatform;\n}\n\nclass Element {\n  constructor() {\n    this.x = undefined;\n    this.y = undefined;\n    this.active = false;\n    this.options = undefined;\n    this.$animations = undefined;\n  }\n  tooltipPosition(useFinalPosition) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n  hasValue() {\n    return isNumber(this.x) && isNumber(this.y);\n  }\n  getProps(props, final) {\n    const anims = this.$animations;\n    if (!final || !anims) {\n      return this;\n    }\n    const ret = {};\n    props.forEach(prop => {\n      ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop];\n    });\n    return ret;\n  }\n}\nElement.defaults = {};\nElement.defaultRoutes = undefined;\n\nconst formatters = {\n  values(value) {\n    return isArray(value) ? value : '' + value;\n  },\n  numeric(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const locale = this.chart.options.locale;\n    let notation;\n    let delta = tickValue;\n    if (ticks.length > 1) {\n      const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n      if (maxTick < 1e-4 || maxTick > 1e+15) {\n        notation = 'scientific';\n      }\n      delta = calculateDelta(tickValue, ticks);\n    }\n    const logDelta = log10(Math.abs(delta));\n    const numDecimal = Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n    const options = {notation, minimumFractionDigits: numDecimal, maximumFractionDigits: numDecimal};\n    Object.assign(options, this.options.ticks.format);\n    return formatNumber(tickValue, locale, options);\n  },\n  logarithmic(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const remain = tickValue / (Math.pow(10, Math.floor(log10(tickValue))));\n    if (remain === 1 || remain === 2 || remain === 5) {\n      return formatters.numeric.call(this, tickValue, index, ticks);\n    }\n    return '';\n  }\n};\nfunction calculateDelta(tickValue, ticks) {\n  let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n  if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n    delta = tickValue - Math.floor(tickValue);\n  }\n  return delta;\n}\nvar Ticks = {formatters};\n\ndefaults.set('scale', {\n  display: true,\n  offset: false,\n  reverse: false,\n  beginAtZero: false,\n  bounds: 'ticks',\n  grace: 0,\n  grid: {\n    display: true,\n    lineWidth: 1,\n    drawBorder: true,\n    drawOnChartArea: true,\n    drawTicks: true,\n    tickLength: 8,\n    tickWidth: (_ctx, options) => options.lineWidth,\n    tickColor: (_ctx, options) => options.color,\n    offset: false,\n    borderDash: [],\n    borderDashOffset: 0.0,\n    borderWidth: 1\n  },\n  title: {\n    display: false,\n    text: '',\n    padding: {\n      top: 4,\n      bottom: 4\n    }\n  },\n  ticks: {\n    minRotation: 0,\n    maxRotation: 50,\n    mirror: false,\n    textStrokeWidth: 0,\n    textStrokeColor: '',\n    padding: 3,\n    display: true,\n    autoSkip: true,\n    autoSkipPadding: 3,\n    labelOffset: 0,\n    callback: Ticks.formatters.values,\n    minor: {},\n    major: {},\n    align: 'center',\n    crossAlign: 'near',\n    showLabelBackdrop: false,\n    backdropColor: 'rgba(255, 255, 255, 0.75)',\n    backdropPadding: 2,\n  }\n});\ndefaults.route('scale.ticks', 'color', '', 'color');\ndefaults.route('scale.grid', 'color', '', 'borderColor');\ndefaults.route('scale.grid', 'borderColor', '', 'borderColor');\ndefaults.route('scale.title', 'color', '', 'color');\ndefaults.describe('scale', {\n  _fallback: false,\n  _scriptable: (name) => !name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n  _indexable: (name) => name !== 'borderDash' && name !== 'tickBorderDash',\n});\ndefaults.describe('scales', {\n  _fallback: 'scale',\n});\ndefaults.describe('scale.ticks', {\n  _scriptable: (name) => name !== 'backdropPadding' && name !== 'callback',\n  _indexable: (name) => name !== 'backdropPadding',\n});\n\nfunction autoSkip(scale, ticks) {\n  const tickOpts = scale.options.ticks;\n  const ticksLimit = tickOpts.maxTicksLimit || determineMaxTicks(scale);\n  const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n  const numMajorIndices = majorIndices.length;\n  const first = majorIndices[0];\n  const last = majorIndices[numMajorIndices - 1];\n  const newTicks = [];\n  if (numMajorIndices > ticksLimit) {\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n    return newTicks;\n  }\n  const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n  if (numMajorIndices > 0) {\n    let i, ilen;\n    const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n    }\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n    return newTicks;\n  }\n  skip(ticks, newTicks, spacing);\n  return newTicks;\n}\nfunction determineMaxTicks(scale) {\n  const offset = scale.options.offset;\n  const tickLength = scale._tickSize();\n  const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n  const maxChart = scale._maxLength / tickLength;\n  return Math.floor(Math.min(maxScale, maxChart));\n}\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\n  const evenMajorSpacing = getEvenSpacing(majorIndices);\n  const spacing = ticks.length / ticksLimit;\n  if (!evenMajorSpacing) {\n    return Math.max(spacing, 1);\n  }\n  const factors = _factorize(evenMajorSpacing);\n  for (let i = 0, ilen = factors.length - 1; i < ilen; i++) {\n    const factor = factors[i];\n    if (factor > spacing) {\n      return factor;\n    }\n  }\n  return Math.max(spacing, 1);\n}\nfunction getMajorIndices(ticks) {\n  const result = [];\n  let i, ilen;\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\n    if (ticks[i].major) {\n      result.push(i);\n    }\n  }\n  return result;\n}\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\n  let count = 0;\n  let next = majorIndices[0];\n  let i;\n  spacing = Math.ceil(spacing);\n  for (i = 0; i < ticks.length; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = majorIndices[count * spacing];\n    }\n  }\n}\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n  const start = valueOrDefault(majorStart, 0);\n  const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n  let count = 0;\n  let length, i, next;\n  spacing = Math.ceil(spacing);\n  if (majorEnd) {\n    length = majorEnd - majorStart;\n    spacing = length / Math.floor(length / spacing);\n  }\n  next = start;\n  while (next < 0) {\n    count++;\n    next = Math.round(start + count * spacing);\n  }\n  for (i = Math.max(start, 0); i < end; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n  }\n}\nfunction getEvenSpacing(arr) {\n  const len = arr.length;\n  let i, diff;\n  if (len < 2) {\n    return false;\n  }\n  for (diff = arr[0], i = 1; i < len; ++i) {\n    if (arr[i] - arr[i - 1] !== diff) {\n      return false;\n    }\n  }\n  return diff;\n}\n\nconst reverseAlign = (align) => align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset) => edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nfunction sample(arr, numItems) {\n  const result = [];\n  const increment = arr.length / numItems;\n  const len = arr.length;\n  let i = 0;\n  for (; i < len; i += increment) {\n    result.push(arr[Math.floor(i)]);\n  }\n  return result;\n}\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n  const length = scale.ticks.length;\n  const validIndex = Math.min(index, length - 1);\n  const start = scale._startPixel;\n  const end = scale._endPixel;\n  const epsilon = 1e-6;\n  let lineValue = scale.getPixelForTick(validIndex);\n  let offset;\n  if (offsetGridLines) {\n    if (length === 1) {\n      offset = Math.max(lineValue - start, end - lineValue);\n    } else if (index === 0) {\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n    }\n    lineValue += validIndex < index ? offset : -offset;\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\n      return;\n    }\n  }\n  return lineValue;\n}\nfunction garbageCollect(caches, length) {\n  each(caches, (cache) => {\n    const gc = cache.gc;\n    const gcLen = gc.length / 2;\n    let i;\n    if (gcLen > length) {\n      for (i = 0; i < gcLen; ++i) {\n        delete cache.data[gc[i]];\n      }\n      gc.splice(0, gcLen);\n    }\n  });\n}\nfunction getTickMarkLength(options) {\n  return options.drawTicks ? options.tickLength : 0;\n}\nfunction getTitleHeight(options, fallback) {\n  if (!options.display) {\n    return 0;\n  }\n  const font = toFont(options.font, fallback);\n  const padding = toPadding(options.padding);\n  const lines = isArray(options.text) ? options.text.length : 1;\n  return (lines * font.lineHeight) + padding.height;\n}\nfunction createScaleContext(parent, scale) {\n  return createContext(parent, {\n    scale,\n    type: 'scale'\n  });\n}\nfunction createTickContext(parent, index, tick) {\n  return createContext(parent, {\n    tick,\n    index,\n    type: 'tick'\n  });\n}\nfunction titleAlign(align, position, reverse) {\n  let ret = _toLeftRightCenter(align);\n  if ((reverse && position !== 'right') || (!reverse && position === 'right')) {\n    ret = reverseAlign(ret);\n  }\n  return ret;\n}\nfunction titleArgs(scale, offset, position, align) {\n  const {top, left, bottom, right, chart} = scale;\n  const {chartArea, scales} = chart;\n  let rotation = 0;\n  let maxWidth, titleX, titleY;\n  const height = bottom - top;\n  const width = right - left;\n  if (scale.isHorizontal()) {\n    titleX = _alignStartEnd(align, left, right);\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n    } else if (position === 'center') {\n      titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n    } else {\n      titleY = offsetFromEdge(scale, position, offset);\n    }\n    maxWidth = right - left;\n  } else {\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n    } else if (position === 'center') {\n      titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n    } else {\n      titleX = offsetFromEdge(scale, position, offset);\n    }\n    titleY = _alignStartEnd(align, bottom, top);\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\n  }\n  return {titleX, titleY, maxWidth, rotation};\n}\nclass Scale extends Element {\n  constructor(cfg) {\n    super();\n    this.id = cfg.id;\n    this.type = cfg.type;\n    this.options = undefined;\n    this.ctx = cfg.ctx;\n    this.chart = cfg.chart;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this._margins = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    this.maxWidth = undefined;\n    this.maxHeight = undefined;\n    this.paddingTop = undefined;\n    this.paddingBottom = undefined;\n    this.paddingLeft = undefined;\n    this.paddingRight = undefined;\n    this.axis = undefined;\n    this.labelRotation = undefined;\n    this.min = undefined;\n    this.max = undefined;\n    this._range = undefined;\n    this.ticks = [];\n    this._gridLineItems = null;\n    this._labelItems = null;\n    this._labelSizes = null;\n    this._length = 0;\n    this._maxLength = 0;\n    this._longestTextCache = {};\n    this._startPixel = undefined;\n    this._endPixel = undefined;\n    this._reversePixels = false;\n    this._userMax = undefined;\n    this._userMin = undefined;\n    this._suggestedMax = undefined;\n    this._suggestedMin = undefined;\n    this._ticksLength = 0;\n    this._borderValue = 0;\n    this._cache = {};\n    this._dataLimitsCached = false;\n    this.$context = undefined;\n  }\n  init(options) {\n    this.options = options.setContext(this.getContext());\n    this.axis = options.axis;\n    this._userMin = this.parse(options.min);\n    this._userMax = this.parse(options.max);\n    this._suggestedMin = this.parse(options.suggestedMin);\n    this._suggestedMax = this.parse(options.suggestedMax);\n  }\n  parse(raw, index) {\n    return raw;\n  }\n  getUserBounds() {\n    let {_userMin, _userMax, _suggestedMin, _suggestedMax} = this;\n    _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n    _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n    _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n    _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n    return {\n      min: finiteOrDefault(_userMin, _suggestedMin),\n      max: finiteOrDefault(_userMax, _suggestedMax),\n      minDefined: isNumberFinite(_userMin),\n      maxDefined: isNumberFinite(_userMax)\n    };\n  }\n  getMinMax(canStack) {\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n    let range;\n    if (minDefined && maxDefined) {\n      return {min, max};\n    }\n    const metas = this.getMatchingVisibleMetas();\n    for (let i = 0, ilen = metas.length; i < ilen; ++i) {\n      range = metas[i].controller.getMinMax(this, canStack);\n      if (!minDefined) {\n        min = Math.min(min, range.min);\n      }\n      if (!maxDefined) {\n        max = Math.max(max, range.max);\n      }\n    }\n    min = maxDefined && min > max ? max : min;\n    max = minDefined && min > max ? min : max;\n    return {\n      min: finiteOrDefault(min, finiteOrDefault(max, min)),\n      max: finiteOrDefault(max, finiteOrDefault(min, max))\n    };\n  }\n  getPadding() {\n    return {\n      left: this.paddingLeft || 0,\n      top: this.paddingTop || 0,\n      right: this.paddingRight || 0,\n      bottom: this.paddingBottom || 0\n    };\n  }\n  getTicks() {\n    return this.ticks;\n  }\n  getLabels() {\n    const data = this.chart.data;\n    return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n  }\n  beforeLayout() {\n    this._cache = {};\n    this._dataLimitsCached = false;\n  }\n  beforeUpdate() {\n    callback(this.options.beforeUpdate, [this]);\n  }\n  update(maxWidth, maxHeight, margins) {\n    const {beginAtZero, grace, ticks: tickOpts} = this.options;\n    const sampleSize = tickOpts.sampleSize;\n    this.beforeUpdate();\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins = Object.assign({\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    }, margins);\n    this.ticks = null;\n    this._labelSizes = null;\n    this._gridLineItems = null;\n    this._labelItems = null;\n    this.beforeSetDimensions();\n    this.setDimensions();\n    this.afterSetDimensions();\n    this._maxLength = this.isHorizontal()\n      ? this.width + margins.left + margins.right\n      : this.height + margins.top + margins.bottom;\n    if (!this._dataLimitsCached) {\n      this.beforeDataLimits();\n      this.determineDataLimits();\n      this.afterDataLimits();\n      this._range = _addGrace(this, grace, beginAtZero);\n      this._dataLimitsCached = true;\n    }\n    this.beforeBuildTicks();\n    this.ticks = this.buildTicks() || [];\n    this.afterBuildTicks();\n    const samplingEnabled = sampleSize < this.ticks.length;\n    this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n    this.configure();\n    this.beforeCalculateLabelRotation();\n    this.calculateLabelRotation();\n    this.afterCalculateLabelRotation();\n    if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n      this.ticks = autoSkip(this, this.ticks);\n      this._labelSizes = null;\n      this.afterAutoSkip();\n    }\n    if (samplingEnabled) {\n      this._convertTicksToLabels(this.ticks);\n    }\n    this.beforeFit();\n    this.fit();\n    this.afterFit();\n    this.afterUpdate();\n  }\n  configure() {\n    let reversePixels = this.options.reverse;\n    let startPixel, endPixel;\n    if (this.isHorizontal()) {\n      startPixel = this.left;\n      endPixel = this.right;\n    } else {\n      startPixel = this.top;\n      endPixel = this.bottom;\n      reversePixels = !reversePixels;\n    }\n    this._startPixel = startPixel;\n    this._endPixel = endPixel;\n    this._reversePixels = reversePixels;\n    this._length = endPixel - startPixel;\n    this._alignToPixels = this.options.alignToPixels;\n  }\n  afterUpdate() {\n    callback(this.options.afterUpdate, [this]);\n  }\n  beforeSetDimensions() {\n    callback(this.options.beforeSetDimensions, [this]);\n  }\n  setDimensions() {\n    if (this.isHorizontal()) {\n      this.width = this.maxWidth;\n      this.left = 0;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n      this.top = 0;\n      this.bottom = this.height;\n    }\n    this.paddingLeft = 0;\n    this.paddingTop = 0;\n    this.paddingRight = 0;\n    this.paddingBottom = 0;\n  }\n  afterSetDimensions() {\n    callback(this.options.afterSetDimensions, [this]);\n  }\n  _callHooks(name) {\n    this.chart.notifyPlugins(name, this.getContext());\n    callback(this.options[name], [this]);\n  }\n  beforeDataLimits() {\n    this._callHooks('beforeDataLimits');\n  }\n  determineDataLimits() {}\n  afterDataLimits() {\n    this._callHooks('afterDataLimits');\n  }\n  beforeBuildTicks() {\n    this._callHooks('beforeBuildTicks');\n  }\n  buildTicks() {\n    return [];\n  }\n  afterBuildTicks() {\n    this._callHooks('afterBuildTicks');\n  }\n  beforeTickToLabelConversion() {\n    callback(this.options.beforeTickToLabelConversion, [this]);\n  }\n  generateTickLabels(ticks) {\n    const tickOpts = this.options.ticks;\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      tick = ticks[i];\n      tick.label = callback(tickOpts.callback, [tick.value, i, ticks], this);\n    }\n  }\n  afterTickToLabelConversion() {\n    callback(this.options.afterTickToLabelConversion, [this]);\n  }\n  beforeCalculateLabelRotation() {\n    callback(this.options.beforeCalculateLabelRotation, [this]);\n  }\n  calculateLabelRotation() {\n    const options = this.options;\n    const tickOpts = options.ticks;\n    const numTicks = this.ticks.length;\n    const minRotation = tickOpts.minRotation || 0;\n    const maxRotation = tickOpts.maxRotation;\n    let labelRotation = minRotation;\n    let tickWidth, maxHeight, maxLabelDiagonal;\n    if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n      this.labelRotation = minRotation;\n      return;\n    }\n    const labelSizes = this._getLabelSizes();\n    const maxLabelWidth = labelSizes.widest.width;\n    const maxLabelHeight = labelSizes.highest.height;\n    const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n    tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n    if (maxLabelWidth + 6 > tickWidth) {\n      tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n      maxHeight = this.maxHeight - getTickMarkLength(options.grid)\n\t\t\t\t- tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n      maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n      labelRotation = toDegrees(Math.min(\n        Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)),\n        Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))\n      ));\n      labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n    }\n    this.labelRotation = labelRotation;\n  }\n  afterCalculateLabelRotation() {\n    callback(this.options.afterCalculateLabelRotation, [this]);\n  }\n  afterAutoSkip() {}\n  beforeFit() {\n    callback(this.options.beforeFit, [this]);\n  }\n  fit() {\n    const minSize = {\n      width: 0,\n      height: 0\n    };\n    const {chart, options: {ticks: tickOpts, title: titleOpts, grid: gridOpts}} = this;\n    const display = this._isVisible();\n    const isHorizontal = this.isHorizontal();\n    if (display) {\n      const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n      if (isHorizontal) {\n        minSize.width = this.maxWidth;\n        minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n      } else {\n        minSize.height = this.maxHeight;\n        minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n      }\n      if (tickOpts.display && this.ticks.length) {\n        const {first, last, widest, highest} = this._getLabelSizes();\n        const tickPadding = tickOpts.padding * 2;\n        const angleRadians = toRadians(this.labelRotation);\n        const cos = Math.cos(angleRadians);\n        const sin = Math.sin(angleRadians);\n        if (isHorizontal) {\n          const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n          minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n        } else {\n          const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n          minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n        }\n        this._calculatePadding(first, last, sin, cos);\n      }\n    }\n    this._handleMargins();\n    if (isHorizontal) {\n      this.width = this._length = chart.width - this._margins.left - this._margins.right;\n      this.height = minSize.height;\n    } else {\n      this.width = minSize.width;\n      this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n    }\n  }\n  _calculatePadding(first, last, sin, cos) {\n    const {ticks: {align, padding}, position} = this.options;\n    const isRotated = this.labelRotation !== 0;\n    const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n    if (this.isHorizontal()) {\n      const offsetLeft = this.getPixelForTick(0) - this.left;\n      const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n      let paddingLeft = 0;\n      let paddingRight = 0;\n      if (isRotated) {\n        if (labelsBelowTicks) {\n          paddingLeft = cos * first.width;\n          paddingRight = sin * last.height;\n        } else {\n          paddingLeft = sin * first.height;\n          paddingRight = cos * last.width;\n        }\n      } else if (align === 'start') {\n        paddingRight = last.width;\n      } else if (align === 'end') {\n        paddingLeft = first.width;\n      } else if (align !== 'inner') {\n        paddingLeft = first.width / 2;\n        paddingRight = last.width / 2;\n      }\n      this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n      this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n    } else {\n      let paddingTop = last.height / 2;\n      let paddingBottom = first.height / 2;\n      if (align === 'start') {\n        paddingTop = 0;\n        paddingBottom = first.height;\n      } else if (align === 'end') {\n        paddingTop = last.height;\n        paddingBottom = 0;\n      }\n      this.paddingTop = paddingTop + padding;\n      this.paddingBottom = paddingBottom + padding;\n    }\n  }\n  _handleMargins() {\n    if (this._margins) {\n      this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n      this._margins.top = Math.max(this.paddingTop, this._margins.top);\n      this._margins.right = Math.max(this.paddingRight, this._margins.right);\n      this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n    }\n  }\n  afterFit() {\n    callback(this.options.afterFit, [this]);\n  }\n  isHorizontal() {\n    const {axis, position} = this.options;\n    return position === 'top' || position === 'bottom' || axis === 'x';\n  }\n  isFullSize() {\n    return this.options.fullSize;\n  }\n  _convertTicksToLabels(ticks) {\n    this.beforeTickToLabelConversion();\n    this.generateTickLabels(ticks);\n    let i, ilen;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      if (isNullOrUndef(ticks[i].label)) {\n        ticks.splice(i, 1);\n        ilen--;\n        i--;\n      }\n    }\n    this.afterTickToLabelConversion();\n  }\n  _getLabelSizes() {\n    let labelSizes = this._labelSizes;\n    if (!labelSizes) {\n      const sampleSize = this.options.ticks.sampleSize;\n      let ticks = this.ticks;\n      if (sampleSize < ticks.length) {\n        ticks = sample(ticks, sampleSize);\n      }\n      this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length);\n    }\n    return labelSizes;\n  }\n  _computeLabelSizes(ticks, length) {\n    const {ctx, _longestTextCache: caches} = this;\n    const widths = [];\n    const heights = [];\n    let widestLabelSize = 0;\n    let highestLabelSize = 0;\n    let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n    for (i = 0; i < length; ++i) {\n      label = ticks[i].label;\n      tickFont = this._resolveTickFontOptions(i);\n      ctx.font = fontString = tickFont.string;\n      cache = caches[fontString] = caches[fontString] || {data: {}, gc: []};\n      lineHeight = tickFont.lineHeight;\n      width = height = 0;\n      if (!isNullOrUndef(label) && !isArray(label)) {\n        width = _measureText(ctx, cache.data, cache.gc, width, label);\n        height = lineHeight;\n      } else if (isArray(label)) {\n        for (j = 0, jlen = label.length; j < jlen; ++j) {\n          nestedLabel = label[j];\n          if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n            width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n            height += lineHeight;\n          }\n        }\n      }\n      widths.push(width);\n      heights.push(height);\n      widestLabelSize = Math.max(width, widestLabelSize);\n      highestLabelSize = Math.max(height, highestLabelSize);\n    }\n    garbageCollect(caches, length);\n    const widest = widths.indexOf(widestLabelSize);\n    const highest = heights.indexOf(highestLabelSize);\n    const valueAt = (idx) => ({width: widths[idx] || 0, height: heights[idx] || 0});\n    return {\n      first: valueAt(0),\n      last: valueAt(length - 1),\n      widest: valueAt(widest),\n      highest: valueAt(highest),\n      widths,\n      heights,\n    };\n  }\n  getLabelForValue(value) {\n    return value;\n  }\n  getPixelForValue(value, index) {\n    return NaN;\n  }\n  getValueForPixel(pixel) {}\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n  getPixelForDecimal(decimal) {\n    if (this._reversePixels) {\n      decimal = 1 - decimal;\n    }\n    const pixel = this._startPixel + decimal * this._length;\n    return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n  }\n  getDecimalForPixel(pixel) {\n    const decimal = (pixel - this._startPixel) / this._length;\n    return this._reversePixels ? 1 - decimal : decimal;\n  }\n  getBasePixel() {\n    return this.getPixelForValue(this.getBaseValue());\n  }\n  getBaseValue() {\n    const {min, max} = this;\n    return min < 0 && max < 0 ? max :\n      min > 0 && max > 0 ? min :\n      0;\n  }\n  getContext(index) {\n    const ticks = this.ticks || [];\n    if (index >= 0 && index < ticks.length) {\n      const tick = ticks[index];\n      return tick.$context ||\n\t\t\t\t(tick.$context = createTickContext(this.getContext(), index, tick));\n    }\n    return this.$context ||\n\t\t\t(this.$context = createScaleContext(this.chart.getContext(), this));\n  }\n  _tickSize() {\n    const optionTicks = this.options.ticks;\n    const rot = toRadians(this.labelRotation);\n    const cos = Math.abs(Math.cos(rot));\n    const sin = Math.abs(Math.sin(rot));\n    const labelSizes = this._getLabelSizes();\n    const padding = optionTicks.autoSkipPadding || 0;\n    const w = labelSizes ? labelSizes.widest.width + padding : 0;\n    const h = labelSizes ? labelSizes.highest.height + padding : 0;\n    return this.isHorizontal()\n      ? h * cos > w * sin ? w / cos : h / sin\n      : h * sin < w * cos ? h / cos : w / sin;\n  }\n  _isVisible() {\n    const display = this.options.display;\n    if (display !== 'auto') {\n      return !!display;\n    }\n    return this.getMatchingVisibleMetas().length > 0;\n  }\n  _computeGridLineItems(chartArea) {\n    const axis = this.axis;\n    const chart = this.chart;\n    const options = this.options;\n    const {grid, position} = options;\n    const offset = grid.offset;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const ticksLength = ticks.length + (offset ? 1 : 0);\n    const tl = getTickMarkLength(grid);\n    const items = [];\n    const borderOpts = grid.setContext(this.getContext());\n    const axisWidth = borderOpts.drawBorder ? borderOpts.borderWidth : 0;\n    const axisHalfWidth = axisWidth / 2;\n    const alignBorderValue = function(pixel) {\n      return _alignPixel(chart, pixel, axisWidth);\n    };\n    let borderValue, i, lineValue, alignedLineValue;\n    let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n    if (position === 'top') {\n      borderValue = alignBorderValue(this.bottom);\n      ty1 = this.bottom - tl;\n      ty2 = borderValue - axisHalfWidth;\n      y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n      y2 = chartArea.bottom;\n    } else if (position === 'bottom') {\n      borderValue = alignBorderValue(this.top);\n      y1 = chartArea.top;\n      y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = this.top + tl;\n    } else if (position === 'left') {\n      borderValue = alignBorderValue(this.right);\n      tx1 = this.right - tl;\n      tx2 = borderValue - axisHalfWidth;\n      x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n      x2 = chartArea.right;\n    } else if (position === 'right') {\n      borderValue = alignBorderValue(this.left);\n      x1 = chartArea.left;\n      x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n      tx1 = borderValue + axisHalfWidth;\n      tx2 = this.left + tl;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n      y1 = chartArea.top;\n      y2 = chartArea.bottom;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = ty1 + tl;\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n      tx1 = borderValue - axisHalfWidth;\n      tx2 = tx1 - tl;\n      x1 = chartArea.left;\n      x2 = chartArea.right;\n    }\n    const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n    const step = Math.max(1, Math.ceil(ticksLength / limit));\n    for (i = 0; i < ticksLength; i += step) {\n      const optsAtIndex = grid.setContext(this.getContext(i));\n      const lineWidth = optsAtIndex.lineWidth;\n      const lineColor = optsAtIndex.color;\n      const borderDash = grid.borderDash || [];\n      const borderDashOffset = optsAtIndex.borderDashOffset;\n      const tickWidth = optsAtIndex.tickWidth;\n      const tickColor = optsAtIndex.tickColor;\n      const tickBorderDash = optsAtIndex.tickBorderDash || [];\n      const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n      lineValue = getPixelForGridLine(this, i, offset);\n      if (lineValue === undefined) {\n        continue;\n      }\n      alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n      if (isHorizontal) {\n        tx1 = tx2 = x1 = x2 = alignedLineValue;\n      } else {\n        ty1 = ty2 = y1 = y2 = alignedLineValue;\n      }\n      items.push({\n        tx1,\n        ty1,\n        tx2,\n        ty2,\n        x1,\n        y1,\n        x2,\n        y2,\n        width: lineWidth,\n        color: lineColor,\n        borderDash,\n        borderDashOffset,\n        tickWidth,\n        tickColor,\n        tickBorderDash,\n        tickBorderDashOffset,\n      });\n    }\n    this._ticksLength = ticksLength;\n    this._borderValue = borderValue;\n    return items;\n  }\n  _computeLabelItems(chartArea) {\n    const axis = this.axis;\n    const options = this.options;\n    const {position, ticks: optionTicks} = options;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const {align, crossAlign, padding, mirror} = optionTicks;\n    const tl = getTickMarkLength(options.grid);\n    const tickAndPadding = tl + padding;\n    const hTickAndPadding = mirror ? -padding : tickAndPadding;\n    const rotation = -toRadians(this.labelRotation);\n    const items = [];\n    let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n    let textBaseline = 'middle';\n    if (position === 'top') {\n      y = this.bottom - hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'bottom') {\n      y = this.top + hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'left') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (position === 'right') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        y = ((chartArea.top + chartArea.bottom) / 2) + tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n      }\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        x = ((chartArea.left + chartArea.right) / 2) - tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        x = this.chart.scales[positionAxisID].getPixelForValue(value);\n      }\n      textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n    }\n    if (axis === 'y') {\n      if (align === 'start') {\n        textBaseline = 'top';\n      } else if (align === 'end') {\n        textBaseline = 'bottom';\n      }\n    }\n    const labelSizes = this._getLabelSizes();\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      label = tick.label;\n      const optsAtIndex = optionTicks.setContext(this.getContext(i));\n      pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n      font = this._resolveTickFontOptions(i);\n      lineHeight = font.lineHeight;\n      lineCount = isArray(label) ? label.length : 1;\n      const halfCount = lineCount / 2;\n      const color = optsAtIndex.color;\n      const strokeColor = optsAtIndex.textStrokeColor;\n      const strokeWidth = optsAtIndex.textStrokeWidth;\n      let tickTextAlign = textAlign;\n      if (isHorizontal) {\n        x = pixel;\n        if (textAlign === 'inner') {\n          if (i === ilen - 1) {\n            tickTextAlign = !this.options.reverse ? 'right' : 'left';\n          } else if (i === 0) {\n            tickTextAlign = !this.options.reverse ? 'left' : 'right';\n          } else {\n            tickTextAlign = 'center';\n          }\n        }\n        if (position === 'top') {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = -lineCount * lineHeight + lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n          } else {\n            textOffset = -labelSizes.highest.height + lineHeight / 2;\n          }\n        } else {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n          } else {\n            textOffset = labelSizes.highest.height - lineCount * lineHeight;\n          }\n        }\n        if (mirror) {\n          textOffset *= -1;\n        }\n      } else {\n        y = pixel;\n        textOffset = (1 - lineCount) * lineHeight / 2;\n      }\n      let backdrop;\n      if (optsAtIndex.showLabelBackdrop) {\n        const labelPadding = toPadding(optsAtIndex.backdropPadding);\n        const height = labelSizes.heights[i];\n        const width = labelSizes.widths[i];\n        let top = y + textOffset - labelPadding.top;\n        let left = x - labelPadding.left;\n        switch (textBaseline) {\n        case 'middle':\n          top -= height / 2;\n          break;\n        case 'bottom':\n          top -= height;\n          break;\n        }\n        switch (textAlign) {\n        case 'center':\n          left -= width / 2;\n          break;\n        case 'right':\n          left -= width;\n          break;\n        }\n        backdrop = {\n          left,\n          top,\n          width: width + labelPadding.width,\n          height: height + labelPadding.height,\n          color: optsAtIndex.backdropColor,\n        };\n      }\n      items.push({\n        rotation,\n        label,\n        font,\n        color,\n        strokeColor,\n        strokeWidth,\n        textOffset,\n        textAlign: tickTextAlign,\n        textBaseline,\n        translation: [x, y],\n        backdrop,\n      });\n    }\n    return items;\n  }\n  _getXAxisLabelAlignment() {\n    const {position, ticks} = this.options;\n    const rotation = -toRadians(this.labelRotation);\n    if (rotation) {\n      return position === 'top' ? 'left' : 'right';\n    }\n    let align = 'center';\n    if (ticks.align === 'start') {\n      align = 'left';\n    } else if (ticks.align === 'end') {\n      align = 'right';\n    } else if (ticks.align === 'inner') {\n      align = 'inner';\n    }\n    return align;\n  }\n  _getYAxisLabelAlignment(tl) {\n    const {position, ticks: {crossAlign, mirror, padding}} = this.options;\n    const labelSizes = this._getLabelSizes();\n    const tickAndPadding = tl + padding;\n    const widest = labelSizes.widest.width;\n    let textAlign;\n    let x;\n    if (position === 'left') {\n      if (mirror) {\n        x = this.right + padding;\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += (widest / 2);\n        } else {\n          textAlign = 'right';\n          x += widest;\n        }\n      } else {\n        x = this.right - tickAndPadding;\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x = this.left;\n        }\n      }\n    } else if (position === 'right') {\n      if (mirror) {\n        x = this.left + padding;\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x -= widest;\n        }\n      } else {\n        x = this.left + tickAndPadding;\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += widest / 2;\n        } else {\n          textAlign = 'right';\n          x = this.right;\n        }\n      }\n    } else {\n      textAlign = 'right';\n    }\n    return {textAlign, x};\n  }\n  _computeLabelArea() {\n    if (this.options.ticks.mirror) {\n      return;\n    }\n    const chart = this.chart;\n    const position = this.options.position;\n    if (position === 'left' || position === 'right') {\n      return {top: 0, left: this.left, bottom: chart.height, right: this.right};\n    } if (position === 'top' || position === 'bottom') {\n      return {top: this.top, left: 0, bottom: this.bottom, right: chart.width};\n    }\n  }\n  drawBackground() {\n    const {ctx, options: {backgroundColor}, left, top, width, height} = this;\n    if (backgroundColor) {\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      ctx.fillRect(left, top, width, height);\n      ctx.restore();\n    }\n  }\n  getLineWidthForValue(value) {\n    const grid = this.options.grid;\n    if (!this._isVisible() || !grid.display) {\n      return 0;\n    }\n    const ticks = this.ticks;\n    const index = ticks.findIndex(t => t.value === value);\n    if (index >= 0) {\n      const opts = grid.setContext(this.getContext(index));\n      return opts.lineWidth;\n    }\n    return 0;\n  }\n  drawGrid(chartArea) {\n    const grid = this.options.grid;\n    const ctx = this.ctx;\n    const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n    let i, ilen;\n    const drawLine = (p1, p2, style) => {\n      if (!style.width || !style.color) {\n        return;\n      }\n      ctx.save();\n      ctx.lineWidth = style.width;\n      ctx.strokeStyle = style.color;\n      ctx.setLineDash(style.borderDash || []);\n      ctx.lineDashOffset = style.borderDashOffset;\n      ctx.beginPath();\n      ctx.moveTo(p1.x, p1.y);\n      ctx.lineTo(p2.x, p2.y);\n      ctx.stroke();\n      ctx.restore();\n    };\n    if (grid.display) {\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        const item = items[i];\n        if (grid.drawOnChartArea) {\n          drawLine(\n            {x: item.x1, y: item.y1},\n            {x: item.x2, y: item.y2},\n            item\n          );\n        }\n        if (grid.drawTicks) {\n          drawLine(\n            {x: item.tx1, y: item.ty1},\n            {x: item.tx2, y: item.ty2},\n            {\n              color: item.tickColor,\n              width: item.tickWidth,\n              borderDash: item.tickBorderDash,\n              borderDashOffset: item.tickBorderDashOffset\n            }\n          );\n        }\n      }\n    }\n  }\n  drawBorder() {\n    const {chart, ctx, options: {grid}} = this;\n    const borderOpts = grid.setContext(this.getContext());\n    const axisWidth = grid.drawBorder ? borderOpts.borderWidth : 0;\n    if (!axisWidth) {\n      return;\n    }\n    const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n    const borderValue = this._borderValue;\n    let x1, x2, y1, y2;\n    if (this.isHorizontal()) {\n      x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n      x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n      y1 = y2 = borderValue;\n    } else {\n      y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n      y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n      x1 = x2 = borderValue;\n    }\n    ctx.save();\n    ctx.lineWidth = borderOpts.borderWidth;\n    ctx.strokeStyle = borderOpts.borderColor;\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n    ctx.restore();\n  }\n  drawLabels(chartArea) {\n    const optionTicks = this.options.ticks;\n    if (!optionTicks.display) {\n      return;\n    }\n    const ctx = this.ctx;\n    const area = this._computeLabelArea();\n    if (area) {\n      clipArea(ctx, area);\n    }\n    const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n    let i, ilen;\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      const item = items[i];\n      const tickFont = item.font;\n      const label = item.label;\n      if (item.backdrop) {\n        ctx.fillStyle = item.backdrop.color;\n        ctx.fillRect(item.backdrop.left, item.backdrop.top, item.backdrop.width, item.backdrop.height);\n      }\n      let y = item.textOffset;\n      renderText(ctx, label, 0, y, tickFont, item);\n    }\n    if (area) {\n      unclipArea(ctx);\n    }\n  }\n  drawTitle() {\n    const {ctx, options: {position, title, reverse}} = this;\n    if (!title.display) {\n      return;\n    }\n    const font = toFont(title.font);\n    const padding = toPadding(title.padding);\n    const align = title.align;\n    let offset = font.lineHeight / 2;\n    if (position === 'bottom' || position === 'center' || isObject(position)) {\n      offset += padding.bottom;\n      if (isArray(title.text)) {\n        offset += font.lineHeight * (title.text.length - 1);\n      }\n    } else {\n      offset += padding.top;\n    }\n    const {titleX, titleY, maxWidth, rotation} = titleArgs(this, offset, position, align);\n    renderText(ctx, title.text, 0, 0, font, {\n      color: title.color,\n      maxWidth,\n      rotation,\n      textAlign: titleAlign(align, position, reverse),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n  draw(chartArea) {\n    if (!this._isVisible()) {\n      return;\n    }\n    this.drawBackground();\n    this.drawGrid(chartArea);\n    this.drawBorder();\n    this.drawTitle();\n    this.drawLabels(chartArea);\n  }\n  _layers() {\n    const opts = this.options;\n    const tz = opts.ticks && opts.ticks.z || 0;\n    const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n    if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n      return [{\n        z: tz,\n        draw: (chartArea) => {\n          this.draw(chartArea);\n        }\n      }];\n    }\n    return [{\n      z: gz,\n      draw: (chartArea) => {\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawTitle();\n      }\n    }, {\n      z: gz + 1,\n      draw: () => {\n        this.drawBorder();\n      }\n    }, {\n      z: tz,\n      draw: (chartArea) => {\n        this.drawLabels(chartArea);\n      }\n    }];\n  }\n  getMatchingVisibleMetas(type) {\n    const metas = this.chart.getSortedVisibleDatasetMetas();\n    const axisID = this.axis + 'AxisID';\n    const result = [];\n    let i, ilen;\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      const meta = metas[i];\n      if (meta[axisID] === this.id && (!type || meta.type === type)) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n  _resolveTickFontOptions(index) {\n    const opts = this.options.ticks.setContext(this.getContext(index));\n    return toFont(opts.font);\n  }\n  _maxDigits() {\n    const fontSize = this._resolveTickFontOptions(0).lineHeight;\n    return (this.isHorizontal() ? this.width : this.height) / fontSize;\n  }\n}\n\nclass TypedRegistry {\n  constructor(type, scope, override) {\n    this.type = type;\n    this.scope = scope;\n    this.override = override;\n    this.items = Object.create(null);\n  }\n  isForType(type) {\n    return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n  }\n  register(item) {\n    const proto = Object.getPrototypeOf(item);\n    let parentScope;\n    if (isIChartComponent(proto)) {\n      parentScope = this.register(proto);\n    }\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope + '.' + id;\n    if (!id) {\n      throw new Error('class does not have id: ' + item);\n    }\n    if (id in items) {\n      return scope;\n    }\n    items[id] = item;\n    registerDefaults(item, scope, parentScope);\n    if (this.override) {\n      defaults.override(item.id, item.overrides);\n    }\n    return scope;\n  }\n  get(id) {\n    return this.items[id];\n  }\n  unregister(item) {\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope;\n    if (id in items) {\n      delete items[id];\n    }\n    if (scope && id in defaults[scope]) {\n      delete defaults[scope][id];\n      if (this.override) {\n        delete overrides[id];\n      }\n    }\n  }\n}\nfunction registerDefaults(item, scope, parentScope) {\n  const itemDefaults = merge(Object.create(null), [\n    parentScope ? defaults.get(parentScope) : {},\n    defaults.get(scope),\n    item.defaults\n  ]);\n  defaults.set(scope, itemDefaults);\n  if (item.defaultRoutes) {\n    routeDefaults(scope, item.defaultRoutes);\n  }\n  if (item.descriptors) {\n    defaults.describe(scope, item.descriptors);\n  }\n}\nfunction routeDefaults(scope, routes) {\n  Object.keys(routes).forEach(property => {\n    const propertyParts = property.split('.');\n    const sourceName = propertyParts.pop();\n    const sourceScope = [scope].concat(propertyParts).join('.');\n    const parts = routes[property].split('.');\n    const targetName = parts.pop();\n    const targetScope = parts.join('.');\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\n  });\n}\nfunction isIChartComponent(proto) {\n  return 'id' in proto && 'defaults' in proto;\n}\n\nclass Registry {\n  constructor() {\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n    this.elements = new TypedRegistry(Element, 'elements');\n    this.plugins = new TypedRegistry(Object, 'plugins');\n    this.scales = new TypedRegistry(Scale, 'scales');\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\n  }\n  add(...args) {\n    this._each('register', args);\n  }\n  remove(...args) {\n    this._each('unregister', args);\n  }\n  addControllers(...args) {\n    this._each('register', args, this.controllers);\n  }\n  addElements(...args) {\n    this._each('register', args, this.elements);\n  }\n  addPlugins(...args) {\n    this._each('register', args, this.plugins);\n  }\n  addScales(...args) {\n    this._each('register', args, this.scales);\n  }\n  getController(id) {\n    return this._get(id, this.controllers, 'controller');\n  }\n  getElement(id) {\n    return this._get(id, this.elements, 'element');\n  }\n  getPlugin(id) {\n    return this._get(id, this.plugins, 'plugin');\n  }\n  getScale(id) {\n    return this._get(id, this.scales, 'scale');\n  }\n  removeControllers(...args) {\n    this._each('unregister', args, this.controllers);\n  }\n  removeElements(...args) {\n    this._each('unregister', args, this.elements);\n  }\n  removePlugins(...args) {\n    this._each('unregister', args, this.plugins);\n  }\n  removeScales(...args) {\n    this._each('unregister', args, this.scales);\n  }\n  _each(method, args, typedRegistry) {\n    [...args].forEach(arg => {\n      const reg = typedRegistry || this._getRegistryForType(arg);\n      if (typedRegistry || reg.isForType(arg) || (reg === this.plugins && arg.id)) {\n        this._exec(method, reg, arg);\n      } else {\n        each(arg, item => {\n          const itemReg = typedRegistry || this._getRegistryForType(item);\n          this._exec(method, itemReg, item);\n        });\n      }\n    });\n  }\n  _exec(method, registry, component) {\n    const camelMethod = _capitalize(method);\n    callback(component['before' + camelMethod], [], component);\n    registry[method](component);\n    callback(component['after' + camelMethod], [], component);\n  }\n  _getRegistryForType(type) {\n    for (let i = 0; i < this._typedRegistries.length; i++) {\n      const reg = this._typedRegistries[i];\n      if (reg.isForType(type)) {\n        return reg;\n      }\n    }\n    return this.plugins;\n  }\n  _get(id, typedRegistry, type) {\n    const item = typedRegistry.get(id);\n    if (item === undefined) {\n      throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n    }\n    return item;\n  }\n}\nvar registry = new Registry();\n\nclass PluginService {\n  constructor() {\n    this._init = [];\n  }\n  notify(chart, hook, args, filter) {\n    if (hook === 'beforeInit') {\n      this._init = this._createDescriptors(chart, true);\n      this._notify(this._init, chart, 'install');\n    }\n    const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n    const result = this._notify(descriptors, chart, hook, args);\n    if (hook === 'afterDestroy') {\n      this._notify(descriptors, chart, 'stop');\n      this._notify(this._init, chart, 'uninstall');\n    }\n    return result;\n  }\n  _notify(descriptors, chart, hook, args) {\n    args = args || {};\n    for (const descriptor of descriptors) {\n      const plugin = descriptor.plugin;\n      const method = plugin[hook];\n      const params = [chart, args, descriptor.options];\n      if (callback(method, params, plugin) === false && args.cancelable) {\n        return false;\n      }\n    }\n    return true;\n  }\n  invalidate() {\n    if (!isNullOrUndef(this._cache)) {\n      this._oldCache = this._cache;\n      this._cache = undefined;\n    }\n  }\n  _descriptors(chart) {\n    if (this._cache) {\n      return this._cache;\n    }\n    const descriptors = this._cache = this._createDescriptors(chart);\n    this._notifyStateChanges(chart);\n    return descriptors;\n  }\n  _createDescriptors(chart, all) {\n    const config = chart && chart.config;\n    const options = valueOrDefault(config.options && config.options.plugins, {});\n    const plugins = allPlugins(config);\n    return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n  }\n  _notifyStateChanges(chart) {\n    const previousDescriptors = this._oldCache || [];\n    const descriptors = this._cache;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.plugin.id === y.plugin.id));\n    this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n    this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n  }\n}\nfunction allPlugins(config) {\n  const plugins = [];\n  const keys = Object.keys(registry.plugins.items);\n  for (let i = 0; i < keys.length; i++) {\n    plugins.push(registry.getPlugin(keys[i]));\n  }\n  const local = config.plugins || [];\n  for (let i = 0; i < local.length; i++) {\n    const plugin = local[i];\n    if (plugins.indexOf(plugin) === -1) {\n      plugins.push(plugin);\n    }\n  }\n  return plugins;\n}\nfunction getOpts(options, all) {\n  if (!all && options === false) {\n    return null;\n  }\n  if (options === true) {\n    return {};\n  }\n  return options;\n}\nfunction createDescriptors(chart, plugins, options, all) {\n  const result = [];\n  const context = chart.getContext();\n  for (let i = 0; i < plugins.length; i++) {\n    const plugin = plugins[i];\n    const id = plugin.id;\n    const opts = getOpts(options[id], all);\n    if (opts === null) {\n      continue;\n    }\n    result.push({\n      plugin,\n      options: pluginOpts(chart.config, plugin, opts, context)\n    });\n  }\n  return result;\n}\nfunction pluginOpts(config, plugin, opts, context) {\n  const keys = config.pluginScopeKeys(plugin);\n  const scopes = config.getOptionScopes(opts, keys);\n  return config.createResolver(scopes, context, [''], {scriptable: false, indexable: false, allKeys: true});\n}\n\nfunction getIndexAxis(type, options) {\n  const datasetDefaults = defaults.datasets[type] || {};\n  const datasetOptions = (options.datasets || {})[type] || {};\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n  let axis = id;\n  if (id === '_index_') {\n    axis = indexAxis;\n  } else if (id === '_value_') {\n    axis = indexAxis === 'x' ? 'y' : 'x';\n  }\n  return axis;\n}\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n  return axis === indexAxis ? '_index_' : '_value_';\n}\nfunction axisFromPosition(position) {\n  if (position === 'top' || position === 'bottom') {\n    return 'x';\n  }\n  if (position === 'left' || position === 'right') {\n    return 'y';\n  }\n}\nfunction determineAxis(id, scaleOptions) {\n  if (id === 'x' || id === 'y') {\n    return id;\n  }\n  return scaleOptions.axis || axisFromPosition(scaleOptions.position) || id.charAt(0).toLowerCase();\n}\nfunction mergeScaleConfig(config, options) {\n  const chartDefaults = overrides[config.type] || {scales: {}};\n  const configScales = options.scales || {};\n  const chartIndexAxis = getIndexAxis(config.type, options);\n  const firstIDs = Object.create(null);\n  const scales = Object.create(null);\n  Object.keys(configScales).forEach(id => {\n    const scaleConf = configScales[id];\n    if (!isObject(scaleConf)) {\n      return console.error(`Invalid scale configuration for scale: ${id}`);\n    }\n    if (scaleConf._proxy) {\n      return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n    }\n    const axis = determineAxis(id, scaleConf);\n    const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n    const defaultScaleOptions = chartDefaults.scales || {};\n    firstIDs[axis] = firstIDs[axis] || id;\n    scales[id] = mergeIf(Object.create(null), [{axis}, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n  });\n  config.data.datasets.forEach(dataset => {\n    const type = dataset.type || config.type;\n    const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n    const datasetDefaults = overrides[type] || {};\n    const defaultScaleOptions = datasetDefaults.scales || {};\n    Object.keys(defaultScaleOptions).forEach(defaultID => {\n      const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n      const id = dataset[axis + 'AxisID'] || firstIDs[axis] || axis;\n      scales[id] = scales[id] || Object.create(null);\n      mergeIf(scales[id], [{axis}, configScales[id], defaultScaleOptions[defaultID]]);\n    });\n  });\n  Object.keys(scales).forEach(key => {\n    const scale = scales[key];\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\n  });\n  return scales;\n}\nfunction initOptions(config) {\n  const options = config.options || (config.options = {});\n  options.plugins = valueOrDefault(options.plugins, {});\n  options.scales = mergeScaleConfig(config, options);\n}\nfunction initData(data) {\n  data = data || {};\n  data.datasets = data.datasets || [];\n  data.labels = data.labels || [];\n  return data;\n}\nfunction initConfig(config) {\n  config = config || {};\n  config.data = initData(config.data);\n  initOptions(config);\n  return config;\n}\nconst keyCache = new Map();\nconst keysCached = new Set();\nfunction cachedKeys(cacheKey, generate) {\n  let keys = keyCache.get(cacheKey);\n  if (!keys) {\n    keys = generate();\n    keyCache.set(cacheKey, keys);\n    keysCached.add(keys);\n  }\n  return keys;\n}\nconst addIfFound = (set, obj, key) => {\n  const opts = resolveObjectKey(obj, key);\n  if (opts !== undefined) {\n    set.add(opts);\n  }\n};\nclass Config {\n  constructor(config) {\n    this._config = initConfig(config);\n    this._scopeCache = new Map();\n    this._resolverCache = new Map();\n  }\n  get platform() {\n    return this._config.platform;\n  }\n  get type() {\n    return this._config.type;\n  }\n  set type(type) {\n    this._config.type = type;\n  }\n  get data() {\n    return this._config.data;\n  }\n  set data(data) {\n    this._config.data = initData(data);\n  }\n  get options() {\n    return this._config.options;\n  }\n  set options(options) {\n    this._config.options = options;\n  }\n  get plugins() {\n    return this._config.plugins;\n  }\n  update() {\n    const config = this._config;\n    this.clearCache();\n    initOptions(config);\n  }\n  clearCache() {\n    this._scopeCache.clear();\n    this._resolverCache.clear();\n  }\n  datasetScopeKeys(datasetType) {\n    return cachedKeys(datasetType,\n      () => [[\n        `datasets.${datasetType}`,\n        ''\n      ]]);\n  }\n  datasetAnimationScopeKeys(datasetType, transition) {\n    return cachedKeys(`${datasetType}.transition.${transition}`,\n      () => [\n        [\n          `datasets.${datasetType}.transitions.${transition}`,\n          `transitions.${transition}`,\n        ],\n        [\n          `datasets.${datasetType}`,\n          ''\n        ]\n      ]);\n  }\n  datasetElementScopeKeys(datasetType, elementType) {\n    return cachedKeys(`${datasetType}-${elementType}`,\n      () => [[\n        `datasets.${datasetType}.elements.${elementType}`,\n        `datasets.${datasetType}`,\n        `elements.${elementType}`,\n        ''\n      ]]);\n  }\n  pluginScopeKeys(plugin) {\n    const id = plugin.id;\n    const type = this.type;\n    return cachedKeys(`${type}-plugin-${id}`,\n      () => [[\n        `plugins.${id}`,\n        ...plugin.additionalOptionScopes || [],\n      ]]);\n  }\n  _cachedScopes(mainScope, resetCache) {\n    const _scopeCache = this._scopeCache;\n    let cache = _scopeCache.get(mainScope);\n    if (!cache || resetCache) {\n      cache = new Map();\n      _scopeCache.set(mainScope, cache);\n    }\n    return cache;\n  }\n  getOptionScopes(mainScope, keyLists, resetCache) {\n    const {options, type} = this;\n    const cache = this._cachedScopes(mainScope, resetCache);\n    const cached = cache.get(keyLists);\n    if (cached) {\n      return cached;\n    }\n    const scopes = new Set();\n    keyLists.forEach(keys => {\n      if (mainScope) {\n        scopes.add(mainScope);\n        keys.forEach(key => addIfFound(scopes, mainScope, key));\n      }\n      keys.forEach(key => addIfFound(scopes, options, key));\n      keys.forEach(key => addIfFound(scopes, overrides[type] || {}, key));\n      keys.forEach(key => addIfFound(scopes, defaults, key));\n      keys.forEach(key => addIfFound(scopes, descriptors, key));\n    });\n    const array = Array.from(scopes);\n    if (array.length === 0) {\n      array.push(Object.create(null));\n    }\n    if (keysCached.has(keyLists)) {\n      cache.set(keyLists, array);\n    }\n    return array;\n  }\n  chartOptionScopes() {\n    const {options, type} = this;\n    return [\n      options,\n      overrides[type] || {},\n      defaults.datasets[type] || {},\n      {type},\n      defaults,\n      descriptors\n    ];\n  }\n  resolveNamedOptions(scopes, names, context, prefixes = ['']) {\n    const result = {$shared: true};\n    const {resolver, subPrefixes} = getResolver(this._resolverCache, scopes, prefixes);\n    let options = resolver;\n    if (needContext(resolver, names)) {\n      result.$shared = false;\n      context = isFunction(context) ? context() : context;\n      const subResolver = this.createResolver(scopes, context, subPrefixes);\n      options = _attachContext(resolver, context, subResolver);\n    }\n    for (const prop of names) {\n      result[prop] = options[prop];\n    }\n    return result;\n  }\n  createResolver(scopes, context, prefixes = [''], descriptorDefaults) {\n    const {resolver} = getResolver(this._resolverCache, scopes, prefixes);\n    return isObject(context)\n      ? _attachContext(resolver, context, undefined, descriptorDefaults)\n      : resolver;\n  }\n}\nfunction getResolver(resolverCache, scopes, prefixes) {\n  let cache = resolverCache.get(scopes);\n  if (!cache) {\n    cache = new Map();\n    resolverCache.set(scopes, cache);\n  }\n  const cacheKey = prefixes.join();\n  let cached = cache.get(cacheKey);\n  if (!cached) {\n    const resolver = _createResolver(scopes, prefixes);\n    cached = {\n      resolver,\n      subPrefixes: prefixes.filter(p => !p.toLowerCase().includes('hover'))\n    };\n    cache.set(cacheKey, cached);\n  }\n  return cached;\n}\nconst hasFunction = value => isObject(value)\n  && Object.getOwnPropertyNames(value).reduce((acc, key) => acc || isFunction(value[key]), false);\nfunction needContext(proxy, names) {\n  const {isScriptable, isIndexable} = _descriptors(proxy);\n  for (const prop of names) {\n    const scriptable = isScriptable(prop);\n    const indexable = isIndexable(prop);\n    const value = (indexable || scriptable) && proxy[prop];\n    if ((scriptable && (isFunction(value) || hasFunction(value)))\n      || (indexable && isArray(value))) {\n      return true;\n    }\n  }\n  return false;\n}\n\nvar version = \"3.8.0\";\n\nconst KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\nfunction positionIsHorizontal(position, axis) {\n  return position === 'top' || position === 'bottom' || (KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x');\n}\nfunction compare2Level(l1, l2) {\n  return function(a, b) {\n    return a[l1] === b[l1]\n      ? a[l2] - b[l2]\n      : a[l1] - b[l1];\n  };\n}\nfunction onAnimationsComplete(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  chart.notifyPlugins('afterRender');\n  callback(animationOptions && animationOptions.onComplete, [context], chart);\n}\nfunction onAnimationProgress(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  callback(animationOptions && animationOptions.onProgress, [context], chart);\n}\nfunction getCanvas(item) {\n  if (_isDomSupported() && typeof item === 'string') {\n    item = document.getElementById(item);\n  } else if (item && item.length) {\n    item = item[0];\n  }\n  if (item && item.canvas) {\n    item = item.canvas;\n  }\n  return item;\n}\nconst instances = {};\nconst getChart = (key) => {\n  const canvas = getCanvas(key);\n  return Object.values(instances).filter((c) => c.canvas === canvas).pop();\n};\nfunction moveNumericKeys(obj, start, move) {\n  const keys = Object.keys(obj);\n  for (const key of keys) {\n    const intKey = +key;\n    if (intKey >= start) {\n      const value = obj[key];\n      delete obj[key];\n      if (move > 0 || intKey > start) {\n        obj[intKey + move] = value;\n      }\n    }\n  }\n}\nfunction determineLastEvent(e, lastEvent, inChartArea, isClick) {\n  if (!inChartArea || e.type === 'mouseout') {\n    return null;\n  }\n  if (isClick) {\n    return lastEvent;\n  }\n  return e;\n}\nclass Chart {\n  constructor(item, userConfig) {\n    const config = this.config = new Config(userConfig);\n    const initialCanvas = getCanvas(item);\n    const existingChart = getChart(initialCanvas);\n    if (existingChart) {\n      throw new Error(\n        'Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' +\n\t\t\t\t' must be destroyed before the canvas can be reused.'\n      );\n    }\n    const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n    this.platform.updateConfig(config);\n    const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n    const canvas = context && context.canvas;\n    const height = canvas && canvas.height;\n    const width = canvas && canvas.width;\n    this.id = uid();\n    this.ctx = context;\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this._options = options;\n    this._aspectRatio = this.aspectRatio;\n    this._layers = [];\n    this._metasets = [];\n    this._stacks = undefined;\n    this.boxes = [];\n    this.currentDevicePixelRatio = undefined;\n    this.chartArea = undefined;\n    this._active = [];\n    this._lastEvent = undefined;\n    this._listeners = {};\n    this._responsiveListeners = undefined;\n    this._sortedMetasets = [];\n    this.scales = {};\n    this._plugins = new PluginService();\n    this.$proxies = {};\n    this._hiddenIndices = {};\n    this.attached = false;\n    this._animationsDisabled = undefined;\n    this.$context = undefined;\n    this._doResize = debounce(mode => this.update(mode), options.resizeDelay || 0);\n    this._dataChanges = [];\n    instances[this.id] = this;\n    if (!context || !canvas) {\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\n      return;\n    }\n    animator.listen(this, 'complete', onAnimationsComplete);\n    animator.listen(this, 'progress', onAnimationProgress);\n    this._initialize();\n    if (this.attached) {\n      this.update();\n    }\n  }\n  get aspectRatio() {\n    const {options: {aspectRatio, maintainAspectRatio}, width, height, _aspectRatio} = this;\n    if (!isNullOrUndef(aspectRatio)) {\n      return aspectRatio;\n    }\n    if (maintainAspectRatio && _aspectRatio) {\n      return _aspectRatio;\n    }\n    return height ? width / height : null;\n  }\n  get data() {\n    return this.config.data;\n  }\n  set data(data) {\n    this.config.data = data;\n  }\n  get options() {\n    return this._options;\n  }\n  set options(options) {\n    this.config.options = options;\n  }\n  _initialize() {\n    this.notifyPlugins('beforeInit');\n    if (this.options.responsive) {\n      this.resize();\n    } else {\n      retinaScale(this, this.options.devicePixelRatio);\n    }\n    this.bindEvents();\n    this.notifyPlugins('afterInit');\n    return this;\n  }\n  clear() {\n    clearCanvas(this.canvas, this.ctx);\n    return this;\n  }\n  stop() {\n    animator.stop(this);\n    return this;\n  }\n  resize(width, height) {\n    if (!animator.running(this)) {\n      this._resize(width, height);\n    } else {\n      this._resizeBeforeDraw = {width, height};\n    }\n  }\n  _resize(width, height) {\n    const options = this.options;\n    const canvas = this.canvas;\n    const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n    const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n    const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n    const mode = this.width ? 'resize' : 'attach';\n    this.width = newSize.width;\n    this.height = newSize.height;\n    this._aspectRatio = this.aspectRatio;\n    if (!retinaScale(this, newRatio, true)) {\n      return;\n    }\n    this.notifyPlugins('resize', {size: newSize});\n    callback(options.onResize, [this, newSize], this);\n    if (this.attached) {\n      if (this._doResize(mode)) {\n        this.render();\n      }\n    }\n  }\n  ensureScalesHaveIDs() {\n    const options = this.options;\n    const scalesOptions = options.scales || {};\n    each(scalesOptions, (axisOptions, axisID) => {\n      axisOptions.id = axisID;\n    });\n  }\n  buildOrUpdateScales() {\n    const options = this.options;\n    const scaleOpts = options.scales;\n    const scales = this.scales;\n    const updated = Object.keys(scales).reduce((obj, id) => {\n      obj[id] = false;\n      return obj;\n    }, {});\n    let items = [];\n    if (scaleOpts) {\n      items = items.concat(\n        Object.keys(scaleOpts).map((id) => {\n          const scaleOptions = scaleOpts[id];\n          const axis = determineAxis(id, scaleOptions);\n          const isRadial = axis === 'r';\n          const isHorizontal = axis === 'x';\n          return {\n            options: scaleOptions,\n            dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n            dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n          };\n        })\n      );\n    }\n    each(items, (item) => {\n      const scaleOptions = item.options;\n      const id = scaleOptions.id;\n      const axis = determineAxis(id, scaleOptions);\n      const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n      if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n        scaleOptions.position = item.dposition;\n      }\n      updated[id] = true;\n      let scale = null;\n      if (id in scales && scales[id].type === scaleType) {\n        scale = scales[id];\n      } else {\n        const scaleClass = registry.getScale(scaleType);\n        scale = new scaleClass({\n          id,\n          type: scaleType,\n          ctx: this.ctx,\n          chart: this\n        });\n        scales[scale.id] = scale;\n      }\n      scale.init(scaleOptions, options);\n    });\n    each(updated, (hasUpdated, id) => {\n      if (!hasUpdated) {\n        delete scales[id];\n      }\n    });\n    each(scales, (scale) => {\n      layouts.configure(this, scale, scale.options);\n      layouts.addBox(this, scale);\n    });\n  }\n  _updateMetasets() {\n    const metasets = this._metasets;\n    const numData = this.data.datasets.length;\n    const numMeta = metasets.length;\n    metasets.sort((a, b) => a.index - b.index);\n    if (numMeta > numData) {\n      for (let i = numData; i < numMeta; ++i) {\n        this._destroyDatasetMeta(i);\n      }\n      metasets.splice(numData, numMeta - numData);\n    }\n    this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n  }\n  _removeUnreferencedMetasets() {\n    const {_metasets: metasets, data: {datasets}} = this;\n    if (metasets.length > datasets.length) {\n      delete this._stacks;\n    }\n    metasets.forEach((meta, index) => {\n      if (datasets.filter(x => x === meta._dataset).length === 0) {\n        this._destroyDatasetMeta(index);\n      }\n    });\n  }\n  buildOrUpdateControllers() {\n    const newControllers = [];\n    const datasets = this.data.datasets;\n    let i, ilen;\n    this._removeUnreferencedMetasets();\n    for (i = 0, ilen = datasets.length; i < ilen; i++) {\n      const dataset = datasets[i];\n      let meta = this.getDatasetMeta(i);\n      const type = dataset.type || this.config.type;\n      if (meta.type && meta.type !== type) {\n        this._destroyDatasetMeta(i);\n        meta = this.getDatasetMeta(i);\n      }\n      meta.type = type;\n      meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n      meta.order = dataset.order || 0;\n      meta.index = i;\n      meta.label = '' + dataset.label;\n      meta.visible = this.isDatasetVisible(i);\n      if (meta.controller) {\n        meta.controller.updateIndex(i);\n        meta.controller.linkScales();\n      } else {\n        const ControllerClass = registry.getController(type);\n        const {datasetElementType, dataElementType} = defaults.datasets[type];\n        Object.assign(ControllerClass.prototype, {\n          dataElementType: registry.getElement(dataElementType),\n          datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n        });\n        meta.controller = new ControllerClass(this, i);\n        newControllers.push(meta.controller);\n      }\n    }\n    this._updateMetasets();\n    return newControllers;\n  }\n  _resetElements() {\n    each(this.data.datasets, (dataset, datasetIndex) => {\n      this.getDatasetMeta(datasetIndex).controller.reset();\n    }, this);\n  }\n  reset() {\n    this._resetElements();\n    this.notifyPlugins('reset');\n  }\n  update(mode) {\n    const config = this.config;\n    config.update();\n    const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    const animsDisabled = this._animationsDisabled = !options.animation;\n    this._updateScales();\n    this._checkEventBindings();\n    this._updateHiddenIndices();\n    this._plugins.invalidate();\n    if (this.notifyPlugins('beforeUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n    const newControllers = this.buildOrUpdateControllers();\n    this.notifyPlugins('beforeElementsUpdate');\n    let minPadding = 0;\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; i++) {\n      const {controller} = this.getDatasetMeta(i);\n      const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n      controller.buildOrUpdateElements(reset);\n      minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n    }\n    minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n    this._updateLayout(minPadding);\n    if (!animsDisabled) {\n      each(newControllers, (controller) => {\n        controller.reset();\n      });\n    }\n    this._updateDatasets(mode);\n    this.notifyPlugins('afterUpdate', {mode});\n    this._layers.sort(compare2Level('z', '_idx'));\n    const {_active, _lastEvent} = this;\n    if (_lastEvent) {\n      this._eventHandler(_lastEvent, true);\n    } else if (_active.length) {\n      this._updateHoverStyles(_active, _active, true);\n    }\n    this.render();\n  }\n  _updateScales() {\n    each(this.scales, (scale) => {\n      layouts.removeBox(this, scale);\n    });\n    this.ensureScalesHaveIDs();\n    this.buildOrUpdateScales();\n  }\n  _checkEventBindings() {\n    const options = this.options;\n    const existingEvents = new Set(Object.keys(this._listeners));\n    const newEvents = new Set(options.events);\n    if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n      this.unbindEvents();\n      this.bindEvents();\n    }\n  }\n  _updateHiddenIndices() {\n    const {_hiddenIndices} = this;\n    const changes = this._getUniformDataChanges() || [];\n    for (const {method, start, count} of changes) {\n      const move = method === '_removeElements' ? -count : count;\n      moveNumericKeys(_hiddenIndices, start, move);\n    }\n  }\n  _getUniformDataChanges() {\n    const _dataChanges = this._dataChanges;\n    if (!_dataChanges || !_dataChanges.length) {\n      return;\n    }\n    this._dataChanges = [];\n    const datasetCount = this.data.datasets.length;\n    const makeSet = (idx) => new Set(\n      _dataChanges\n        .filter(c => c[0] === idx)\n        .map((c, i) => i + ',' + c.splice(1).join(','))\n    );\n    const changeSet = makeSet(0);\n    for (let i = 1; i < datasetCount; i++) {\n      if (!setsEqual(changeSet, makeSet(i))) {\n        return;\n      }\n    }\n    return Array.from(changeSet)\n      .map(c => c.split(','))\n      .map(a => ({method: a[1], start: +a[2], count: +a[3]}));\n  }\n  _updateLayout(minPadding) {\n    if (this.notifyPlugins('beforeLayout', {cancelable: true}) === false) {\n      return;\n    }\n    layouts.update(this, this.width, this.height, minPadding);\n    const area = this.chartArea;\n    const noArea = area.width <= 0 || area.height <= 0;\n    this._layers = [];\n    each(this.boxes, (box) => {\n      if (noArea && box.position === 'chartArea') {\n        return;\n      }\n      if (box.configure) {\n        box.configure();\n      }\n      this._layers.push(...box._layers());\n    }, this);\n    this._layers.forEach((item, index) => {\n      item._idx = index;\n    });\n    this.notifyPlugins('afterLayout');\n  }\n  _updateDatasets(mode) {\n    if (this.notifyPlugins('beforeDatasetsUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this.getDatasetMeta(i).controller.configure();\n    }\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._updateDataset(i, isFunction(mode) ? mode({datasetIndex: i}) : mode);\n    }\n    this.notifyPlugins('afterDatasetsUpdate', {mode});\n  }\n  _updateDataset(index, mode) {\n    const meta = this.getDatasetMeta(index);\n    const args = {meta, index, mode, cancelable: true};\n    if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n      return;\n    }\n    meta.controller._update(mode);\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetUpdate', args);\n  }\n  render() {\n    if (this.notifyPlugins('beforeRender', {cancelable: true}) === false) {\n      return;\n    }\n    if (animator.has(this)) {\n      if (this.attached && !animator.running(this)) {\n        animator.start(this);\n      }\n    } else {\n      this.draw();\n      onAnimationsComplete({chart: this});\n    }\n  }\n  draw() {\n    let i;\n    if (this._resizeBeforeDraw) {\n      const {width, height} = this._resizeBeforeDraw;\n      this._resize(width, height);\n      this._resizeBeforeDraw = null;\n    }\n    this.clear();\n    if (this.width <= 0 || this.height <= 0) {\n      return;\n    }\n    if (this.notifyPlugins('beforeDraw', {cancelable: true}) === false) {\n      return;\n    }\n    const layers = this._layers;\n    for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n    this._drawDatasets();\n    for (; i < layers.length; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n    this.notifyPlugins('afterDraw');\n  }\n  _getSortedDatasetMetas(filterVisible) {\n    const metasets = this._sortedMetasets;\n    const result = [];\n    let i, ilen;\n    for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n      const meta = metasets[i];\n      if (!filterVisible || meta.visible) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n  getSortedVisibleDatasetMetas() {\n    return this._getSortedDatasetMetas(true);\n  }\n  _drawDatasets() {\n    if (this.notifyPlugins('beforeDatasetsDraw', {cancelable: true}) === false) {\n      return;\n    }\n    const metasets = this.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      this._drawDataset(metasets[i]);\n    }\n    this.notifyPlugins('afterDatasetsDraw');\n  }\n  _drawDataset(meta) {\n    const ctx = this.ctx;\n    const clip = meta._clip;\n    const useClip = !clip.disabled;\n    const area = this.chartArea;\n    const args = {\n      meta,\n      index: meta.index,\n      cancelable: true\n    };\n    if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n      return;\n    }\n    if (useClip) {\n      clipArea(ctx, {\n        left: clip.left === false ? 0 : area.left - clip.left,\n        right: clip.right === false ? this.width : area.right + clip.right,\n        top: clip.top === false ? 0 : area.top - clip.top,\n        bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n      });\n    }\n    meta.controller.draw();\n    if (useClip) {\n      unclipArea(ctx);\n    }\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetDraw', args);\n  }\n  isPointInArea(point) {\n    return _isPointInArea(point, this.chartArea, this._minPadding);\n  }\n  getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n    const method = Interaction.modes[mode];\n    if (typeof method === 'function') {\n      return method(this, e, options, useFinalPosition);\n    }\n    return [];\n  }\n  getDatasetMeta(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    const metasets = this._metasets;\n    let meta = metasets.filter(x => x && x._dataset === dataset).pop();\n    if (!meta) {\n      meta = {\n        type: null,\n        data: [],\n        dataset: null,\n        controller: null,\n        hidden: null,\n        xAxisID: null,\n        yAxisID: null,\n        order: dataset && dataset.order || 0,\n        index: datasetIndex,\n        _dataset: dataset,\n        _parsed: [],\n        _sorted: false\n      };\n      metasets.push(meta);\n    }\n    return meta;\n  }\n  getContext() {\n    return this.$context || (this.$context = createContext(null, {chart: this, type: 'chart'}));\n  }\n  getVisibleDatasetCount() {\n    return this.getSortedVisibleDatasetMetas().length;\n  }\n  isDatasetVisible(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    if (!dataset) {\n      return false;\n    }\n    const meta = this.getDatasetMeta(datasetIndex);\n    return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n  }\n  setDatasetVisibility(datasetIndex, visible) {\n    const meta = this.getDatasetMeta(datasetIndex);\n    meta.hidden = !visible;\n  }\n  toggleDataVisibility(index) {\n    this._hiddenIndices[index] = !this._hiddenIndices[index];\n  }\n  getDataVisibility(index) {\n    return !this._hiddenIndices[index];\n  }\n  _updateVisibility(datasetIndex, dataIndex, visible) {\n    const mode = visible ? 'show' : 'hide';\n    const meta = this.getDatasetMeta(datasetIndex);\n    const anims = meta.controller._resolveAnimations(undefined, mode);\n    if (defined(dataIndex)) {\n      meta.data[dataIndex].hidden = !visible;\n      this.update();\n    } else {\n      this.setDatasetVisibility(datasetIndex, visible);\n      anims.update(meta, {visible});\n      this.update((ctx) => ctx.datasetIndex === datasetIndex ? mode : undefined);\n    }\n  }\n  hide(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, false);\n  }\n  show(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, true);\n  }\n  _destroyDatasetMeta(datasetIndex) {\n    const meta = this._metasets[datasetIndex];\n    if (meta && meta.controller) {\n      meta.controller._destroy();\n    }\n    delete this._metasets[datasetIndex];\n  }\n  _stop() {\n    let i, ilen;\n    this.stop();\n    animator.remove(this);\n    for (i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._destroyDatasetMeta(i);\n    }\n  }\n  destroy() {\n    this.notifyPlugins('beforeDestroy');\n    const {canvas, ctx} = this;\n    this._stop();\n    this.config.clearCache();\n    if (canvas) {\n      this.unbindEvents();\n      clearCanvas(canvas, ctx);\n      this.platform.releaseContext(ctx);\n      this.canvas = null;\n      this.ctx = null;\n    }\n    this.notifyPlugins('destroy');\n    delete instances[this.id];\n    this.notifyPlugins('afterDestroy');\n  }\n  toBase64Image(...args) {\n    return this.canvas.toDataURL(...args);\n  }\n  bindEvents() {\n    this.bindUserEvents();\n    if (this.options.responsive) {\n      this.bindResponsiveEvents();\n    } else {\n      this.attached = true;\n    }\n  }\n  bindUserEvents() {\n    const listeners = this._listeners;\n    const platform = this.platform;\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n    const listener = (e, x, y) => {\n      e.offsetX = x;\n      e.offsetY = y;\n      this._eventHandler(e);\n    };\n    each(this.options.events, (type) => _add(type, listener));\n  }\n  bindResponsiveEvents() {\n    if (!this._responsiveListeners) {\n      this._responsiveListeners = {};\n    }\n    const listeners = this._responsiveListeners;\n    const platform = this.platform;\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n    const _remove = (type, listener) => {\n      if (listeners[type]) {\n        platform.removeEventListener(this, type, listener);\n        delete listeners[type];\n      }\n    };\n    const listener = (width, height) => {\n      if (this.canvas) {\n        this.resize(width, height);\n      }\n    };\n    let detached;\n    const attached = () => {\n      _remove('attach', attached);\n      this.attached = true;\n      this.resize();\n      _add('resize', listener);\n      _add('detach', detached);\n    };\n    detached = () => {\n      this.attached = false;\n      _remove('resize', listener);\n      this._stop();\n      this._resize(0, 0);\n      _add('attach', attached);\n    };\n    if (platform.isAttached(this.canvas)) {\n      attached();\n    } else {\n      detached();\n    }\n  }\n  unbindEvents() {\n    each(this._listeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._listeners = {};\n    each(this._responsiveListeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._responsiveListeners = undefined;\n  }\n  updateHoverStyle(items, mode, enabled) {\n    const prefix = enabled ? 'set' : 'remove';\n    let meta, item, i, ilen;\n    if (mode === 'dataset') {\n      meta = this.getDatasetMeta(items[0].datasetIndex);\n      meta.controller['_' + prefix + 'DatasetHoverStyle']();\n    }\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n      const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n      if (controller) {\n        controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n      }\n    }\n  }\n  getActiveElements() {\n    return this._active || [];\n  }\n  setActiveElements(activeElements) {\n    const lastActive = this._active || [];\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('No dataset found at index ' + datasetIndex);\n      }\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed) {\n      this._active = active;\n      this._lastEvent = null;\n      this._updateHoverStyles(active, lastActive);\n    }\n  }\n  notifyPlugins(hook, args, filter) {\n    return this._plugins.notify(this, hook, args, filter);\n  }\n  _updateHoverStyles(active, lastActive, replay) {\n    const hoverOptions = this.options.hover;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.datasetIndex === y.datasetIndex && x.index === y.index));\n    const deactivated = diff(lastActive, active);\n    const activated = replay ? active : diff(active, lastActive);\n    if (deactivated.length) {\n      this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n    }\n    if (activated.length && hoverOptions.mode) {\n      this.updateHoverStyle(activated, hoverOptions.mode, true);\n    }\n  }\n  _eventHandler(e, replay) {\n    const args = {\n      event: e,\n      replay,\n      cancelable: true,\n      inChartArea: this.isPointInArea(e)\n    };\n    const eventFilter = (plugin) => (plugin.options.events || this.options.events).includes(e.native.type);\n    if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n      return;\n    }\n    const changed = this._handleEvent(e, replay, args.inChartArea);\n    args.cancelable = false;\n    this.notifyPlugins('afterEvent', args, eventFilter);\n    if (changed || args.changed) {\n      this.render();\n    }\n    return this;\n  }\n  _handleEvent(e, replay, inChartArea) {\n    const {_active: lastActive = [], options} = this;\n    const useFinalPosition = replay;\n    const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n    const isClick = _isClickEvent(e);\n    const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n    if (inChartArea) {\n      this._lastEvent = null;\n      callback(options.onHover, [e, active, this], this);\n      if (isClick) {\n        callback(options.onClick, [e, active, this], this);\n      }\n    }\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed || replay) {\n      this._active = active;\n      this._updateHoverStyles(active, lastActive, replay);\n    }\n    this._lastEvent = lastEvent;\n    return changed;\n  }\n  _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n    if (e.type === 'mouseout') {\n      return [];\n    }\n    if (!inChartArea) {\n      return lastActive;\n    }\n    const hoverOptions = this.options.hover;\n    return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n  }\n}\nconst invalidatePlugins = () => each(Chart.instances, (chart) => chart._plugins.invalidate());\nconst enumerable = true;\nObject.defineProperties(Chart, {\n  defaults: {\n    enumerable,\n    value: defaults\n  },\n  instances: {\n    enumerable,\n    value: instances\n  },\n  overrides: {\n    enumerable,\n    value: overrides\n  },\n  registry: {\n    enumerable,\n    value: registry\n  },\n  version: {\n    enumerable,\n    value: version\n  },\n  getChart: {\n    enumerable,\n    value: getChart\n  },\n  register: {\n    enumerable,\n    value: (...items) => {\n      registry.add(...items);\n      invalidatePlugins();\n    }\n  },\n  unregister: {\n    enumerable,\n    value: (...items) => {\n      registry.remove(...items);\n      invalidatePlugins();\n    }\n  }\n});\n\nfunction clipArc(ctx, element, endAngle) {\n  const {startAngle, pixelMargin, x, y, outerRadius, innerRadius} = element;\n  let angleMargin = pixelMargin / outerRadius;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n  if (innerRadius > pixelMargin) {\n    angleMargin = pixelMargin / innerRadius;\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n  } else {\n    ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n  }\n  ctx.closePath();\n  ctx.clip();\n}\nfunction toRadiusCorners(value) {\n  return _readValueToProps(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\n}\nfunction parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n  const o = toRadiusCorners(arc.options.borderRadius);\n  const halfThickness = (outerRadius - innerRadius) / 2;\n  const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n  const computeOuterLimit = (val) => {\n    const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n    return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n  };\n  return {\n    outerStart: computeOuterLimit(o.outerStart),\n    outerEnd: computeOuterLimit(o.outerEnd),\n    innerStart: _limitValue(o.innerStart, 0, innerLimit),\n    innerEnd: _limitValue(o.innerEnd, 0, innerLimit),\n  };\n}\nfunction rThetaToXY(r, theta, x, y) {\n  return {\n    x: x + r * Math.cos(theta),\n    y: y + r * Math.sin(theta),\n  };\n}\nfunction pathArc(ctx, element, offset, spacing, end) {\n  const {x, y, startAngle: start, pixelMargin, innerRadius: innerR} = element;\n  const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n  const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n  let spacingOffset = 0;\n  const alpha = end - start;\n  if (spacing) {\n    const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n    const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n    const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n    const adjustedAngle = avNogSpacingRadius !== 0 ? (alpha * avNogSpacingRadius) / (avNogSpacingRadius + spacing) : alpha;\n    spacingOffset = (alpha - adjustedAngle) / 2;\n  }\n  const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n  const angleOffset = (alpha - beta) / 2;\n  const startAngle = start + angleOffset + spacingOffset;\n  const endAngle = end - angleOffset - spacingOffset;\n  const {outerStart, outerEnd, innerStart, innerEnd} = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n  const outerStartAdjustedRadius = outerRadius - outerStart;\n  const outerEndAdjustedRadius = outerRadius - outerEnd;\n  const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n  const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n  const innerStartAdjustedRadius = innerRadius + innerStart;\n  const innerEndAdjustedRadius = innerRadius + innerEnd;\n  const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n  const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerEndAdjustedAngle);\n  if (outerEnd > 0) {\n    const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n  }\n  const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n  ctx.lineTo(p4.x, p4.y);\n  if (innerEnd > 0) {\n    const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n  }\n  ctx.arc(x, y, innerRadius, endAngle - (innerEnd / innerRadius), startAngle + (innerStart / innerRadius), true);\n  if (innerStart > 0) {\n    const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n  }\n  const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n  ctx.lineTo(p8.x, p8.y);\n  if (outerStart > 0) {\n    const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n  }\n  ctx.closePath();\n}\nfunction drawArc(ctx, element, offset, spacing) {\n  const {fullCircles, startAngle, circumference} = element;\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, startAngle + TAU);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.fill();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + circumference % TAU;\n      if (circumference % TAU === 0) {\n        endAngle += TAU;\n      }\n    }\n  }\n  pathArc(ctx, element, offset, spacing, endAngle);\n  ctx.fill();\n  return endAngle;\n}\nfunction drawFullCircleBorders(ctx, element, inner) {\n  const {x, y, startAngle, pixelMargin, fullCircles} = element;\n  const outerRadius = Math.max(element.outerRadius - pixelMargin, 0);\n  const innerRadius = element.innerRadius + pixelMargin;\n  let i;\n  if (inner) {\n    clipArc(ctx, element, startAngle + TAU);\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, innerRadius, startAngle + TAU, startAngle, true);\n  for (i = 0; i < fullCircles; ++i) {\n    ctx.stroke();\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle, startAngle + TAU);\n  for (i = 0; i < fullCircles; ++i) {\n    ctx.stroke();\n  }\n}\nfunction drawBorder(ctx, element, offset, spacing, endAngle) {\n  const {options} = element;\n  const {borderWidth, borderJoinStyle} = options;\n  const inner = options.borderAlign === 'inner';\n  if (!borderWidth) {\n    return;\n  }\n  if (inner) {\n    ctx.lineWidth = borderWidth * 2;\n    ctx.lineJoin = borderJoinStyle || 'round';\n  } else {\n    ctx.lineWidth = borderWidth;\n    ctx.lineJoin = borderJoinStyle || 'bevel';\n  }\n  if (element.fullCircles) {\n    drawFullCircleBorders(ctx, element, inner);\n  }\n  if (inner) {\n    clipArc(ctx, element, endAngle);\n  }\n  pathArc(ctx, element, offset, spacing, endAngle);\n  ctx.stroke();\n}\nclass ArcElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.circumference = undefined;\n    this.startAngle = undefined;\n    this.endAngle = undefined;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.pixelMargin = 0;\n    this.fullCircles = 0;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  inRange(chartX, chartY, useFinalPosition) {\n    const point = this.getProps(['x', 'y'], useFinalPosition);\n    const {angle, distance} = getAngleFromPoint(point, {x: chartX, y: chartY});\n    const {startAngle, endAngle, innerRadius, outerRadius, circumference} = this.getProps([\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference'\n    ], useFinalPosition);\n    const rAdjust = this.options.spacing / 2;\n    const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n    const betweenAngles = _circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n    const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n    return (betweenAngles && withinRadius);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y, startAngle, endAngle, innerRadius, outerRadius} = this.getProps([\n      'x',\n      'y',\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference',\n    ], useFinalPosition);\n    const {offset, spacing} = this.options;\n    const halfAngle = (startAngle + endAngle) / 2;\n    const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n    return {\n      x: x + Math.cos(halfAngle) * halfRadius,\n      y: y + Math.sin(halfAngle) * halfRadius\n    };\n  }\n  tooltipPosition(useFinalPosition) {\n    return this.getCenterPoint(useFinalPosition);\n  }\n  draw(ctx) {\n    const {options, circumference} = this;\n    const offset = (options.offset || 0) / 2;\n    const spacing = (options.spacing || 0) / 2;\n    this.pixelMargin = (options.borderAlign === 'inner') ? 0.33 : 0;\n    this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n    if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n      return;\n    }\n    ctx.save();\n    let radiusOffset = 0;\n    if (offset) {\n      radiusOffset = offset / 2;\n      const halfAngle = (this.startAngle + this.endAngle) / 2;\n      ctx.translate(Math.cos(halfAngle) * radiusOffset, Math.sin(halfAngle) * radiusOffset);\n      if (this.circumference >= PI) {\n        radiusOffset = offset;\n      }\n    }\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    const endAngle = drawArc(ctx, this, radiusOffset, spacing);\n    drawBorder(ctx, this, radiusOffset, spacing, endAngle);\n    ctx.restore();\n  }\n}\nArcElement.id = 'arc';\nArcElement.defaults = {\n  borderAlign: 'center',\n  borderColor: '#fff',\n  borderJoinStyle: undefined,\n  borderRadius: 0,\n  borderWidth: 2,\n  offset: 0,\n  spacing: 0,\n  angle: undefined,\n};\nArcElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor'\n};\n\nfunction setStyle(ctx, options, style = options) {\n  ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n  ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n  ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n  ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n  ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n  ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\nfunction lineTo(ctx, previous, target) {\n  ctx.lineTo(target.x, target.y);\n}\nfunction getLineMethod(options) {\n  if (options.stepped) {\n    return _steppedLineTo;\n  }\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierCurveTo;\n  }\n  return lineTo;\n}\nfunction pathVars(points, segment, params = {}) {\n  const count = points.length;\n  const {start: paramsStart = 0, end: paramsEnd = count - 1} = params;\n  const {start: segmentStart, end: segmentEnd} = segment;\n  const start = Math.max(paramsStart, segmentStart);\n  const end = Math.min(paramsEnd, segmentEnd);\n  const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n  return {\n    count,\n    start,\n    loop: segment.loop,\n    ilen: end < start && !outside ? count + end - start : end - start\n  };\n}\nfunction pathSegment(ctx, line, segment, params) {\n  const {points, options} = line;\n  const {count, start, loop, ilen} = pathVars(points, segment, params);\n  const lineMethod = getLineMethod(options);\n  let {move = true, reverse} = params || {};\n  let i, point, prev;\n  for (i = 0; i <= ilen; ++i) {\n    point = points[(start + (reverse ? ilen - i : i)) % count];\n    if (point.skip) {\n      continue;\n    } else if (move) {\n      ctx.moveTo(point.x, point.y);\n      move = false;\n    } else {\n      lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    prev = point;\n  }\n  if (loop) {\n    point = points[(start + (reverse ? ilen : 0)) % count];\n    lineMethod(ctx, prev, point, reverse, options.stepped);\n  }\n  return !!loop;\n}\nfunction fastPathSegment(ctx, line, segment, params) {\n  const points = line.points;\n  const {count, start, ilen} = pathVars(points, segment, params);\n  const {move = true, reverse} = params || {};\n  let avgX = 0;\n  let countX = 0;\n  let i, point, prevX, minY, maxY, lastY;\n  const pointIndex = (index) => (start + (reverse ? ilen - index : index)) % count;\n  const drawX = () => {\n    if (minY !== maxY) {\n      ctx.lineTo(avgX, maxY);\n      ctx.lineTo(avgX, minY);\n      ctx.lineTo(avgX, lastY);\n    }\n  };\n  if (move) {\n    point = points[pointIndex(0)];\n    ctx.moveTo(point.x, point.y);\n  }\n  for (i = 0; i <= ilen; ++i) {\n    point = points[pointIndex(i)];\n    if (point.skip) {\n      continue;\n    }\n    const x = point.x;\n    const y = point.y;\n    const truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n      } else if (y > maxY) {\n        maxY = y;\n      }\n      avgX = (countX * avgX + x) / ++countX;\n    } else {\n      drawX();\n      ctx.lineTo(x, y);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n    }\n    lastY = y;\n  }\n  drawX();\n}\nfunction _getSegmentMethod(line) {\n  const opts = line.options;\n  const borderDash = opts.borderDash && opts.borderDash.length;\n  const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n  return useFastPath ? fastPathSegment : pathSegment;\n}\nfunction _getInterpolationMethod(options) {\n  if (options.stepped) {\n    return _steppedInterpolation;\n  }\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierInterpolation;\n  }\n  return _pointInLine;\n}\nfunction strokePathWithCache(ctx, line, start, count) {\n  let path = line._path;\n  if (!path) {\n    path = line._path = new Path2D();\n    if (line.path(path, start, count)) {\n      path.closePath();\n    }\n  }\n  setStyle(ctx, line.options);\n  ctx.stroke(path);\n}\nfunction strokePathDirect(ctx, line, start, count) {\n  const {segments, options} = line;\n  const segmentMethod = _getSegmentMethod(line);\n  for (const segment of segments) {\n    setStyle(ctx, options, segment.style);\n    ctx.beginPath();\n    if (segmentMethod(ctx, line, segment, {start, end: start + count - 1})) {\n      ctx.closePath();\n    }\n    ctx.stroke();\n  }\n}\nconst usePath2D = typeof Path2D === 'function';\nfunction draw(ctx, line, start, count) {\n  if (usePath2D && !line.options.segment) {\n    strokePathWithCache(ctx, line, start, count);\n  } else {\n    strokePathDirect(ctx, line, start, count);\n  }\n}\nclass LineElement extends Element {\n  constructor(cfg) {\n    super();\n    this.animated = true;\n    this.options = undefined;\n    this._chart = undefined;\n    this._loop = undefined;\n    this._fullLoop = undefined;\n    this._path = undefined;\n    this._points = undefined;\n    this._segments = undefined;\n    this._decimated = false;\n    this._pointsUpdated = false;\n    this._datasetIndex = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  updateControlPoints(chartArea, indexAxis) {\n    const options = this.options;\n    if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n      const loop = options.spanGaps ? this._loop : this._fullLoop;\n      _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n      this._pointsUpdated = true;\n    }\n  }\n  set points(points) {\n    this._points = points;\n    delete this._segments;\n    delete this._path;\n    this._pointsUpdated = false;\n  }\n  get points() {\n    return this._points;\n  }\n  get segments() {\n    return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n  }\n  first() {\n    const segments = this.segments;\n    const points = this.points;\n    return segments.length && points[segments[0].start];\n  }\n  last() {\n    const segments = this.segments;\n    const points = this.points;\n    const count = segments.length;\n    return count && points[segments[count - 1].end];\n  }\n  interpolate(point, property) {\n    const options = this.options;\n    const value = point[property];\n    const points = this.points;\n    const segments = _boundSegments(this, {property, start: value, end: value});\n    if (!segments.length) {\n      return;\n    }\n    const result = [];\n    const _interpolate = _getInterpolationMethod(options);\n    let i, ilen;\n    for (i = 0, ilen = segments.length; i < ilen; ++i) {\n      const {start, end} = segments[i];\n      const p1 = points[start];\n      const p2 = points[end];\n      if (p1 === p2) {\n        result.push(p1);\n        continue;\n      }\n      const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n      const interpolated = _interpolate(p1, p2, t, options.stepped);\n      interpolated[property] = point[property];\n      result.push(interpolated);\n    }\n    return result.length === 1 ? result[0] : result;\n  }\n  pathSegment(ctx, segment, params) {\n    const segmentMethod = _getSegmentMethod(this);\n    return segmentMethod(ctx, this, segment, params);\n  }\n  path(ctx, start, count) {\n    const segments = this.segments;\n    const segmentMethod = _getSegmentMethod(this);\n    let loop = this._loop;\n    start = start || 0;\n    count = count || (this.points.length - start);\n    for (const segment of segments) {\n      loop &= segmentMethod(ctx, this, segment, {start, end: start + count - 1});\n    }\n    return !!loop;\n  }\n  draw(ctx, chartArea, start, count) {\n    const options = this.options || {};\n    const points = this.points || [];\n    if (points.length && options.borderWidth) {\n      ctx.save();\n      draw(ctx, this, start, count);\n      ctx.restore();\n    }\n    if (this.animated) {\n      this._pointsUpdated = false;\n      this._path = undefined;\n    }\n  }\n}\nLineElement.id = 'line';\nLineElement.defaults = {\n  borderCapStyle: 'butt',\n  borderDash: [],\n  borderDashOffset: 0,\n  borderJoinStyle: 'miter',\n  borderWidth: 3,\n  capBezierPoints: true,\n  cubicInterpolationMode: 'default',\n  fill: false,\n  spanGaps: false,\n  stepped: false,\n  tension: 0,\n};\nLineElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\nLineElement.descriptors = {\n  _scriptable: true,\n  _indexable: (name) => name !== 'borderDash' && name !== 'fill',\n};\n\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n  const options = el.options;\n  const {[axis]: value} = el.getProps([axis], useFinalPosition);\n  return (Math.abs(pos - value) < options.radius + options.hitRadius);\n}\nclass PointElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.parsed = undefined;\n    this.skip = undefined;\n    this.stop = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  inRange(mouseX, mouseY, useFinalPosition) {\n    const options = this.options;\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return ((Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2)) < Math.pow(options.hitRadius + options.radius, 2));\n  }\n  inXRange(mouseX, useFinalPosition) {\n    return inRange$1(this, mouseX, 'x', useFinalPosition);\n  }\n  inYRange(mouseY, useFinalPosition) {\n    return inRange$1(this, mouseY, 'y', useFinalPosition);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n  size(options) {\n    options = options || this.options || {};\n    let radius = options.radius || 0;\n    radius = Math.max(radius, radius && options.hoverRadius || 0);\n    const borderWidth = radius && options.borderWidth || 0;\n    return (radius + borderWidth) * 2;\n  }\n  draw(ctx, area) {\n    const options = this.options;\n    if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n      return;\n    }\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.fillStyle = options.backgroundColor;\n    drawPoint(ctx, options, this.x, this.y);\n  }\n  getRange() {\n    const options = this.options || {};\n    return options.radius + options.hitRadius;\n  }\n}\nPointElement.id = 'point';\nPointElement.defaults = {\n  borderWidth: 1,\n  hitRadius: 1,\n  hoverBorderWidth: 1,\n  hoverRadius: 4,\n  pointStyle: 'circle',\n  radius: 3,\n  rotation: 0\n};\nPointElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\n\nfunction getBarBounds(bar, useFinalPosition) {\n  const {x, y, base, width, height} = bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition);\n  let left, right, top, bottom, half;\n  if (bar.horizontal) {\n    half = height / 2;\n    left = Math.min(x, base);\n    right = Math.max(x, base);\n    top = y - half;\n    bottom = y + half;\n  } else {\n    half = width / 2;\n    left = x - half;\n    right = x + half;\n    top = Math.min(y, base);\n    bottom = Math.max(y, base);\n  }\n  return {left, top, right, bottom};\n}\nfunction skipOrLimit(skip, value, min, max) {\n  return skip ? 0 : _limitValue(value, min, max);\n}\nfunction parseBorderWidth(bar, maxW, maxH) {\n  const value = bar.options.borderWidth;\n  const skip = bar.borderSkipped;\n  const o = toTRBL(value);\n  return {\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\n  };\n}\nfunction parseBorderRadius(bar, maxW, maxH) {\n  const {enableBorderRadius} = bar.getProps(['enableBorderRadius']);\n  const value = bar.options.borderRadius;\n  const o = toTRBLCorners(value);\n  const maxR = Math.min(maxW, maxH);\n  const skip = bar.borderSkipped;\n  const enableBorder = enableBorderRadius || isObject(value);\n  return {\n    topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n    topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n    bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n    bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n  };\n}\nfunction boundingRects(bar) {\n  const bounds = getBarBounds(bar);\n  const width = bounds.right - bounds.left;\n  const height = bounds.bottom - bounds.top;\n  const border = parseBorderWidth(bar, width / 2, height / 2);\n  const radius = parseBorderRadius(bar, width / 2, height / 2);\n  return {\n    outer: {\n      x: bounds.left,\n      y: bounds.top,\n      w: width,\n      h: height,\n      radius\n    },\n    inner: {\n      x: bounds.left + border.l,\n      y: bounds.top + border.t,\n      w: width - border.l - border.r,\n      h: height - border.t - border.b,\n      radius: {\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r)),\n      }\n    }\n  };\n}\nfunction inRange(bar, x, y, useFinalPosition) {\n  const skipX = x === null;\n  const skipY = y === null;\n  const skipBoth = skipX && skipY;\n  const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n  return bounds\n\t\t&& (skipX || _isBetween(x, bounds.left, bounds.right))\n\t\t&& (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\nfunction hasRadius(radius) {\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\nfunction addNormalRectPath(ctx, rect) {\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\nfunction inflateRect(rect, amount, refRect = {}) {\n  const x = rect.x !== refRect.x ? -amount : 0;\n  const y = rect.y !== refRect.y ? -amount : 0;\n  const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n  const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n  return {\n    x: rect.x + x,\n    y: rect.y + y,\n    w: rect.w + w,\n    h: rect.h + h,\n    radius: rect.radius\n  };\n}\nclass BarElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.horizontal = undefined;\n    this.base = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.inflateAmount = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  draw(ctx) {\n    const {inflateAmount, options: {borderColor, backgroundColor}} = this;\n    const {inner, outer} = boundingRects(this);\n    const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n    ctx.save();\n    if (outer.w !== inner.w || outer.h !== inner.h) {\n      ctx.beginPath();\n      addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n      ctx.clip();\n      addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n      ctx.fillStyle = borderColor;\n      ctx.fill('evenodd');\n    }\n    ctx.beginPath();\n    addRectPath(ctx, inflateRect(inner, inflateAmount));\n    ctx.fillStyle = backgroundColor;\n    ctx.fill();\n    ctx.restore();\n  }\n  inRange(mouseX, mouseY, useFinalPosition) {\n    return inRange(this, mouseX, mouseY, useFinalPosition);\n  }\n  inXRange(mouseX, useFinalPosition) {\n    return inRange(this, mouseX, null, useFinalPosition);\n  }\n  inYRange(mouseY, useFinalPosition) {\n    return inRange(this, null, mouseY, useFinalPosition);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y, base, horizontal} = this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition);\n    return {\n      x: horizontal ? (x + base) / 2 : x,\n      y: horizontal ? y : (y + base) / 2\n    };\n  }\n  getRange(axis) {\n    return axis === 'x' ? this.width / 2 : this.height / 2;\n  }\n}\nBarElement.id = 'bar';\nBarElement.defaults = {\n  borderSkipped: 'start',\n  borderWidth: 0,\n  borderRadius: 0,\n  inflateAmount: 'auto',\n  pointStyle: undefined\n};\nBarElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\n\nvar elements = /*#__PURE__*/Object.freeze({\n__proto__: null,\nArcElement: ArcElement,\nLineElement: LineElement,\nPointElement: PointElement,\nBarElement: BarElement\n});\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n  const samples = options.samples || availableWidth;\n  if (samples >= count) {\n    return data.slice(start, start + count);\n  }\n  const decimated = [];\n  const bucketWidth = (count - 2) / (samples - 2);\n  let sampledIndex = 0;\n  const endIndex = start + count - 1;\n  let a = start;\n  let i, maxAreaPoint, maxArea, area, nextA;\n  decimated[sampledIndex++] = data[a];\n  for (i = 0; i < samples - 2; i++) {\n    let avgX = 0;\n    let avgY = 0;\n    let j;\n    const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n    const avgRangeLength = avgRangeEnd - avgRangeStart;\n    for (j = avgRangeStart; j < avgRangeEnd; j++) {\n      avgX += data[j].x;\n      avgY += data[j].y;\n    }\n    avgX /= avgRangeLength;\n    avgY /= avgRangeLength;\n    const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n    const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n    const {x: pointAx, y: pointAy} = data[a];\n    maxArea = area = -1;\n    for (j = rangeOffs; j < rangeTo; j++) {\n      area = 0.5 * Math.abs(\n        (pointAx - avgX) * (data[j].y - pointAy) -\n        (pointAx - data[j].x) * (avgY - pointAy)\n      );\n      if (area > maxArea) {\n        maxArea = area;\n        maxAreaPoint = data[j];\n        nextA = j;\n      }\n    }\n    decimated[sampledIndex++] = maxAreaPoint;\n    a = nextA;\n  }\n  decimated[sampledIndex++] = data[endIndex];\n  return decimated;\n}\nfunction minMaxDecimation(data, start, count, availableWidth) {\n  let avgX = 0;\n  let countX = 0;\n  let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n  const decimated = [];\n  const endIndex = start + count - 1;\n  const xMin = data[start].x;\n  const xMax = data[endIndex].x;\n  const dx = xMax - xMin;\n  for (i = start; i < start + count; ++i) {\n    point = data[i];\n    x = (point.x - xMin) / dx * availableWidth;\n    y = point.y;\n    const truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n        minIndex = i;\n      } else if (y > maxY) {\n        maxY = y;\n        maxIndex = i;\n      }\n      avgX = (countX * avgX + point.x) / ++countX;\n    } else {\n      const lastIndex = i - 1;\n      if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n        const intermediateIndex1 = Math.min(minIndex, maxIndex);\n        const intermediateIndex2 = Math.max(minIndex, maxIndex);\n        if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex1],\n            x: avgX,\n          });\n        }\n        if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex2],\n            x: avgX\n          });\n        }\n      }\n      if (i > 0 && lastIndex !== startIndex) {\n        decimated.push(data[lastIndex]);\n      }\n      decimated.push(point);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n      minIndex = maxIndex = startIndex = i;\n    }\n  }\n  return decimated;\n}\nfunction cleanDecimatedDataset(dataset) {\n  if (dataset._decimated) {\n    const data = dataset._data;\n    delete dataset._decimated;\n    delete dataset._data;\n    Object.defineProperty(dataset, 'data', {value: data});\n  }\n}\nfunction cleanDecimatedData(chart) {\n  chart.data.datasets.forEach((dataset) => {\n    cleanDecimatedDataset(dataset);\n  });\n}\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n  const pointCount = points.length;\n  let start = 0;\n  let count;\n  const {iScale} = meta;\n  const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n  if (minDefined) {\n    start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n  }\n  if (maxDefined) {\n    count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n  } else {\n    count = pointCount - start;\n  }\n  return {start, count};\n}\nvar plugin_decimation = {\n  id: 'decimation',\n  defaults: {\n    algorithm: 'min-max',\n    enabled: false,\n  },\n  beforeElementsUpdate: (chart, args, options) => {\n    if (!options.enabled) {\n      cleanDecimatedData(chart);\n      return;\n    }\n    const availableWidth = chart.width;\n    chart.data.datasets.forEach((dataset, datasetIndex) => {\n      const {_data, indexAxis} = dataset;\n      const meta = chart.getDatasetMeta(datasetIndex);\n      const data = _data || dataset.data;\n      if (resolve([indexAxis, chart.options.indexAxis]) === 'y') {\n        return;\n      }\n      if (!meta.controller.supportsDecimation) {\n        return;\n      }\n      const xAxis = chart.scales[meta.xAxisID];\n      if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n        return;\n      }\n      if (chart.options.parsing) {\n        return;\n      }\n      let {start, count} = getStartAndCountOfVisiblePointsSimplified(meta, data);\n      const threshold = options.threshold || 4 * availableWidth;\n      if (count <= threshold) {\n        cleanDecimatedDataset(dataset);\n        return;\n      }\n      if (isNullOrUndef(_data)) {\n        dataset._data = data;\n        delete dataset.data;\n        Object.defineProperty(dataset, 'data', {\n          configurable: true,\n          enumerable: true,\n          get: function() {\n            return this._decimated;\n          },\n          set: function(d) {\n            this._data = d;\n          }\n        });\n      }\n      let decimated;\n      switch (options.algorithm) {\n      case 'lttb':\n        decimated = lttbDecimation(data, start, count, availableWidth, options);\n        break;\n      case 'min-max':\n        decimated = minMaxDecimation(data, start, count, availableWidth);\n        break;\n      default:\n        throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n      }\n      dataset._decimated = decimated;\n    });\n  },\n  destroy(chart) {\n    cleanDecimatedData(chart);\n  }\n};\n\nfunction _segments(line, target, property) {\n  const segments = line.segments;\n  const points = line.points;\n  const tpoints = target.points;\n  const parts = [];\n  for (const segment of segments) {\n    let {start, end} = segment;\n    end = _findSegmentEnd(start, end, points);\n    const bounds = _getBounds(property, points[start], points[end], segment.loop);\n    if (!target.segments) {\n      parts.push({\n        source: segment,\n        target: bounds,\n        start: points[start],\n        end: points[end]\n      });\n      continue;\n    }\n    const targetSegments = _boundSegments(target, bounds);\n    for (const tgt of targetSegments) {\n      const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n      const fillSources = _boundSegment(segment, points, subBounds);\n      for (const fillSource of fillSources) {\n        parts.push({\n          source: fillSource,\n          target: tgt,\n          start: {\n            [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n          },\n          end: {\n            [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n          }\n        });\n      }\n    }\n  }\n  return parts;\n}\nfunction _getBounds(property, first, last, loop) {\n  if (loop) {\n    return;\n  }\n  let start = first[property];\n  let end = last[property];\n  if (property === 'angle') {\n    start = _normalizeAngle(start);\n    end = _normalizeAngle(end);\n  }\n  return {property, start, end};\n}\nfunction _pointsFromSegments(boundary, line) {\n  const {x = null, y = null} = boundary || {};\n  const linePoints = line.points;\n  const points = [];\n  line.segments.forEach(({start, end}) => {\n    end = _findSegmentEnd(start, end, linePoints);\n    const first = linePoints[start];\n    const last = linePoints[end];\n    if (y !== null) {\n      points.push({x: first.x, y});\n      points.push({x: last.x, y});\n    } else if (x !== null) {\n      points.push({x, y: first.y});\n      points.push({x, y: last.y});\n    }\n  });\n  return points;\n}\nfunction _findSegmentEnd(start, end, points) {\n  for (;end > start; end--) {\n    const point = points[end];\n    if (!isNaN(point.x) && !isNaN(point.y)) {\n      break;\n    }\n  }\n  return end;\n}\nfunction _getEdge(a, b, prop, fn) {\n  if (a && b) {\n    return fn(a[prop], b[prop]);\n  }\n  return a ? a[prop] : b ? b[prop] : 0;\n}\n\nfunction _createBoundaryLine(boundary, line) {\n  let points = [];\n  let _loop = false;\n  if (isArray(boundary)) {\n    _loop = true;\n    points = boundary;\n  } else {\n    points = _pointsFromSegments(boundary, line);\n  }\n  return points.length ? new LineElement({\n    points,\n    options: {tension: 0},\n    _loop,\n    _fullLoop: _loop\n  }) : null;\n}\n\nfunction _resolveTarget(sources, index, propagate) {\n  const source = sources[index];\n  let fill = source.fill;\n  const visited = [index];\n  let target;\n  if (!propagate) {\n    return fill;\n  }\n  while (fill !== false && visited.indexOf(fill) === -1) {\n    if (!isNumberFinite(fill)) {\n      return fill;\n    }\n    target = sources[fill];\n    if (!target) {\n      return false;\n    }\n    if (target.visible) {\n      return fill;\n    }\n    visited.push(fill);\n    fill = target.fill;\n  }\n  return false;\n}\nfunction _decodeFill(line, index, count) {\n  const fill = parseFillOption(line);\n  if (isObject(fill)) {\n    return isNaN(fill.value) ? false : fill;\n  }\n  let target = parseFloat(fill);\n  if (isNumberFinite(target) && Math.floor(target) === target) {\n    return decodeTargetIndex(fill[0], index, target, count);\n  }\n  return ['origin', 'start', 'end', 'stack', 'shape'].indexOf(fill) >= 0 && fill;\n}\nfunction decodeTargetIndex(firstCh, index, target, count) {\n  if (firstCh === '-' || firstCh === '+') {\n    target = index + target;\n  }\n  if (target === index || target < 0 || target >= count) {\n    return false;\n  }\n  return target;\n}\nfunction _getTargetPixel(fill, scale) {\n  let pixel = null;\n  if (fill === 'start') {\n    pixel = scale.bottom;\n  } else if (fill === 'end') {\n    pixel = scale.top;\n  } else if (isObject(fill)) {\n    pixel = scale.getPixelForValue(fill.value);\n  } else if (scale.getBasePixel) {\n    pixel = scale.getBasePixel();\n  }\n  return pixel;\n}\nfunction _getTargetValue(fill, scale, startValue) {\n  let value;\n  if (fill === 'start') {\n    value = startValue;\n  } else if (fill === 'end') {\n    value = scale.options.reverse ? scale.min : scale.max;\n  } else if (isObject(fill)) {\n    value = fill.value;\n  } else {\n    value = scale.getBaseValue();\n  }\n  return value;\n}\nfunction parseFillOption(line) {\n  const options = line.options;\n  const fillOption = options.fill;\n  let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n  if (fill === undefined) {\n    fill = !!options.backgroundColor;\n  }\n  if (fill === false || fill === null) {\n    return false;\n  }\n  if (fill === true) {\n    return 'origin';\n  }\n  return fill;\n}\n\nfunction _buildStackLine(source) {\n  const {scale, index, line} = source;\n  const points = [];\n  const segments = line.segments;\n  const sourcePoints = line.points;\n  const linesBelow = getLinesBelow(scale, index);\n  linesBelow.push(_createBoundaryLine({x: null, y: scale.bottom}, line));\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    for (let j = segment.start; j <= segment.end; j++) {\n      addPointsBelow(points, sourcePoints[j], linesBelow);\n    }\n  }\n  return new LineElement({points, options: {}});\n}\nfunction getLinesBelow(scale, index) {\n  const below = [];\n  const metas = scale.getMatchingVisibleMetas('line');\n  for (let i = 0; i < metas.length; i++) {\n    const meta = metas[i];\n    if (meta.index === index) {\n      break;\n    }\n    if (!meta.hidden) {\n      below.unshift(meta.dataset);\n    }\n  }\n  return below;\n}\nfunction addPointsBelow(points, sourcePoint, linesBelow) {\n  const postponed = [];\n  for (let j = 0; j < linesBelow.length; j++) {\n    const line = linesBelow[j];\n    const {first, last, point} = findPoint(line, sourcePoint, 'x');\n    if (!point || (first && last)) {\n      continue;\n    }\n    if (first) {\n      postponed.unshift(point);\n    } else {\n      points.push(point);\n      if (!last) {\n        break;\n      }\n    }\n  }\n  points.push(...postponed);\n}\nfunction findPoint(line, sourcePoint, property) {\n  const point = line.interpolate(sourcePoint, property);\n  if (!point) {\n    return {};\n  }\n  const pointValue = point[property];\n  const segments = line.segments;\n  const linePoints = line.points;\n  let first = false;\n  let last = false;\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    const firstValue = linePoints[segment.start][property];\n    const lastValue = linePoints[segment.end][property];\n    if (_isBetween(pointValue, firstValue, lastValue)) {\n      first = pointValue === firstValue;\n      last = pointValue === lastValue;\n      break;\n    }\n  }\n  return {first, last, point};\n}\n\nclass simpleArc {\n  constructor(opts) {\n    this.x = opts.x;\n    this.y = opts.y;\n    this.radius = opts.radius;\n  }\n  pathSegment(ctx, bounds, opts) {\n    const {x, y, radius} = this;\n    bounds = bounds || {start: 0, end: TAU};\n    ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n    return !opts.bounds;\n  }\n  interpolate(point) {\n    const {x, y, radius} = this;\n    const angle = point.angle;\n    return {\n      x: x + Math.cos(angle) * radius,\n      y: y + Math.sin(angle) * radius,\n      angle\n    };\n  }\n}\n\nfunction _getTarget(source) {\n  const {chart, fill, line} = source;\n  if (isNumberFinite(fill)) {\n    return getLineByIndex(chart, fill);\n  }\n  if (fill === 'stack') {\n    return _buildStackLine(source);\n  }\n  if (fill === 'shape') {\n    return true;\n  }\n  const boundary = computeBoundary(source);\n  if (boundary instanceof simpleArc) {\n    return boundary;\n  }\n  return _createBoundaryLine(boundary, line);\n}\nfunction getLineByIndex(chart, index) {\n  const meta = chart.getDatasetMeta(index);\n  const visible = meta && chart.isDatasetVisible(index);\n  return visible ? meta.dataset : null;\n}\nfunction computeBoundary(source) {\n  const scale = source.scale || {};\n  if (scale.getPointPositionForValue) {\n    return computeCircularBoundary(source);\n  }\n  return computeLinearBoundary(source);\n}\nfunction computeLinearBoundary(source) {\n  const {scale = {}, fill} = source;\n  const pixel = _getTargetPixel(fill, scale);\n  if (isNumberFinite(pixel)) {\n    const horizontal = scale.isHorizontal();\n    return {\n      x: horizontal ? pixel : null,\n      y: horizontal ? null : pixel\n    };\n  }\n  return null;\n}\nfunction computeCircularBoundary(source) {\n  const {scale, fill} = source;\n  const options = scale.options;\n  const length = scale.getLabels().length;\n  const start = options.reverse ? scale.max : scale.min;\n  const value = _getTargetValue(fill, scale, start);\n  const target = [];\n  if (options.grid.circular) {\n    const center = scale.getPointPositionForValue(0, start);\n    return new simpleArc({\n      x: center.x,\n      y: center.y,\n      radius: scale.getDistanceFromCenterForValue(value)\n    });\n  }\n  for (let i = 0; i < length; ++i) {\n    target.push(scale.getPointPositionForValue(i, value));\n  }\n  return target;\n}\n\nfunction _drawfill(ctx, source, area) {\n  const target = _getTarget(source);\n  const {line, scale, axis} = source;\n  const lineOpts = line.options;\n  const fillOption = lineOpts.fill;\n  const color = lineOpts.backgroundColor;\n  const {above = color, below = color} = fillOption || {};\n  if (target && line.points.length) {\n    clipArea(ctx, area);\n    doFill(ctx, {line, target, above, below, area, scale, axis});\n    unclipArea(ctx);\n  }\n}\nfunction doFill(ctx, cfg) {\n  const {line, target, above, below, area, scale} = cfg;\n  const property = line._loop ? 'angle' : cfg.axis;\n  ctx.save();\n  if (property === 'x' && below !== above) {\n    clipVertical(ctx, target, area.top);\n    fill(ctx, {line, target, color: above, scale, property});\n    ctx.restore();\n    ctx.save();\n    clipVertical(ctx, target, area.bottom);\n  }\n  fill(ctx, {line, target, color: below, scale, property});\n  ctx.restore();\n}\nfunction clipVertical(ctx, target, clipY) {\n  const {segments, points} = target;\n  let first = true;\n  let lineLoop = false;\n  ctx.beginPath();\n  for (const segment of segments) {\n    const {start, end} = segment;\n    const firstPoint = points[start];\n    const lastPoint = points[_findSegmentEnd(start, end, points)];\n    if (first) {\n      ctx.moveTo(firstPoint.x, firstPoint.y);\n      first = false;\n    } else {\n      ctx.lineTo(firstPoint.x, clipY);\n      ctx.lineTo(firstPoint.x, firstPoint.y);\n    }\n    lineLoop = !!target.pathSegment(ctx, segment, {move: lineLoop});\n    if (lineLoop) {\n      ctx.closePath();\n    } else {\n      ctx.lineTo(lastPoint.x, clipY);\n    }\n  }\n  ctx.lineTo(target.first().x, clipY);\n  ctx.closePath();\n  ctx.clip();\n}\nfunction fill(ctx, cfg) {\n  const {line, target, property, color, scale} = cfg;\n  const segments = _segments(line, target, property);\n  for (const {source: src, target: tgt, start, end} of segments) {\n    const {style: {backgroundColor = color} = {}} = src;\n    const notShape = target !== true;\n    ctx.save();\n    ctx.fillStyle = backgroundColor;\n    clipBounds(ctx, scale, notShape && _getBounds(property, start, end));\n    ctx.beginPath();\n    const lineLoop = !!line.pathSegment(ctx, src);\n    let loop;\n    if (notShape) {\n      if (lineLoop) {\n        ctx.closePath();\n      } else {\n        interpolatedLineTo(ctx, target, end, property);\n      }\n      const targetLoop = !!target.pathSegment(ctx, tgt, {move: lineLoop, reverse: true});\n      loop = lineLoop && targetLoop;\n      if (!loop) {\n        interpolatedLineTo(ctx, target, start, property);\n      }\n    }\n    ctx.closePath();\n    ctx.fill(loop ? 'evenodd' : 'nonzero');\n    ctx.restore();\n  }\n}\nfunction clipBounds(ctx, scale, bounds) {\n  const {top, bottom} = scale.chart.chartArea;\n  const {property, start, end} = bounds || {};\n  if (property === 'x') {\n    ctx.beginPath();\n    ctx.rect(start, top, end - start, bottom - top);\n    ctx.clip();\n  }\n}\nfunction interpolatedLineTo(ctx, target, point, property) {\n  const interpolatedPoint = target.interpolate(point, property);\n  if (interpolatedPoint) {\n    ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n  }\n}\n\nvar index = {\n  id: 'filler',\n  afterDatasetsUpdate(chart, _args, options) {\n    const count = (chart.data.datasets || []).length;\n    const sources = [];\n    let meta, i, line, source;\n    for (i = 0; i < count; ++i) {\n      meta = chart.getDatasetMeta(i);\n      line = meta.dataset;\n      source = null;\n      if (line && line.options && line instanceof LineElement) {\n        source = {\n          visible: chart.isDatasetVisible(i),\n          index: i,\n          fill: _decodeFill(line, i, count),\n          chart,\n          axis: meta.controller.options.indexAxis,\n          scale: meta.vScale,\n          line,\n        };\n      }\n      meta.$filler = source;\n      sources.push(source);\n    }\n    for (i = 0; i < count; ++i) {\n      source = sources[i];\n      if (!source || source.fill === false) {\n        continue;\n      }\n      source.fill = _resolveTarget(sources, i, options.propagate);\n    }\n  },\n  beforeDraw(chart, _args, options) {\n    const draw = options.drawTime === 'beforeDraw';\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const area = chart.chartArea;\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (!source) {\n        continue;\n      }\n      source.line.updateControlPoints(area, source.axis);\n      if (draw) {\n        _drawfill(chart.ctx, source, area);\n      }\n    }\n  },\n  beforeDatasetsDraw(chart, _args, options) {\n    if (options.drawTime !== 'beforeDatasetsDraw') {\n      return;\n    }\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (source) {\n        _drawfill(chart.ctx, source, chart.chartArea);\n      }\n    }\n  },\n  beforeDatasetDraw(chart, args, options) {\n    const source = args.meta.$filler;\n    if (!source || source.fill === false || options.drawTime !== 'beforeDatasetDraw') {\n      return;\n    }\n    _drawfill(chart.ctx, source, chart.chartArea);\n  },\n  defaults: {\n    propagate: true,\n    drawTime: 'beforeDatasetDraw'\n  }\n};\n\nconst getBoxSize = (labelOpts, fontSize) => {\n  let {boxHeight = fontSize, boxWidth = fontSize} = labelOpts;\n  if (labelOpts.usePointStyle) {\n    boxHeight = Math.min(boxHeight, fontSize);\n    boxWidth = Math.min(boxWidth, fontSize);\n  }\n  return {\n    boxWidth,\n    boxHeight,\n    itemHeight: Math.max(fontSize, boxHeight)\n  };\n};\nconst itemsEqual = (a, b) => a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\nclass Legend extends Element {\n  constructor(config) {\n    super();\n    this._added = false;\n    this.legendHitBoxes = [];\n    this._hoveredItem = null;\n    this.doughnutMode = false;\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this.legendItems = undefined;\n    this.columnSizes = undefined;\n    this.lineWidths = undefined;\n    this.maxHeight = undefined;\n    this.maxWidth = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this._margins = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n  update(maxWidth, maxHeight, margins) {\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins;\n    this.setDimensions();\n    this.buildLabels();\n    this.fit();\n  }\n  setDimensions() {\n    if (this.isHorizontal()) {\n      this.width = this.maxWidth;\n      this.left = this._margins.left;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n      this.top = this._margins.top;\n      this.bottom = this.height;\n    }\n  }\n  buildLabels() {\n    const labelOpts = this.options.labels || {};\n    let legendItems = callback(labelOpts.generateLabels, [this.chart], this) || [];\n    if (labelOpts.filter) {\n      legendItems = legendItems.filter((item) => labelOpts.filter(item, this.chart.data));\n    }\n    if (labelOpts.sort) {\n      legendItems = legendItems.sort((a, b) => labelOpts.sort(a, b, this.chart.data));\n    }\n    if (this.options.reverse) {\n      legendItems.reverse();\n    }\n    this.legendItems = legendItems;\n  }\n  fit() {\n    const {options, ctx} = this;\n    if (!options.display) {\n      this.width = this.height = 0;\n      return;\n    }\n    const labelOpts = options.labels;\n    const labelFont = toFont(labelOpts.font);\n    const fontSize = labelFont.size;\n    const titleHeight = this._computeTitleHeight();\n    const {boxWidth, itemHeight} = getBoxSize(labelOpts, fontSize);\n    let width, height;\n    ctx.font = labelFont.string;\n    if (this.isHorizontal()) {\n      width = this.maxWidth;\n      height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    } else {\n      height = this.maxHeight;\n      width = this._fitCols(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    }\n    this.width = Math.min(width, options.maxWidth || this.maxWidth);\n    this.height = Math.min(height, options.maxHeight || this.maxHeight);\n  }\n  _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n    const {ctx, maxWidth, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    const lineWidths = this.lineWidths = [0];\n    const lineHeight = itemHeight + padding;\n    let totalHeight = titleHeight;\n    ctx.textAlign = 'left';\n    ctx.textBaseline = 'middle';\n    let row = -1;\n    let top = -lineHeight;\n    this.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n      if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n        totalHeight += lineHeight;\n        lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n        top += lineHeight;\n        row++;\n      }\n      hitboxes[i] = {left: 0, top, row, width: itemWidth, height: itemHeight};\n      lineWidths[lineWidths.length - 1] += itemWidth + padding;\n    });\n    return totalHeight;\n  }\n  _fitCols(titleHeight, fontSize, boxWidth, itemHeight) {\n    const {ctx, maxHeight, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    const columnSizes = this.columnSizes = [];\n    const heightLimit = maxHeight - titleHeight;\n    let totalWidth = padding;\n    let currentColWidth = 0;\n    let currentColHeight = 0;\n    let left = 0;\n    let col = 0;\n    this.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n      if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n        totalWidth += currentColWidth + padding;\n        columnSizes.push({width: currentColWidth, height: currentColHeight});\n        left += currentColWidth + padding;\n        col++;\n        currentColWidth = currentColHeight = 0;\n      }\n      hitboxes[i] = {left, top: currentColHeight, col, width: itemWidth, height: itemHeight};\n      currentColWidth = Math.max(currentColWidth, itemWidth);\n      currentColHeight += itemHeight + padding;\n    });\n    totalWidth += currentColWidth;\n    columnSizes.push({width: currentColWidth, height: currentColHeight});\n    return totalWidth;\n  }\n  adjustHitBoxes() {\n    if (!this.options.display) {\n      return;\n    }\n    const titleHeight = this._computeTitleHeight();\n    const {legendHitBoxes: hitboxes, options: {align, labels: {padding}, rtl}} = this;\n    const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n    if (this.isHorizontal()) {\n      let row = 0;\n      let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n      for (const hitbox of hitboxes) {\n        if (row !== hitbox.row) {\n          row = hitbox.row;\n          left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n        }\n        hitbox.top += this.top + titleHeight + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n        left += hitbox.width + padding;\n      }\n    } else {\n      let col = 0;\n      let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n      for (const hitbox of hitboxes) {\n        if (hitbox.col !== col) {\n          col = hitbox.col;\n          top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n        }\n        hitbox.top = top;\n        hitbox.left += this.left + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n        top += hitbox.height + padding;\n      }\n    }\n  }\n  isHorizontal() {\n    return this.options.position === 'top' || this.options.position === 'bottom';\n  }\n  draw() {\n    if (this.options.display) {\n      const ctx = this.ctx;\n      clipArea(ctx, this);\n      this._draw();\n      unclipArea(ctx);\n    }\n  }\n  _draw() {\n    const {options: opts, columnSizes, lineWidths, ctx} = this;\n    const {align, labels: labelOpts} = opts;\n    const defaultColor = defaults.color;\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const labelFont = toFont(labelOpts.font);\n    const {color: fontColor, padding} = labelOpts;\n    const fontSize = labelFont.size;\n    const halfFontSize = fontSize / 2;\n    let cursor;\n    this.drawTitle();\n    ctx.textAlign = rtlHelper.textAlign('left');\n    ctx.textBaseline = 'middle';\n    ctx.lineWidth = 0.5;\n    ctx.font = labelFont.string;\n    const {boxWidth, boxHeight, itemHeight} = getBoxSize(labelOpts, fontSize);\n    const drawLegendBox = function(x, y, legendItem) {\n      if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n        return;\n      }\n      ctx.save();\n      const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n      ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n      ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n      ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n      ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n      ctx.lineWidth = lineWidth;\n      ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n      ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n      if (labelOpts.usePointStyle) {\n        const drawOptions = {\n          radius: boxWidth * Math.SQRT2 / 2,\n          pointStyle: legendItem.pointStyle,\n          rotation: legendItem.rotation,\n          borderWidth: lineWidth\n        };\n        const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n        const centerY = y + halfFontSize;\n        drawPoint(ctx, drawOptions, centerX, centerY);\n      } else {\n        const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n        const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n        const borderRadius = toTRBLCorners(legendItem.borderRadius);\n        ctx.beginPath();\n        if (Object.values(borderRadius).some(v => v !== 0)) {\n          addRoundedRectPath(ctx, {\n            x: xBoxLeft,\n            y: yBoxTop,\n            w: boxWidth,\n            h: boxHeight,\n            radius: borderRadius,\n          });\n        } else {\n          ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n        }\n        ctx.fill();\n        if (lineWidth !== 0) {\n          ctx.stroke();\n        }\n      }\n      ctx.restore();\n    };\n    const fillText = function(x, y, legendItem) {\n      renderText(ctx, legendItem.text, x, y + (itemHeight / 2), labelFont, {\n        strikethrough: legendItem.hidden,\n        textAlign: rtlHelper.textAlign(legendItem.textAlign)\n      });\n    };\n    const isHorizontal = this.isHorizontal();\n    const titleHeight = this._computeTitleHeight();\n    if (isHorizontal) {\n      cursor = {\n        x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n        y: this.top + padding + titleHeight,\n        line: 0\n      };\n    } else {\n      cursor = {\n        x: this.left + padding,\n        y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n        line: 0\n      };\n    }\n    overrideTextDirection(this.ctx, opts.textDirection);\n    const lineHeight = itemHeight + padding;\n    this.legendItems.forEach((legendItem, i) => {\n      ctx.strokeStyle = legendItem.fontColor || fontColor;\n      ctx.fillStyle = legendItem.fontColor || fontColor;\n      const textWidth = ctx.measureText(legendItem.text).width;\n      const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n      const width = boxWidth + halfFontSize + textWidth;\n      let x = cursor.x;\n      let y = cursor.y;\n      rtlHelper.setWidth(this.width);\n      if (isHorizontal) {\n        if (i > 0 && x + width + padding > this.right) {\n          y = cursor.y += lineHeight;\n          cursor.line++;\n          x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n        }\n      } else if (i > 0 && y + lineHeight > this.bottom) {\n        x = cursor.x = x + columnSizes[cursor.line].width + padding;\n        cursor.line++;\n        y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n      }\n      const realX = rtlHelper.x(x);\n      drawLegendBox(realX, y, legendItem);\n      x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n      fillText(rtlHelper.x(x), y, legendItem);\n      if (isHorizontal) {\n        cursor.x += width + padding;\n      } else {\n        cursor.y += lineHeight;\n      }\n    });\n    restoreTextDirection(this.ctx, opts.textDirection);\n  }\n  drawTitle() {\n    const opts = this.options;\n    const titleOpts = opts.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    if (!titleOpts.display) {\n      return;\n    }\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const ctx = this.ctx;\n    const position = titleOpts.position;\n    const halfFontSize = titleFont.size / 2;\n    const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n    let y;\n    let left = this.left;\n    let maxWidth = this.width;\n    if (this.isHorizontal()) {\n      maxWidth = Math.max(...this.lineWidths);\n      y = this.top + topPaddingPlusHalfFontSize;\n      left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n    } else {\n      const maxHeight = this.columnSizes.reduce((acc, size) => Math.max(acc, size.height), 0);\n      y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n    }\n    const x = _alignStartEnd(position, left, left + maxWidth);\n    ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n    ctx.textBaseline = 'middle';\n    ctx.strokeStyle = titleOpts.color;\n    ctx.fillStyle = titleOpts.color;\n    ctx.font = titleFont.string;\n    renderText(ctx, titleOpts.text, x, y, titleFont);\n  }\n  _computeTitleHeight() {\n    const titleOpts = this.options.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n  }\n  _getLegendItemAt(x, y) {\n    let i, hitBox, lh;\n    if (_isBetween(x, this.left, this.right)\n      && _isBetween(y, this.top, this.bottom)) {\n      lh = this.legendHitBoxes;\n      for (i = 0; i < lh.length; ++i) {\n        hitBox = lh[i];\n        if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width)\n          && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n          return this.legendItems[i];\n        }\n      }\n    }\n    return null;\n  }\n  handleEvent(e) {\n    const opts = this.options;\n    if (!isListened(e.type, opts)) {\n      return;\n    }\n    const hoveredItem = this._getLegendItemAt(e.x, e.y);\n    if (e.type === 'mousemove' || e.type === 'mouseout') {\n      const previous = this._hoveredItem;\n      const sameItem = itemsEqual(previous, hoveredItem);\n      if (previous && !sameItem) {\n        callback(opts.onLeave, [e, previous, this], this);\n      }\n      this._hoveredItem = hoveredItem;\n      if (hoveredItem && !sameItem) {\n        callback(opts.onHover, [e, hoveredItem, this], this);\n      }\n    } else if (hoveredItem) {\n      callback(opts.onClick, [e, hoveredItem, this], this);\n    }\n  }\n}\nfunction isListened(type, opts) {\n  if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n    return true;\n  }\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n    return true;\n  }\n  return false;\n}\nvar plugin_legend = {\n  id: 'legend',\n  _element: Legend,\n  start(chart, _args, options) {\n    const legend = chart.legend = new Legend({ctx: chart.ctx, options, chart});\n    layouts.configure(chart, legend, options);\n    layouts.addBox(chart, legend);\n  },\n  stop(chart) {\n    layouts.removeBox(chart, chart.legend);\n    delete chart.legend;\n  },\n  beforeUpdate(chart, _args, options) {\n    const legend = chart.legend;\n    layouts.configure(chart, legend, options);\n    legend.options = options;\n  },\n  afterUpdate(chart) {\n    const legend = chart.legend;\n    legend.buildLabels();\n    legend.adjustHitBoxes();\n  },\n  afterEvent(chart, args) {\n    if (!args.replay) {\n      chart.legend.handleEvent(args.event);\n    }\n  },\n  defaults: {\n    display: true,\n    position: 'top',\n    align: 'center',\n    fullSize: true,\n    reverse: false,\n    weight: 1000,\n    onClick(e, legendItem, legend) {\n      const index = legendItem.datasetIndex;\n      const ci = legend.chart;\n      if (ci.isDatasetVisible(index)) {\n        ci.hide(index);\n        legendItem.hidden = true;\n      } else {\n        ci.show(index);\n        legendItem.hidden = false;\n      }\n    },\n    onHover: null,\n    onLeave: null,\n    labels: {\n      color: (ctx) => ctx.chart.options.color,\n      boxWidth: 40,\n      padding: 10,\n      generateLabels(chart) {\n        const datasets = chart.data.datasets;\n        const {labels: {usePointStyle, pointStyle, textAlign, color}} = chart.legend.options;\n        return chart._getSortedDatasetMetas().map((meta) => {\n          const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n          const borderWidth = toPadding(style.borderWidth);\n          return {\n            text: datasets[meta.index].label,\n            fillStyle: style.backgroundColor,\n            fontColor: color,\n            hidden: !meta.visible,\n            lineCap: style.borderCapStyle,\n            lineDash: style.borderDash,\n            lineDashOffset: style.borderDashOffset,\n            lineJoin: style.borderJoinStyle,\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\n            strokeStyle: style.borderColor,\n            pointStyle: pointStyle || style.pointStyle,\n            rotation: style.rotation,\n            textAlign: textAlign || style.textAlign,\n            borderRadius: 0,\n            datasetIndex: meta.index\n          };\n        }, this);\n      }\n    },\n    title: {\n      color: (ctx) => ctx.chart.options.color,\n      display: false,\n      position: 'center',\n      text: '',\n    }\n  },\n  descriptors: {\n    _scriptable: (name) => !name.startsWith('on'),\n    labels: {\n      _scriptable: (name) => !['generateLabels', 'filter', 'sort'].includes(name),\n    }\n  },\n};\n\nclass Title extends Element {\n  constructor(config) {\n    super();\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this._padding = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n  update(maxWidth, maxHeight) {\n    const opts = this.options;\n    this.left = 0;\n    this.top = 0;\n    if (!opts.display) {\n      this.width = this.height = this.right = this.bottom = 0;\n      return;\n    }\n    this.width = this.right = maxWidth;\n    this.height = this.bottom = maxHeight;\n    const lineCount = isArray(opts.text) ? opts.text.length : 1;\n    this._padding = toPadding(opts.padding);\n    const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n    if (this.isHorizontal()) {\n      this.height = textSize;\n    } else {\n      this.width = textSize;\n    }\n  }\n  isHorizontal() {\n    const pos = this.options.position;\n    return pos === 'top' || pos === 'bottom';\n  }\n  _drawArgs(offset) {\n    const {top, left, bottom, right, options} = this;\n    const align = options.align;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n    if (this.isHorizontal()) {\n      titleX = _alignStartEnd(align, left, right);\n      titleY = top + offset;\n      maxWidth = right - left;\n    } else {\n      if (options.position === 'left') {\n        titleX = left + offset;\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = PI * -0.5;\n      } else {\n        titleX = right - offset;\n        titleY = _alignStartEnd(align, top, bottom);\n        rotation = PI * 0.5;\n      }\n      maxWidth = bottom - top;\n    }\n    return {titleX, titleY, maxWidth, rotation};\n  }\n  draw() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    if (!opts.display) {\n      return;\n    }\n    const fontOpts = toFont(opts.font);\n    const lineHeight = fontOpts.lineHeight;\n    const offset = lineHeight / 2 + this._padding.top;\n    const {titleX, titleY, maxWidth, rotation} = this._drawArgs(offset);\n    renderText(ctx, opts.text, 0, 0, fontOpts, {\n      color: opts.color,\n      maxWidth,\n      rotation,\n      textAlign: _toLeftRightCenter(opts.align),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n}\nfunction createTitle(chart, titleOpts) {\n  const title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart\n  });\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\nvar plugin_title = {\n  id: 'title',\n  _element: Title,\n  start(chart, _args, options) {\n    createTitle(chart, options);\n  },\n  stop(chart) {\n    const titleBlock = chart.titleBlock;\n    layouts.removeBox(chart, titleBlock);\n    delete chart.titleBlock;\n  },\n  beforeUpdate(chart, _args, options) {\n    const title = chart.titleBlock;\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'bold',\n    },\n    fullSize: true,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n\nconst map = new WeakMap();\nvar plugin_subtitle = {\n  id: 'subtitle',\n  start(chart, _args, options) {\n    const title = new Title({\n      ctx: chart.ctx,\n      options,\n      chart\n    });\n    layouts.configure(chart, title, options);\n    layouts.addBox(chart, title);\n    map.set(chart, title);\n  },\n  stop(chart) {\n    layouts.removeBox(chart, map.get(chart));\n    map.delete(chart);\n  },\n  beforeUpdate(chart, _args, options) {\n    const title = map.get(chart);\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'normal',\n    },\n    fullSize: true,\n    padding: 0,\n    position: 'top',\n    text: '',\n    weight: 1500\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n\nconst positioners = {\n  average(items) {\n    if (!items.length) {\n      return false;\n    }\n    let i, len;\n    let x = 0;\n    let y = 0;\n    let count = 0;\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const pos = el.tooltipPosition();\n        x += pos.x;\n        y += pos.y;\n        ++count;\n      }\n    }\n    return {\n      x: x / count,\n      y: y / count\n    };\n  },\n  nearest(items, eventPosition) {\n    if (!items.length) {\n      return false;\n    }\n    let x = eventPosition.x;\n    let y = eventPosition.y;\n    let minDistance = Number.POSITIVE_INFINITY;\n    let i, len, nearestElement;\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const center = el.getCenterPoint();\n        const d = distanceBetweenPoints(eventPosition, center);\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n    if (nearestElement) {\n      const tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n    return {\n      x,\n      y\n    };\n  }\n};\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (isArray(toPush)) {\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n  return base;\n}\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n  return str;\n}\nfunction createTooltipItem(chart, item) {\n  const {element, datasetIndex, index} = item;\n  const controller = chart.getDatasetMeta(datasetIndex).controller;\n  const {label, value} = controller.getLabelAndValue(index);\n  return {\n    chart,\n    label,\n    parsed: controller.getParsed(index),\n    raw: chart.data.datasets[datasetIndex].data[index],\n    formattedValue: value,\n    dataset: controller.getDataset(),\n    dataIndex: index,\n    datasetIndex,\n    element\n  };\n}\nfunction getTooltipSize(tooltip, options) {\n  const ctx = tooltip.chart.ctx;\n  const {body, footer, title} = tooltip;\n  const {boxWidth, boxHeight} = options;\n  const bodyFont = toFont(options.bodyFont);\n  const titleFont = toFont(options.titleFont);\n  const footerFont = toFont(options.footerFont);\n  const titleLineCount = title.length;\n  const footerLineCount = footer.length;\n  const bodyLineItemCount = body.length;\n  const padding = toPadding(options.padding);\n  let height = padding.height;\n  let width = 0;\n  let combinedBodyLength = body.reduce((count, bodyItem) => count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n  if (titleLineCount) {\n    height += titleLineCount * titleFont.lineHeight\n\t\t\t+ (titleLineCount - 1) * options.titleSpacing\n\t\t\t+ options.titleMarginBottom;\n  }\n  if (combinedBodyLength) {\n    const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n    height += bodyLineItemCount * bodyLineHeight\n\t\t\t+ (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight\n\t\t\t+ (combinedBodyLength - 1) * options.bodySpacing;\n  }\n  if (footerLineCount) {\n    height += options.footerMarginTop\n\t\t\t+ footerLineCount * footerFont.lineHeight\n\t\t\t+ (footerLineCount - 1) * options.footerSpacing;\n  }\n  let widthPadding = 0;\n  const maxLineWidth = function(line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n  ctx.save();\n  ctx.font = titleFont.string;\n  each(tooltip.title, maxLineWidth);\n  ctx.font = bodyFont.string;\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n  widthPadding = options.displayColors ? (boxWidth + 2 + options.boxPadding) : 0;\n  each(body, (bodyItem) => {\n    each(bodyItem.before, maxLineWidth);\n    each(bodyItem.lines, maxLineWidth);\n    each(bodyItem.after, maxLineWidth);\n  });\n  widthPadding = 0;\n  ctx.font = footerFont.string;\n  each(tooltip.footer, maxLineWidth);\n  ctx.restore();\n  width += padding.width;\n  return {width, height};\n}\nfunction determineYAlign(chart, size) {\n  const {y, height} = size;\n  if (y < height / 2) {\n    return 'top';\n  } else if (y > (chart.height - height / 2)) {\n    return 'bottom';\n  }\n  return 'center';\n}\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n  const {x, width} = size;\n  const caret = options.caretSize + options.caretPadding;\n  if (xAlign === 'left' && x + width + caret > chart.width) {\n    return true;\n  }\n  if (xAlign === 'right' && x - width - caret < 0) {\n    return true;\n  }\n}\nfunction determineXAlign(chart, options, size, yAlign) {\n  const {x, width} = size;\n  const {width: chartWidth, chartArea: {left, right}} = chart;\n  let xAlign = 'center';\n  if (yAlign === 'center') {\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n  } else if (x <= width / 2) {\n    xAlign = 'left';\n  } else if (x >= chartWidth - width / 2) {\n    xAlign = 'right';\n  }\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n    xAlign = 'center';\n  }\n  return xAlign;\n}\nfunction determineAlignment(chart, options, size) {\n  const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n  return {\n    xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n    yAlign\n  };\n}\nfunction alignX(size, xAlign) {\n  let {x, width} = size;\n  if (xAlign === 'right') {\n    x -= width;\n  } else if (xAlign === 'center') {\n    x -= (width / 2);\n  }\n  return x;\n}\nfunction alignY(size, yAlign, paddingAndSize) {\n  let {y, height} = size;\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= height + paddingAndSize;\n  } else {\n    y -= (height / 2);\n  }\n  return y;\n}\nfunction getBackgroundPoint(options, size, alignment, chart) {\n  const {caretSize, caretPadding, cornerRadius} = options;\n  const {xAlign, yAlign} = alignment;\n  const paddingAndSize = caretSize + caretPadding;\n  const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n  let x = alignX(size, xAlign);\n  const y = alignY(size, yAlign, paddingAndSize);\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= Math.max(topLeft, bottomLeft) + caretSize;\n  } else if (xAlign === 'right') {\n    x += Math.max(topRight, bottomRight) + caretSize;\n  }\n  return {\n    x: _limitValue(x, 0, chart.width - size.width),\n    y: _limitValue(y, 0, chart.height - size.height)\n  };\n}\nfunction getAlignedX(tooltip, align, options) {\n  const padding = toPadding(options.padding);\n  return align === 'center'\n    ? tooltip.x + tooltip.width / 2\n    : align === 'right'\n      ? tooltip.x + tooltip.width - padding.right\n      : tooltip.x + padding.left;\n}\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n  return createContext(parent, {\n    tooltip,\n    tooltipItems,\n    type: 'tooltip'\n  });\n}\nfunction overrideCallbacks(callbacks, context) {\n  const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n  return override ? callbacks.override(override) : callbacks;\n}\nclass Tooltip extends Element {\n  constructor(config) {\n    super();\n    this.opacity = 0;\n    this._active = [];\n    this._eventPosition = undefined;\n    this._size = undefined;\n    this._cachedAnimations = undefined;\n    this._tooltipItems = [];\n    this.$animations = undefined;\n    this.$context = undefined;\n    this.chart = config.chart || config._chart;\n    this._chart = this.chart;\n    this.options = config.options;\n    this.dataPoints = undefined;\n    this.title = undefined;\n    this.beforeBody = undefined;\n    this.body = undefined;\n    this.afterBody = undefined;\n    this.footer = undefined;\n    this.xAlign = undefined;\n    this.yAlign = undefined;\n    this.x = undefined;\n    this.y = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this.caretX = undefined;\n    this.caretY = undefined;\n    this.labelColors = undefined;\n    this.labelPointStyles = undefined;\n    this.labelTextColors = undefined;\n  }\n  initialize(options) {\n    this.options = options;\n    this._cachedAnimations = undefined;\n    this.$context = undefined;\n  }\n  _resolveAnimations() {\n    const cached = this._cachedAnimations;\n    if (cached) {\n      return cached;\n    }\n    const chart = this.chart;\n    const options = this.options.setContext(this.getContext());\n    const opts = options.enabled && chart.options.animation && options.animations;\n    const animations = new Animations(this.chart, opts);\n    if (opts._cacheable) {\n      this._cachedAnimations = Object.freeze(animations);\n    }\n    return animations;\n  }\n  getContext() {\n    return this.$context ||\n\t\t\t(this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n  }\n  getTitle(context, options) {\n    const {callbacks} = options;\n    const beforeTitle = callbacks.beforeTitle.apply(this, [context]);\n    const title = callbacks.title.apply(this, [context]);\n    const afterTitle = callbacks.afterTitle.apply(this, [context]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n    lines = pushOrConcat(lines, splitNewlines(title));\n    lines = pushOrConcat(lines, splitNewlines(afterTitle));\n    return lines;\n  }\n  getBeforeBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.beforeBody.apply(this, [tooltipItems]));\n  }\n  getBody(tooltipItems, options) {\n    const {callbacks} = options;\n    const bodyItems = [];\n    each(tooltipItems, (context) => {\n      const bodyItem = {\n        before: [],\n        lines: [],\n        after: []\n      };\n      const scoped = overrideCallbacks(callbacks, context);\n      pushOrConcat(bodyItem.before, splitNewlines(scoped.beforeLabel.call(this, context)));\n      pushOrConcat(bodyItem.lines, scoped.label.call(this, context));\n      pushOrConcat(bodyItem.after, splitNewlines(scoped.afterLabel.call(this, context)));\n      bodyItems.push(bodyItem);\n    });\n    return bodyItems;\n  }\n  getAfterBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.afterBody.apply(this, [tooltipItems]));\n  }\n  getFooter(tooltipItems, options) {\n    const {callbacks} = options;\n    const beforeFooter = callbacks.beforeFooter.apply(this, [tooltipItems]);\n    const footer = callbacks.footer.apply(this, [tooltipItems]);\n    const afterFooter = callbacks.afterFooter.apply(this, [tooltipItems]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n    lines = pushOrConcat(lines, splitNewlines(footer));\n    lines = pushOrConcat(lines, splitNewlines(afterFooter));\n    return lines;\n  }\n  _createItems(options) {\n    const active = this._active;\n    const data = this.chart.data;\n    const labelColors = [];\n    const labelPointStyles = [];\n    const labelTextColors = [];\n    let tooltipItems = [];\n    let i, len;\n    for (i = 0, len = active.length; i < len; ++i) {\n      tooltipItems.push(createTooltipItem(this.chart, active[i]));\n    }\n    if (options.filter) {\n      tooltipItems = tooltipItems.filter((element, index, array) => options.filter(element, index, array, data));\n    }\n    if (options.itemSort) {\n      tooltipItems = tooltipItems.sort((a, b) => options.itemSort(a, b, data));\n    }\n    each(tooltipItems, (context) => {\n      const scoped = overrideCallbacks(options.callbacks, context);\n      labelColors.push(scoped.labelColor.call(this, context));\n      labelPointStyles.push(scoped.labelPointStyle.call(this, context));\n      labelTextColors.push(scoped.labelTextColor.call(this, context));\n    });\n    this.labelColors = labelColors;\n    this.labelPointStyles = labelPointStyles;\n    this.labelTextColors = labelTextColors;\n    this.dataPoints = tooltipItems;\n    return tooltipItems;\n  }\n  update(changed, replay) {\n    const options = this.options.setContext(this.getContext());\n    const active = this._active;\n    let properties;\n    let tooltipItems = [];\n    if (!active.length) {\n      if (this.opacity !== 0) {\n        properties = {\n          opacity: 0\n        };\n      }\n    } else {\n      const position = positioners[options.position].call(this, active, this._eventPosition);\n      tooltipItems = this._createItems(options);\n      this.title = this.getTitle(tooltipItems, options);\n      this.beforeBody = this.getBeforeBody(tooltipItems, options);\n      this.body = this.getBody(tooltipItems, options);\n      this.afterBody = this.getAfterBody(tooltipItems, options);\n      this.footer = this.getFooter(tooltipItems, options);\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, size);\n      const alignment = determineAlignment(this.chart, options, positionAndSize);\n      const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n      this.xAlign = alignment.xAlign;\n      this.yAlign = alignment.yAlign;\n      properties = {\n        opacity: 1,\n        x: backgroundPoint.x,\n        y: backgroundPoint.y,\n        width: size.width,\n        height: size.height,\n        caretX: position.x,\n        caretY: position.y\n      };\n    }\n    this._tooltipItems = tooltipItems;\n    this.$context = undefined;\n    if (properties) {\n      this._resolveAnimations().update(this, properties);\n    }\n    if (changed && options.external) {\n      options.external.call(this, {chart: this.chart, tooltip: this, replay});\n    }\n  }\n  drawCaret(tooltipPoint, ctx, size, options) {\n    const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n    ctx.lineTo(caretPosition.x1, caretPosition.y1);\n    ctx.lineTo(caretPosition.x2, caretPosition.y2);\n    ctx.lineTo(caretPosition.x3, caretPosition.y3);\n  }\n  getCaretPosition(tooltipPoint, size, options) {\n    const {xAlign, yAlign} = this;\n    const {caretSize, cornerRadius} = options;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n    const {x: ptX, y: ptY} = tooltipPoint;\n    const {width, height} = size;\n    let x1, x2, x3, y1, y2, y3;\n    if (yAlign === 'center') {\n      y2 = ptY + (height / 2);\n      if (xAlign === 'left') {\n        x1 = ptX;\n        x2 = x1 - caretSize;\n        y1 = y2 + caretSize;\n        y3 = y2 - caretSize;\n      } else {\n        x1 = ptX + width;\n        x2 = x1 + caretSize;\n        y1 = y2 - caretSize;\n        y3 = y2 + caretSize;\n      }\n      x3 = x1;\n    } else {\n      if (xAlign === 'left') {\n        x2 = ptX + Math.max(topLeft, bottomLeft) + (caretSize);\n      } else if (xAlign === 'right') {\n        x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n      } else {\n        x2 = this.caretX;\n      }\n      if (yAlign === 'top') {\n        y1 = ptY;\n        y2 = y1 - caretSize;\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      } else {\n        y1 = ptY + height;\n        y2 = y1 + caretSize;\n        x1 = x2 + caretSize;\n        x3 = x2 - caretSize;\n      }\n      y3 = y1;\n    }\n    return {x1, x2, x3, y1, y2, y3};\n  }\n  drawTitle(pt, ctx, options) {\n    const title = this.title;\n    const length = title.length;\n    let titleFont, titleSpacing, i;\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n      pt.x = getAlignedX(this, options.titleAlign, options);\n      ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n      ctx.textBaseline = 'middle';\n      titleFont = toFont(options.titleFont);\n      titleSpacing = options.titleSpacing;\n      ctx.fillStyle = options.titleColor;\n      ctx.font = titleFont.string;\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n        pt.y += titleFont.lineHeight + titleSpacing;\n        if (i + 1 === length) {\n          pt.y += options.titleMarginBottom - titleSpacing;\n        }\n      }\n    }\n  }\n  _drawColorBox(ctx, pt, i, rtlHelper, options) {\n    const labelColors = this.labelColors[i];\n    const labelPointStyle = this.labelPointStyles[i];\n    const {boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    const colorX = getAlignedX(this, 'left', options);\n    const rtlColorX = rtlHelper.x(colorX);\n    const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n    const colorY = pt.y + yOffSet;\n    if (options.usePointStyle) {\n      const drawOptions = {\n        radius: Math.min(boxWidth, boxHeight) / 2,\n        pointStyle: labelPointStyle.pointStyle,\n        rotation: labelPointStyle.rotation,\n        borderWidth: 1\n      };\n      const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n      const centerY = colorY + boxHeight / 2;\n      ctx.strokeStyle = options.multiKeyBackground;\n      ctx.fillStyle = options.multiKeyBackground;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.fillStyle = labelColors.backgroundColor;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n    } else {\n      ctx.lineWidth = labelColors.borderWidth || 1;\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.setLineDash(labelColors.borderDash || []);\n      ctx.lineDashOffset = labelColors.borderDashOffset || 0;\n      const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth - boxPadding);\n      const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - boxPadding - 2);\n      const borderRadius = toTRBLCorners(labelColors.borderRadius);\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        ctx.fillStyle = options.multiKeyBackground;\n        addRoundedRectPath(ctx, {\n          x: outerX,\n          y: colorY,\n          w: boxWidth,\n          h: boxHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n        ctx.stroke();\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: innerX,\n          y: colorY + 1,\n          w: boxWidth - 2,\n          h: boxHeight - 2,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        ctx.fillStyle = options.multiKeyBackground;\n        ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n      }\n    }\n    ctx.fillStyle = this.labelTextColors[i];\n  }\n  drawBody(pt, ctx, options) {\n    const {body} = this;\n    const {bodySpacing, bodyAlign, displayColors, boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    let bodyLineHeight = bodyFont.lineHeight;\n    let xLinePadding = 0;\n    const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n    const fillLineOfText = function(line) {\n      ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n      pt.y += bodyLineHeight + bodySpacing;\n    };\n    const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n    let bodyItem, textColor, lines, i, j, ilen, jlen;\n    ctx.textAlign = bodyAlign;\n    ctx.textBaseline = 'middle';\n    ctx.font = bodyFont.string;\n    pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n    ctx.fillStyle = options.bodyColor;\n    each(this.beforeBody, fillLineOfText);\n    xLinePadding = displayColors && bodyAlignForCalculation !== 'right'\n      ? bodyAlign === 'center' ? (boxWidth / 2 + boxPadding) : (boxWidth + 2 + boxPadding)\n      : 0;\n    for (i = 0, ilen = body.length; i < ilen; ++i) {\n      bodyItem = body[i];\n      textColor = this.labelTextColors[i];\n      ctx.fillStyle = textColor;\n      each(bodyItem.before, fillLineOfText);\n      lines = bodyItem.lines;\n      if (displayColors && lines.length) {\n        this._drawColorBox(ctx, pt, i, rtlHelper, options);\n        bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n      }\n      for (j = 0, jlen = lines.length; j < jlen; ++j) {\n        fillLineOfText(lines[j]);\n        bodyLineHeight = bodyFont.lineHeight;\n      }\n      each(bodyItem.after, fillLineOfText);\n    }\n    xLinePadding = 0;\n    bodyLineHeight = bodyFont.lineHeight;\n    each(this.afterBody, fillLineOfText);\n    pt.y -= bodySpacing;\n  }\n  drawFooter(pt, ctx, options) {\n    const footer = this.footer;\n    const length = footer.length;\n    let footerFont, i;\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n      pt.x = getAlignedX(this, options.footerAlign, options);\n      pt.y += options.footerMarginTop;\n      ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n      ctx.textBaseline = 'middle';\n      footerFont = toFont(options.footerFont);\n      ctx.fillStyle = options.footerColor;\n      ctx.font = footerFont.string;\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n        pt.y += footerFont.lineHeight + options.footerSpacing;\n      }\n    }\n  }\n  drawBackground(pt, ctx, tooltipSize, options) {\n    const {xAlign, yAlign} = this;\n    const {x, y} = pt;\n    const {width, height} = tooltipSize;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(options.cornerRadius);\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.beginPath();\n    ctx.moveTo(x + topLeft, y);\n    if (yAlign === 'top') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width - topRight, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n    if (yAlign === 'center' && xAlign === 'right') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width, y + height - bottomRight);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n    if (yAlign === 'bottom') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + bottomLeft, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n    if (yAlign === 'center' && xAlign === 'left') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x, y + topLeft);\n    ctx.quadraticCurveTo(x, y, x + topLeft, y);\n    ctx.closePath();\n    ctx.fill();\n    if (options.borderWidth > 0) {\n      ctx.stroke();\n    }\n  }\n  _updateAnimationTarget(options) {\n    const chart = this.chart;\n    const anims = this.$animations;\n    const animX = anims && anims.x;\n    const animY = anims && anims.y;\n    if (animX || animY) {\n      const position = positioners[options.position].call(this, this._active, this._eventPosition);\n      if (!position) {\n        return;\n      }\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, this._size);\n      const alignment = determineAlignment(chart, options, positionAndSize);\n      const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n      if (animX._to !== point.x || animY._to !== point.y) {\n        this.xAlign = alignment.xAlign;\n        this.yAlign = alignment.yAlign;\n        this.width = size.width;\n        this.height = size.height;\n        this.caretX = position.x;\n        this.caretY = position.y;\n        this._resolveAnimations().update(this, point);\n      }\n    }\n  }\n  _willRender() {\n    return !!this.opacity;\n  }\n  draw(ctx) {\n    const options = this.options.setContext(this.getContext());\n    let opacity = this.opacity;\n    if (!opacity) {\n      return;\n    }\n    this._updateAnimationTarget(options);\n    const tooltipSize = {\n      width: this.width,\n      height: this.height\n    };\n    const pt = {\n      x: this.x,\n      y: this.y\n    };\n    opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n    const padding = toPadding(options.padding);\n    const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n    if (options.enabled && hasTooltipContent) {\n      ctx.save();\n      ctx.globalAlpha = opacity;\n      this.drawBackground(pt, ctx, tooltipSize, options);\n      overrideTextDirection(ctx, options.textDirection);\n      pt.y += padding.top;\n      this.drawTitle(pt, ctx, options);\n      this.drawBody(pt, ctx, options);\n      this.drawFooter(pt, ctx, options);\n      restoreTextDirection(ctx, options.textDirection);\n      ctx.restore();\n    }\n  }\n  getActiveElements() {\n    return this._active || [];\n  }\n  setActiveElements(activeElements, eventPosition) {\n    const lastActive = this._active;\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.chart.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('Cannot find a dataset at index ' + datasetIndex);\n      }\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(lastActive, active);\n    const positionChanged = this._positionChanged(active, eventPosition);\n    if (changed || positionChanged) {\n      this._active = active;\n      this._eventPosition = eventPosition;\n      this._ignoreReplayEvents = true;\n      this.update(true);\n    }\n  }\n  handleEvent(e, replay, inChartArea = true) {\n    if (replay && this._ignoreReplayEvents) {\n      return false;\n    }\n    this._ignoreReplayEvents = false;\n    const options = this.options;\n    const lastActive = this._active || [];\n    const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n    const positionChanged = this._positionChanged(active, e);\n    const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n    if (changed) {\n      this._active = active;\n      if (options.enabled || options.external) {\n        this._eventPosition = {\n          x: e.x,\n          y: e.y\n        };\n        this.update(true, replay);\n      }\n    }\n    return changed;\n  }\n  _getActiveElements(e, lastActive, replay, inChartArea) {\n    const options = this.options;\n    if (e.type === 'mouseout') {\n      return [];\n    }\n    if (!inChartArea) {\n      return lastActive;\n    }\n    const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n    if (options.reverse) {\n      active.reverse();\n    }\n    return active;\n  }\n  _positionChanged(active, e) {\n    const {caretX, caretY, options} = this;\n    const position = positioners[options.position].call(this, active, e);\n    return position !== false && (caretX !== position.x || caretY !== position.y);\n  }\n}\nTooltip.positioners = positioners;\nvar plugin_tooltip = {\n  id: 'tooltip',\n  _element: Tooltip,\n  positioners,\n  afterInit(chart, _args, options) {\n    if (options) {\n      chart.tooltip = new Tooltip({chart, options});\n    }\n  },\n  beforeUpdate(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  reset(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  afterDraw(chart) {\n    const tooltip = chart.tooltip;\n    if (tooltip && tooltip._willRender()) {\n      const args = {\n        tooltip\n      };\n      if (chart.notifyPlugins('beforeTooltipDraw', args) === false) {\n        return;\n      }\n      tooltip.draw(chart.ctx);\n      chart.notifyPlugins('afterTooltipDraw', args);\n    }\n  },\n  afterEvent(chart, args) {\n    if (chart.tooltip) {\n      const useFinalPosition = args.replay;\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n        args.changed = true;\n      }\n    }\n  },\n  defaults: {\n    enabled: true,\n    external: null,\n    position: 'average',\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleColor: '#fff',\n    titleFont: {\n      weight: 'bold',\n    },\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleAlign: 'left',\n    bodyColor: '#fff',\n    bodySpacing: 2,\n    bodyFont: {\n    },\n    bodyAlign: 'left',\n    footerColor: '#fff',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFont: {\n      weight: 'bold',\n    },\n    footerAlign: 'left',\n    padding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    boxHeight: (ctx, opts) => opts.bodyFont.size,\n    boxWidth: (ctx, opts) => opts.bodyFont.size,\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    boxPadding: 0,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    animation: {\n      duration: 400,\n      easing: 'easeOutQuart',\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY'],\n      },\n      opacity: {\n        easing: 'linear',\n        duration: 200\n      }\n    },\n    callbacks: {\n      beforeTitle: noop,\n      title(tooltipItems) {\n        if (tooltipItems.length > 0) {\n          const item = tooltipItems[0];\n          const labels = item.chart.data.labels;\n          const labelCount = labels ? labels.length : 0;\n          if (this && this.options && this.options.mode === 'dataset') {\n            return item.dataset.label || '';\n          } else if (item.label) {\n            return item.label;\n          } else if (labelCount > 0 && item.dataIndex < labelCount) {\n            return labels[item.dataIndex];\n          }\n        }\n        return '';\n      },\n      afterTitle: noop,\n      beforeBody: noop,\n      beforeLabel: noop,\n      label(tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n          return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n        let label = tooltipItem.dataset.label || '';\n        if (label) {\n          label += ': ';\n        }\n        const value = tooltipItem.formattedValue;\n        if (!isNullOrUndef(value)) {\n          label += value;\n        }\n        return label;\n      },\n      labelColor(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          borderColor: options.borderColor,\n          backgroundColor: options.backgroundColor,\n          borderWidth: options.borderWidth,\n          borderDash: options.borderDash,\n          borderDashOffset: options.borderDashOffset,\n          borderRadius: 0,\n        };\n      },\n      labelTextColor() {\n        return this.options.bodyColor;\n      },\n      labelPointStyle(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          pointStyle: options.pointStyle,\n          rotation: options.rotation,\n        };\n      },\n      afterLabel: noop,\n      afterBody: noop,\n      beforeFooter: noop,\n      footer: noop,\n      afterFooter: noop\n    }\n  },\n  defaultRoutes: {\n    bodyFont: 'font',\n    footerFont: 'font',\n    titleFont: 'font'\n  },\n  descriptors: {\n    _scriptable: (name) => name !== 'filter' && name !== 'itemSort' && name !== 'external',\n    _indexable: false,\n    callbacks: {\n      _scriptable: false,\n      _indexable: false,\n    },\n    animation: {\n      _fallback: false\n    },\n    animations: {\n      _fallback: 'animation'\n    }\n  },\n  additionalOptionScopes: ['interaction']\n};\n\nvar plugins = /*#__PURE__*/Object.freeze({\n__proto__: null,\nDecimation: plugin_decimation,\nFiller: index,\nLegend: plugin_legend,\nSubTitle: plugin_subtitle,\nTitle: plugin_title,\nTooltip: plugin_tooltip\n});\n\nconst addIfString = (labels, raw, index, addedLabels) => {\n  if (typeof raw === 'string') {\n    index = labels.push(raw) - 1;\n    addedLabels.unshift({index, label: raw});\n  } else if (isNaN(raw)) {\n    index = null;\n  }\n  return index;\n};\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n  const first = labels.indexOf(raw);\n  if (first === -1) {\n    return addIfString(labels, raw, index, addedLabels);\n  }\n  const last = labels.lastIndexOf(raw);\n  return first !== last ? index : first;\n}\nconst validIndex = (index, max) => index === null ? null : _limitValue(Math.round(index), 0, max);\nclass CategoryScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this._startValue = undefined;\n    this._valueRange = 0;\n    this._addedLabels = [];\n  }\n  init(scaleOptions) {\n    const added = this._addedLabels;\n    if (added.length) {\n      const labels = this.getLabels();\n      for (const {index, label} of added) {\n        if (labels[index] === label) {\n          labels.splice(index, 1);\n        }\n      }\n      this._addedLabels = [];\n    }\n    super.init(scaleOptions);\n  }\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    const labels = this.getLabels();\n    index = isFinite(index) && labels[index] === raw ? index\n      : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n    return validIndex(index, labels.length - 1);\n  }\n  determineDataLimits() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this.getMinMax(true);\n    if (this.options.bounds === 'ticks') {\n      if (!minDefined) {\n        min = 0;\n      }\n      if (!maxDefined) {\n        max = this.getLabels().length - 1;\n      }\n    }\n    this.min = min;\n    this.max = max;\n  }\n  buildTicks() {\n    const min = this.min;\n    const max = this.max;\n    const offset = this.options.offset;\n    const ticks = [];\n    let labels = this.getLabels();\n    labels = (min === 0 && max === labels.length - 1) ? labels : labels.slice(min, max + 1);\n    this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n    this._startValue = this.min - (offset ? 0.5 : 0);\n    for (let value = min; value <= max; value++) {\n      ticks.push({value});\n    }\n    return ticks;\n  }\n  getLabelForValue(value) {\n    const labels = this.getLabels();\n    if (value >= 0 && value < labels.length) {\n      return labels[value];\n    }\n    return value;\n  }\n  configure() {\n    super.configure();\n    if (!this.isHorizontal()) {\n      this._reversePixels = !this._reversePixels;\n    }\n  }\n  getPixelForValue(value) {\n    if (typeof value !== 'number') {\n      value = this.parse(value);\n    }\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n  getValueForPixel(pixel) {\n    return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n  }\n  getBasePixel() {\n    return this.bottom;\n  }\n}\nCategoryScale.id = 'category';\nCategoryScale.defaults = {\n  ticks: {\n    callback: CategoryScale.prototype.getLabelForValue\n  }\n};\n\nfunction generateTicks$1(generationOptions, dataRange) {\n  const ticks = [];\n  const MIN_SPACING = 1e-14;\n  const {bounds, step, min, max, precision, count, maxTicks, maxDigits, includeBounds} = generationOptions;\n  const unit = step || 1;\n  const maxSpaces = maxTicks - 1;\n  const {min: rmin, max: rmax} = dataRange;\n  const minDefined = !isNullOrUndef(min);\n  const maxDefined = !isNullOrUndef(max);\n  const countDefined = !isNullOrUndef(count);\n  const minSpacing = (rmax - rmin) / (maxDigits + 1);\n  let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n  let factor, niceMin, niceMax, numSpaces;\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n    return [{value: rmin}, {value: rmax}];\n  }\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n  if (numSpaces > maxSpaces) {\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n  }\n  if (!isNullOrUndef(precision)) {\n    factor = Math.pow(10, precision);\n    spacing = Math.ceil(spacing * factor) / factor;\n  }\n  if (bounds === 'ticks') {\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing;\n  } else {\n    niceMin = rmin;\n    niceMax = rmax;\n  }\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n    numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n    spacing = (max - min) / numSpaces;\n    niceMin = min;\n    niceMax = max;\n  } else if (countDefined) {\n    niceMin = minDefined ? min : niceMin;\n    niceMax = maxDefined ? max : niceMax;\n    numSpaces = count - 1;\n    spacing = (niceMax - niceMin) / numSpaces;\n  } else {\n    numSpaces = (niceMax - niceMin) / spacing;\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n  }\n  const decimalPlaces = Math.max(\n    _decimalPlaces(spacing),\n    _decimalPlaces(niceMin)\n  );\n  factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n  niceMin = Math.round(niceMin * factor) / factor;\n  niceMax = Math.round(niceMax * factor) / factor;\n  let j = 0;\n  if (minDefined) {\n    if (includeBounds && niceMin !== min) {\n      ticks.push({value: min});\n      if (niceMin < min) {\n        j++;\n      }\n      if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n        j++;\n      }\n    } else if (niceMin < min) {\n      j++;\n    }\n  }\n  for (; j < numSpaces; ++j) {\n    ticks.push({value: Math.round((niceMin + j * spacing) * factor) / factor});\n  }\n  if (maxDefined && includeBounds && niceMax !== max) {\n    if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n      ticks[ticks.length - 1].value = max;\n    } else {\n      ticks.push({value: max});\n    }\n  } else if (!maxDefined || niceMax === max) {\n    ticks.push({value: niceMax});\n  }\n  return ticks;\n}\nfunction relativeLabelSize(value, minSpacing, {horizontal, minRotation}) {\n  const rad = toRadians(minRotation);\n  const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n  const length = 0.75 * minSpacing * ('' + value).length;\n  return Math.min(minSpacing / ratio, length);\n}\nclass LinearScaleBase extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._endValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n      return null;\n    }\n    return +raw;\n  }\n  handleTickRangeOptions() {\n    const {beginAtZero} = this.options;\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this;\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n    if (beginAtZero) {\n      const minSign = sign(min);\n      const maxSign = sign(max);\n      if (minSign < 0 && maxSign < 0) {\n        setMax(0);\n      } else if (minSign > 0 && maxSign > 0) {\n        setMin(0);\n      }\n    }\n    if (min === max) {\n      let offset = 1;\n      if (max >= Number.MAX_SAFE_INTEGER || min <= Number.MIN_SAFE_INTEGER) {\n        offset = Math.abs(max * 0.05);\n      }\n      setMax(max + offset);\n      if (!beginAtZero) {\n        setMin(min - offset);\n      }\n    }\n    this.min = min;\n    this.max = max;\n  }\n  getTickLimit() {\n    const tickOpts = this.options.ticks;\n    let {maxTicksLimit, stepSize} = tickOpts;\n    let maxTicks;\n    if (stepSize) {\n      maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n      if (maxTicks > 1000) {\n        console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n        maxTicks = 1000;\n      }\n    } else {\n      maxTicks = this.computeTickLimit();\n      maxTicksLimit = maxTicksLimit || 11;\n    }\n    if (maxTicksLimit) {\n      maxTicks = Math.min(maxTicksLimit, maxTicks);\n    }\n    return maxTicks;\n  }\n  computeTickLimit() {\n    return Number.POSITIVE_INFINITY;\n  }\n  buildTicks() {\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n    let maxTicks = this.getTickLimit();\n    maxTicks = Math.max(2, maxTicks);\n    const numericGeneratorOptions = {\n      maxTicks,\n      bounds: opts.bounds,\n      min: opts.min,\n      max: opts.max,\n      precision: tickOpts.precision,\n      step: tickOpts.stepSize,\n      count: tickOpts.count,\n      maxDigits: this._maxDigits(),\n      horizontal: this.isHorizontal(),\n      minRotation: tickOpts.minRotation || 0,\n      includeBounds: tickOpts.includeBounds !== false\n    };\n    const dataRange = this._range || this;\n    const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n    if (opts.reverse) {\n      ticks.reverse();\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n    return ticks;\n  }\n  configure() {\n    const ticks = this.ticks;\n    let start = this.min;\n    let end = this.max;\n    super.configure();\n    if (this.options.offset && ticks.length) {\n      const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n      start -= offset;\n      end += offset;\n    }\n    this._startValue = start;\n    this._endValue = end;\n    this._valueRange = end - start;\n  }\n  getLabelForValue(value) {\n    return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n}\n\nclass LinearScale extends LinearScaleBase {\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n    this.min = isNumberFinite(min) ? min : 0;\n    this.max = isNumberFinite(max) ? max : 1;\n    this.handleTickRangeOptions();\n  }\n  computeTickLimit() {\n    const horizontal = this.isHorizontal();\n    const length = horizontal ? this.width : this.height;\n    const minRotation = toRadians(this.options.ticks.minRotation);\n    const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n    const tickFont = this._resolveTickFontOptions(0);\n    return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n  }\n  getPixelForValue(value) {\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n  getValueForPixel(pixel) {\n    return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n  }\n}\nLinearScale.id = 'linear';\nLinearScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.numeric\n  }\n};\n\nfunction isMajor(tickVal) {\n  const remain = tickVal / (Math.pow(10, Math.floor(log10(tickVal))));\n  return remain === 1;\n}\nfunction generateTicks(generationOptions, dataRange) {\n  const endExp = Math.floor(log10(dataRange.max));\n  const endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n  const ticks = [];\n  let tickVal = finiteOrDefault(generationOptions.min, Math.pow(10, Math.floor(log10(dataRange.min))));\n  let exp = Math.floor(log10(tickVal));\n  let significand = Math.floor(tickVal / Math.pow(10, exp));\n  let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n  do {\n    ticks.push({value: tickVal, major: isMajor(tickVal)});\n    ++significand;\n    if (significand === 10) {\n      significand = 1;\n      ++exp;\n      precision = exp >= 0 ? 1 : precision;\n    }\n    tickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\n  } while (exp < endExp || (exp === endExp && significand < endSignificand));\n  const lastTick = finiteOrDefault(generationOptions.max, tickVal);\n  ticks.push({value: lastTick, major: isMajor(tickVal)});\n  return ticks;\n}\nclass LogarithmicScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    const value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n    if (value === 0) {\n      this._zero = true;\n      return undefined;\n    }\n    return isNumberFinite(value) && value > 0 ? value : null;\n  }\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n    this.min = isNumberFinite(min) ? Math.max(0, min) : null;\n    this.max = isNumberFinite(max) ? Math.max(0, max) : null;\n    if (this.options.beginAtZero) {\n      this._zero = true;\n    }\n    this.handleTickRangeOptions();\n  }\n  handleTickRangeOptions() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let min = this.min;\n    let max = this.max;\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n    const exp = (v, m) => Math.pow(10, Math.floor(log10(v)) + m);\n    if (min === max) {\n      if (min <= 0) {\n        setMin(1);\n        setMax(10);\n      } else {\n        setMin(exp(min, -1));\n        setMax(exp(max, +1));\n      }\n    }\n    if (min <= 0) {\n      setMin(exp(max, -1));\n    }\n    if (max <= 0) {\n      setMax(exp(min, +1));\n    }\n    if (this._zero && this.min !== this._suggestedMin && min === exp(this.min, 0)) {\n      setMin(exp(min, -1));\n    }\n    this.min = min;\n    this.max = max;\n  }\n  buildTicks() {\n    const opts = this.options;\n    const generationOptions = {\n      min: this._userMin,\n      max: this._userMax\n    };\n    const ticks = generateTicks(generationOptions, this);\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n    if (opts.reverse) {\n      ticks.reverse();\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n    return ticks;\n  }\n  getLabelForValue(value) {\n    return value === undefined\n      ? '0'\n      : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n  configure() {\n    const start = this.min;\n    super.configure();\n    this._startValue = log10(start);\n    this._valueRange = log10(this.max) - log10(start);\n  }\n  getPixelForValue(value) {\n    if (value === undefined || value === 0) {\n      value = this.min;\n    }\n    if (value === null || isNaN(value)) {\n      return NaN;\n    }\n    return this.getPixelForDecimal(value === this.min\n      ? 0\n      : (log10(value) - this._startValue) / this._valueRange);\n  }\n  getValueForPixel(pixel) {\n    const decimal = this.getDecimalForPixel(pixel);\n    return Math.pow(10, this._startValue + decimal * this._valueRange);\n  }\n}\nLogarithmicScale.id = 'logarithmic';\nLogarithmicScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.logarithmic,\n    major: {\n      enabled: true\n    }\n  }\n};\n\nfunction getTickBackdropHeight(opts) {\n  const tickOpts = opts.ticks;\n  if (tickOpts.display && opts.display) {\n    const padding = toPadding(tickOpts.backdropPadding);\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n  }\n  return 0;\n}\nfunction measureLabelSize(ctx, font, label) {\n  label = isArray(label) ? label : [label];\n  return {\n    w: _longestText(ctx, font.string, label),\n    h: label.length * font.lineHeight\n  };\n}\nfunction determineLimits(angle, pos, size, min, max) {\n  if (angle === min || angle === max) {\n    return {\n      start: pos - (size / 2),\n      end: pos + (size / 2)\n    };\n  } else if (angle < min || angle > max) {\n    return {\n      start: pos - size,\n      end: pos\n    };\n  }\n  return {\n    start: pos,\n    end: pos + size\n  };\n}\nfunction fitWithPointLabels(scale) {\n  const orig = {\n    l: scale.left + scale._padding.left,\n    r: scale.right - scale._padding.right,\n    t: scale.top + scale._padding.top,\n    b: scale.bottom - scale._padding.bottom\n  };\n  const limits = Object.assign({}, orig);\n  const labelSizes = [];\n  const padding = [];\n  const valueCount = scale._pointLabels.length;\n  const pointLabelOpts = scale.options.pointLabels;\n  const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n  for (let i = 0; i < valueCount; i++) {\n    const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n    padding[i] = opts.padding;\n    const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n    const plFont = toFont(opts.font);\n    const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n    labelSizes[i] = textSize;\n    const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n    const angle = Math.round(toDegrees(angleRadians));\n    const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n    const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n    updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n  }\n  scale.setCenterPoint(\n    orig.l - limits.l,\n    limits.r - orig.r,\n    orig.t - limits.t,\n    limits.b - orig.b\n  );\n  scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n  const sin = Math.abs(Math.sin(angle));\n  const cos = Math.abs(Math.cos(angle));\n  let x = 0;\n  let y = 0;\n  if (hLimits.start < orig.l) {\n    x = (orig.l - hLimits.start) / sin;\n    limits.l = Math.min(limits.l, orig.l - x);\n  } else if (hLimits.end > orig.r) {\n    x = (hLimits.end - orig.r) / sin;\n    limits.r = Math.max(limits.r, orig.r + x);\n  }\n  if (vLimits.start < orig.t) {\n    y = (orig.t - vLimits.start) / cos;\n    limits.t = Math.min(limits.t, orig.t - y);\n  } else if (vLimits.end > orig.b) {\n    y = (vLimits.end - orig.b) / cos;\n    limits.b = Math.max(limits.b, orig.b + y);\n  }\n}\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n  const items = [];\n  const valueCount = scale._pointLabels.length;\n  const opts = scale.options;\n  const extra = getTickBackdropHeight(opts) / 2;\n  const outerDistance = scale.drawingArea;\n  const additionalAngle = opts.pointLabels.centerPointLabels ? PI / valueCount : 0;\n  for (let i = 0; i < valueCount; i++) {\n    const pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + padding[i], additionalAngle);\n    const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n    const size = labelSizes[i];\n    const y = yForAngle(pointLabelPosition.y, size.h, angle);\n    const textAlign = getTextAlignForAngle(angle);\n    const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n    items.push({\n      x: pointLabelPosition.x,\n      y,\n      textAlign,\n      left,\n      top: y,\n      right: left + size.w,\n      bottom: y + size.h\n    });\n  }\n  return items;\n}\nfunction getTextAlignForAngle(angle) {\n  if (angle === 0 || angle === 180) {\n    return 'center';\n  } else if (angle < 180) {\n    return 'left';\n  }\n  return 'right';\n}\nfunction leftForTextAlign(x, w, align) {\n  if (align === 'right') {\n    x -= w;\n  } else if (align === 'center') {\n    x -= (w / 2);\n  }\n  return x;\n}\nfunction yForAngle(y, h, angle) {\n  if (angle === 90 || angle === 270) {\n    y -= (h / 2);\n  } else if (angle > 270 || angle < 90) {\n    y -= h;\n  }\n  return y;\n}\nfunction drawPointLabels(scale, labelCount) {\n  const {ctx, options: {pointLabels}} = scale;\n  for (let i = labelCount - 1; i >= 0; i--) {\n    const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n    const plFont = toFont(optsAtIndex.font);\n    const {x, y, textAlign, left, top, right, bottom} = scale._pointLabelItems[i];\n    const {backdropColor} = optsAtIndex;\n    if (!isNullOrUndef(backdropColor)) {\n      const borderRadius = toTRBLCorners(optsAtIndex.borderRadius);\n      const padding = toPadding(optsAtIndex.backdropPadding);\n      ctx.fillStyle = backdropColor;\n      const backdropLeft = left - padding.left;\n      const backdropTop = top - padding.top;\n      const backdropWidth = right - left + padding.width;\n      const backdropHeight = bottom - top + padding.height;\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: backdropLeft,\n          y: backdropTop,\n          w: backdropWidth,\n          h: backdropHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n      }\n    }\n    renderText(\n      ctx,\n      scale._pointLabels[i],\n      x,\n      y + (plFont.lineHeight / 2),\n      plFont,\n      {\n        color: optsAtIndex.color,\n        textAlign: textAlign,\n        textBaseline: 'middle'\n      }\n    );\n  }\n}\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n  const {ctx} = scale;\n  if (circular) {\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n  } else {\n    let pointPosition = scale.getPointPosition(0, radius);\n    ctx.moveTo(pointPosition.x, pointPosition.y);\n    for (let i = 1; i < labelCount; i++) {\n      pointPosition = scale.getPointPosition(i, radius);\n      ctx.lineTo(pointPosition.x, pointPosition.y);\n    }\n  }\n}\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount) {\n  const ctx = scale.ctx;\n  const circular = gridLineOpts.circular;\n  const {color, lineWidth} = gridLineOpts;\n  if ((!circular && !labelCount) || !color || !lineWidth || radius < 0) {\n    return;\n  }\n  ctx.save();\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.setLineDash(gridLineOpts.borderDash);\n  ctx.lineDashOffset = gridLineOpts.borderDashOffset;\n  ctx.beginPath();\n  pathRadiusLine(scale, radius, circular, labelCount);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.restore();\n}\nfunction createPointLabelContext(parent, index, label) {\n  return createContext(parent, {\n    label,\n    index,\n    type: 'pointLabel'\n  });\n}\nclass RadialLinearScale extends LinearScaleBase {\n  constructor(cfg) {\n    super(cfg);\n    this.xCenter = undefined;\n    this.yCenter = undefined;\n    this.drawingArea = undefined;\n    this._pointLabels = [];\n    this._pointLabelItems = [];\n  }\n  setDimensions() {\n    const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n    const w = this.width = this.maxWidth - padding.width;\n    const h = this.height = this.maxHeight - padding.height;\n    this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n    this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n    this.drawingArea = Math.floor(Math.min(w, h) / 2);\n  }\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(false);\n    this.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n    this.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n    this.handleTickRangeOptions();\n  }\n  computeTickLimit() {\n    return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n  }\n  generateTickLabels(ticks) {\n    LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n    this._pointLabels = this.getLabels()\n      .map((value, index) => {\n        const label = callback(this.options.pointLabels.callback, [value, index], this);\n        return label || label === 0 ? label : '';\n      })\n      .filter((v, i) => this.chart.getDataVisibility(i));\n  }\n  fit() {\n    const opts = this.options;\n    if (opts.display && opts.pointLabels.display) {\n      fitWithPointLabels(this);\n    } else {\n      this.setCenterPoint(0, 0, 0, 0);\n    }\n  }\n  setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n    this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n    this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n    this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n  }\n  getIndexAngle(index) {\n    const angleMultiplier = TAU / (this._pointLabels.length || 1);\n    const startAngle = this.options.startAngle || 0;\n    return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n  }\n  getDistanceFromCenterForValue(value) {\n    if (isNullOrUndef(value)) {\n      return NaN;\n    }\n    const scalingFactor = this.drawingArea / (this.max - this.min);\n    if (this.options.reverse) {\n      return (this.max - value) * scalingFactor;\n    }\n    return (value - this.min) * scalingFactor;\n  }\n  getValueForDistanceFromCenter(distance) {\n    if (isNullOrUndef(distance)) {\n      return NaN;\n    }\n    const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n    return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n  }\n  getPointLabelContext(index) {\n    const pointLabels = this._pointLabels || [];\n    if (index >= 0 && index < pointLabels.length) {\n      const pointLabel = pointLabels[index];\n      return createPointLabelContext(this.getContext(), index, pointLabel);\n    }\n  }\n  getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n    const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n    return {\n      x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n      y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n      angle\n    };\n  }\n  getPointPositionForValue(index, value) {\n    return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n  }\n  getBasePosition(index) {\n    return this.getPointPositionForValue(index || 0, this.getBaseValue());\n  }\n  getPointLabelPosition(index) {\n    const {left, top, right, bottom} = this._pointLabelItems[index];\n    return {\n      left,\n      top,\n      right,\n      bottom,\n    };\n  }\n  drawBackground() {\n    const {backgroundColor, grid: {circular}} = this.options;\n    if (backgroundColor) {\n      const ctx = this.ctx;\n      ctx.save();\n      ctx.beginPath();\n      pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n      ctx.closePath();\n      ctx.fillStyle = backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n  }\n  drawGrid() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const {angleLines, grid} = opts;\n    const labelCount = this._pointLabels.length;\n    let i, offset, position;\n    if (opts.pointLabels.display) {\n      drawPointLabels(this, labelCount);\n    }\n    if (grid.display) {\n      this.ticks.forEach((tick, index) => {\n        if (index !== 0) {\n          offset = this.getDistanceFromCenterForValue(tick.value);\n          const optsAtIndex = grid.setContext(this.getContext(index - 1));\n          drawRadiusLine(this, optsAtIndex, offset, labelCount);\n        }\n      });\n    }\n    if (angleLines.display) {\n      ctx.save();\n      for (i = labelCount - 1; i >= 0; i--) {\n        const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n        const {color, lineWidth} = optsAtIndex;\n        if (!lineWidth || !color) {\n          continue;\n        }\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = color;\n        ctx.setLineDash(optsAtIndex.borderDash);\n        ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n        offset = this.getDistanceFromCenterForValue(opts.ticks.reverse ? this.min : this.max);\n        position = this.getPointPosition(i, offset);\n        ctx.beginPath();\n        ctx.moveTo(this.xCenter, this.yCenter);\n        ctx.lineTo(position.x, position.y);\n        ctx.stroke();\n      }\n      ctx.restore();\n    }\n  }\n  drawBorder() {}\n  drawLabels() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n    if (!tickOpts.display) {\n      return;\n    }\n    const startAngle = this.getIndexAngle(0);\n    let offset, width;\n    ctx.save();\n    ctx.translate(this.xCenter, this.yCenter);\n    ctx.rotate(startAngle);\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n    this.ticks.forEach((tick, index) => {\n      if (index === 0 && !opts.reverse) {\n        return;\n      }\n      const optsAtIndex = tickOpts.setContext(this.getContext(index));\n      const tickFont = toFont(optsAtIndex.font);\n      offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n      if (optsAtIndex.showLabelBackdrop) {\n        ctx.font = tickFont.string;\n        width = ctx.measureText(tick.label).width;\n        ctx.fillStyle = optsAtIndex.backdropColor;\n        const padding = toPadding(optsAtIndex.backdropPadding);\n        ctx.fillRect(\n          -width / 2 - padding.left,\n          -offset - tickFont.size / 2 - padding.top,\n          width + padding.width,\n          tickFont.size + padding.height\n        );\n      }\n      renderText(ctx, tick.label, 0, -offset, tickFont, {\n        color: optsAtIndex.color,\n      });\n    });\n    ctx.restore();\n  }\n  drawTitle() {}\n}\nRadialLinearScale.id = 'radialLinear';\nRadialLinearScale.defaults = {\n  display: true,\n  animate: true,\n  position: 'chartArea',\n  angleLines: {\n    display: true,\n    lineWidth: 1,\n    borderDash: [],\n    borderDashOffset: 0.0\n  },\n  grid: {\n    circular: false\n  },\n  startAngle: 0,\n  ticks: {\n    showLabelBackdrop: true,\n    callback: Ticks.formatters.numeric\n  },\n  pointLabels: {\n    backdropColor: undefined,\n    backdropPadding: 2,\n    display: true,\n    font: {\n      size: 10\n    },\n    callback(label) {\n      return label;\n    },\n    padding: 5,\n    centerPointLabels: false\n  }\n};\nRadialLinearScale.defaultRoutes = {\n  'angleLines.color': 'borderColor',\n  'pointLabels.color': 'color',\n  'ticks.color': 'color'\n};\nRadialLinearScale.descriptors = {\n  angleLines: {\n    _fallback: 'grid'\n  }\n};\n\nconst INTERVALS = {\n  millisecond: {common: true, size: 1, steps: 1000},\n  second: {common: true, size: 1000, steps: 60},\n  minute: {common: true, size: 60000, steps: 60},\n  hour: {common: true, size: 3600000, steps: 24},\n  day: {common: true, size: 86400000, steps: 30},\n  week: {common: false, size: 604800000, steps: 4},\n  month: {common: true, size: 2.628e9, steps: 12},\n  quarter: {common: false, size: 7.884e9, steps: 4},\n  year: {common: true, size: 3.154e10}\n};\nconst UNITS = (Object.keys(INTERVALS));\nfunction sorter(a, b) {\n  return a - b;\n}\nfunction parse(scale, input) {\n  if (isNullOrUndef(input)) {\n    return null;\n  }\n  const adapter = scale._adapter;\n  const {parser, round, isoWeekday} = scale._parseOpts;\n  let value = input;\n  if (typeof parser === 'function') {\n    value = parser(value);\n  }\n  if (!isNumberFinite(value)) {\n    value = typeof parser === 'string'\n      ? adapter.parse(value, parser)\n      : adapter.parse(value);\n  }\n  if (value === null) {\n    return null;\n  }\n  if (round) {\n    value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true)\n      ? adapter.startOf(value, 'isoWeek', isoWeekday)\n      : adapter.startOf(value, round);\n  }\n  return +value;\n}\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  const ilen = UNITS.length;\n  for (let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    const interval = INTERVALS[UNITS[i]];\n    const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n  return UNITS[ilen - 1];\n}\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n  for (let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n    const unit = UNITS[i];\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n      return unit;\n    }\n  }\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\nfunction determineMajorUnit(unit) {\n  for (let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\nfunction addTick(ticks, time, timestamps) {\n  if (!timestamps) {\n    ticks[time] = true;\n  } else if (timestamps.length) {\n    const {lo, hi} = _lookup(timestamps, time);\n    const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n    ticks[timestamp] = true;\n  }\n}\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\n  const adapter = scale._adapter;\n  const first = +adapter.startOf(ticks[0].value, majorUnit);\n  const last = ticks[ticks.length - 1].value;\n  let major, index;\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n    index = map[major];\n    if (index >= 0) {\n      ticks[index].major = true;\n    }\n  }\n  return ticks;\n}\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n  const ticks = [];\n  const map = {};\n  const ilen = values.length;\n  let i, value;\n  for (i = 0; i < ilen; ++i) {\n    value = values[i];\n    map[value] = i;\n    ticks.push({\n      value,\n      major: false\n    });\n  }\n  return (ilen === 0 || !majorUnit) ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\nclass TimeScale extends Scale {\n  constructor(props) {\n    super(props);\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n    this._unit = 'day';\n    this._majorUnit = undefined;\n    this._offsets = {};\n    this._normalized = false;\n    this._parseOpts = undefined;\n  }\n  init(scaleOpts, opts) {\n    const time = scaleOpts.time || (scaleOpts.time = {});\n    const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n    mergeIf(time.displayFormats, adapter.formats());\n    this._parseOpts = {\n      parser: time.parser,\n      round: time.round,\n      isoWeekday: time.isoWeekday\n    };\n    super.init(scaleOpts);\n    this._normalized = opts.normalized;\n  }\n  parse(raw, index) {\n    if (raw === undefined) {\n      return null;\n    }\n    return parse(this, raw);\n  }\n  beforeLayout() {\n    super.beforeLayout();\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n  }\n  determineDataLimits() {\n    const options = this.options;\n    const adapter = this._adapter;\n    const unit = options.time.unit || 'day';\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n    function _applyBounds(bounds) {\n      if (!minDefined && !isNaN(bounds.min)) {\n        min = Math.min(min, bounds.min);\n      }\n      if (!maxDefined && !isNaN(bounds.max)) {\n        max = Math.max(max, bounds.max);\n      }\n    }\n    if (!minDefined || !maxDefined) {\n      _applyBounds(this._getLabelBounds());\n      if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n        _applyBounds(this.getMinMax(false));\n      }\n    }\n    min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n    max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n    this.min = Math.min(min, max - 1);\n    this.max = Math.max(min + 1, max);\n  }\n  _getLabelBounds() {\n    const arr = this.getLabelTimestamps();\n    let min = Number.POSITIVE_INFINITY;\n    let max = Number.NEGATIVE_INFINITY;\n    if (arr.length) {\n      min = arr[0];\n      max = arr[arr.length - 1];\n    }\n    return {min, max};\n  }\n  buildTicks() {\n    const options = this.options;\n    const timeOpts = options.time;\n    const tickOpts = options.ticks;\n    const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n    if (options.bounds === 'ticks' && timestamps.length) {\n      this.min = this._userMin || timestamps[0];\n      this.max = this._userMax || timestamps[timestamps.length - 1];\n    }\n    const min = this.min;\n    const max = this.max;\n    const ticks = _filterBetween(timestamps, min, max);\n    this._unit = timeOpts.unit || (tickOpts.autoSkip\n      ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min))\n      : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n    this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined\n      : determineMajorUnit(this._unit);\n    this.initOffsets(timestamps);\n    if (options.reverse) {\n      ticks.reverse();\n    }\n    return ticksFromTimestamps(this, ticks, this._majorUnit);\n  }\n  afterAutoSkip() {\n    if (this.options.offsetAfterAutoskip) {\n      this.initOffsets(this.ticks.map(tick => +tick.value));\n    }\n  }\n  initOffsets(timestamps) {\n    let start = 0;\n    let end = 0;\n    let first, last;\n    if (this.options.offset && timestamps.length) {\n      first = this.getDecimalForValue(timestamps[0]);\n      if (timestamps.length === 1) {\n        start = 1 - first;\n      } else {\n        start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n      }\n      last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n      if (timestamps.length === 1) {\n        end = last;\n      } else {\n        end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n      }\n    }\n    const limit = timestamps.length < 3 ? 0.5 : 0.25;\n    start = _limitValue(start, 0, limit);\n    end = _limitValue(end, 0, limit);\n    this._offsets = {start, end, factor: 1 / (start + 1 + end)};\n  }\n  _generate() {\n    const adapter = this._adapter;\n    const min = this.min;\n    const max = this.max;\n    const options = this.options;\n    const timeOpts = options.time;\n    const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n    const stepSize = valueOrDefault(timeOpts.stepSize, 1);\n    const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    const hasWeekday = isNumber(weekday) || weekday === true;\n    const ticks = {};\n    let first = min;\n    let time, count;\n    if (hasWeekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n    }\n    first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n    if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n      throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n    }\n    const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n    for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n      addTick(ticks, time, timestamps);\n    }\n    if (time === max || options.bounds === 'ticks' || count === 1) {\n      addTick(ticks, time, timestamps);\n    }\n    return Object.keys(ticks).sort((a, b) => a - b).map(x => +x);\n  }\n  getLabelForValue(value) {\n    const adapter = this._adapter;\n    const timeOpts = this.options.time;\n    if (timeOpts.tooltipFormat) {\n      return adapter.format(value, timeOpts.tooltipFormat);\n    }\n    return adapter.format(value, timeOpts.displayFormats.datetime);\n  }\n  _tickFormatFunction(time, index, ticks, format) {\n    const options = this.options;\n    const formats = options.time.displayFormats;\n    const unit = this._unit;\n    const majorUnit = this._majorUnit;\n    const minorFormat = unit && formats[unit];\n    const majorFormat = majorUnit && formats[majorUnit];\n    const tick = ticks[index];\n    const major = majorUnit && majorFormat && tick && tick.major;\n    const label = this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n    const formatter = options.ticks.callback;\n    return formatter ? callback(formatter, [label, index, ticks], this) : label;\n  }\n  generateTickLabels(ticks) {\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      tick.label = this._tickFormatFunction(tick.value, i, ticks);\n    }\n  }\n  getDecimalForValue(value) {\n    return value === null ? NaN : (value - this.min) / (this.max - this.min);\n  }\n  getPixelForValue(value) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForValue(value);\n    return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return this.min + pos * (this.max - this.min);\n  }\n  _getLabelSize(label) {\n    const ticksOpts = this.options.ticks;\n    const tickLabelWidth = this.ctx.measureText(label).width;\n    const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n    const cosRotation = Math.cos(angle);\n    const sinRotation = Math.sin(angle);\n    const tickFontSize = this._resolveTickFontOptions(0).size;\n    return {\n      w: (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation),\n      h: (tickLabelWidth * sinRotation) + (tickFontSize * cosRotation)\n    };\n  }\n  _getLabelCapacity(exampleTime) {\n    const timeOpts = this.options.time;\n    const displayFormats = timeOpts.displayFormats;\n    const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n    const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [exampleTime], this._majorUnit), format);\n    const size = this._getLabelSize(exampleLabel);\n    const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n    return capacity > 0 ? capacity : 1;\n  }\n  getDataTimestamps() {\n    let timestamps = this._cache.data || [];\n    let i, ilen;\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const metas = this.getMatchingVisibleMetas();\n    if (this._normalized && metas.length) {\n      return (this._cache.data = metas[0].controller.getAllParsedValues(this));\n    }\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n    }\n    return (this._cache.data = this.normalize(timestamps));\n  }\n  getLabelTimestamps() {\n    const timestamps = this._cache.labels || [];\n    let i, ilen;\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const labels = this.getLabels();\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      timestamps.push(parse(this, labels[i]));\n    }\n    return (this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps));\n  }\n  normalize(values) {\n    return _arrayUnique(values.sort(sorter));\n  }\n}\nTimeScale.id = 'time';\nTimeScale.defaults = {\n  bounds: 'data',\n  adapters: {},\n  time: {\n    parser: false,\n    unit: false,\n    round: false,\n    isoWeekday: false,\n    minUnit: 'millisecond',\n    displayFormats: {}\n  },\n  ticks: {\n    source: 'auto',\n    major: {\n      enabled: false\n    }\n  }\n};\n\nfunction interpolate(table, val, reverse) {\n  let lo = 0;\n  let hi = table.length - 1;\n  let prevSource, nextSource, prevTarget, nextTarget;\n  if (reverse) {\n    if (val >= table[lo].pos && val <= table[hi].pos) {\n      ({lo, hi} = _lookupByKey(table, 'pos', val));\n    }\n    ({pos: prevSource, time: prevTarget} = table[lo]);\n    ({pos: nextSource, time: nextTarget} = table[hi]);\n  } else {\n    if (val >= table[lo].time && val <= table[hi].time) {\n      ({lo, hi} = _lookupByKey(table, 'time', val));\n    }\n    ({time: prevSource, pos: prevTarget} = table[lo]);\n    ({time: nextSource, pos: nextTarget} = table[hi]);\n  }\n  const span = nextSource - prevSource;\n  return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\nclass TimeSeriesScale extends TimeScale {\n  constructor(props) {\n    super(props);\n    this._table = [];\n    this._minPos = undefined;\n    this._tableRange = undefined;\n  }\n  initOffsets() {\n    const timestamps = this._getTimestampsForTable();\n    const table = this._table = this.buildLookupTable(timestamps);\n    this._minPos = interpolate(table, this.min);\n    this._tableRange = interpolate(table, this.max) - this._minPos;\n    super.initOffsets(timestamps);\n  }\n  buildLookupTable(timestamps) {\n    const {min, max} = this;\n    const items = [];\n    const table = [];\n    let i, ilen, prev, curr, next;\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n      if (curr >= min && curr <= max) {\n        items.push(curr);\n      }\n    }\n    if (items.length < 2) {\n      return [\n        {time: min, pos: 0},\n        {time: max, pos: 1}\n      ];\n    }\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      next = items[i + 1];\n      prev = items[i - 1];\n      curr = items[i];\n      if (Math.round((next + prev) / 2) !== curr) {\n        table.push({time: curr, pos: i / (ilen - 1)});\n      }\n    }\n    return table;\n  }\n  _getTimestampsForTable() {\n    let timestamps = this._cache.all || [];\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const data = this.getDataTimestamps();\n    const label = this.getLabelTimestamps();\n    if (data.length && label.length) {\n      timestamps = this.normalize(data.concat(label));\n    } else {\n      timestamps = data.length ? data : label;\n    }\n    timestamps = this._cache.all = timestamps;\n    return timestamps;\n  }\n  getDecimalForValue(value) {\n    return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n  }\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n  }\n}\nTimeSeriesScale.id = 'timeseries';\nTimeSeriesScale.defaults = TimeScale.defaults;\n\nvar scales = /*#__PURE__*/Object.freeze({\n__proto__: null,\nCategoryScale: CategoryScale,\nLinearScale: LinearScale,\nLogarithmicScale: LogarithmicScale,\nRadialLinearScale: RadialLinearScale,\nTimeScale: TimeScale,\nTimeSeriesScale: TimeSeriesScale\n});\n\nconst registerables = [\n  controllers,\n  elements,\n  plugins,\n  scales,\n];\n\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, index as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, plugin_subtitle as SubTitle, Ticks, TimeScale, TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, _detectPlatform, animator, controllers, elements, layouts, plugins, registerables, registry, scales };\n"],"sourceRoot":""}